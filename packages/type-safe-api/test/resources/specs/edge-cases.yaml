openapi: 3.0.3
info:
  version: 1.0.0
  title: Edge Cases
paths:
  /reserved-keywords:
    get:
      operationId: reservedKeywords
      parameters:
        - in: query
          name: with
          schema:
            type: string
        - in: query
          name: if
          schema:
            type: string
        - in: query
          name: class
          schema:
            type: string
      responses:
        200:
          description: ok
  /array-request-parameters:
    get:
      operationId: arrayRequestParameters
      parameters:
        - in: query
          name: my-string-array-request-params
          schema:
            type: array
            items:
              type: string
        - in: query
          name: my-enum-array-request-params
          schema:
            type: array
            items:
              $ref: "#/components/schemas/MyEnum"
        - in: query
          name: my-integer-array-request-params
          schema:
            type: array
            items:
              type: integer
        - in: query
          name: my-long-array-request-params
          schema:
            type: array
            items:
              type: integer
              format: int64
        - in: query
          name: my-int32-array-request-params
          schema:
            type: array
            items:
              type: integer
              format: int32
        - in: query
          name: my-number-array-request-params
          schema:
            type: array
            items:
              type: number
        - in: query
          name: my-float-array-request-params
          schema:
            type: array
            items:
              type: number
              format: float
        - in: query
          name: my-double-array-request-params
          schema:
            type: array
            items:
              type: number
              format: double
        - in: query
          name: my-enum-request-param
          schema:
            $ref: "#/components/schemas/MyEnum"
      responses:
        200:
          description: ok
  /inline-enum:
    get:
      operationId: inlineEnum
      responses:
        200:
          description: ok
          content:
            application/json:
              schema:
                type: object
                properties:
                  category:
                    type: string
                    enum:
                      - fruit
                      - vegetable
  /inline-request-body:
    post:
      operationId: inlineRequestBody
      responses:
        204:
          description: ok
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                someProperty:
                  type:
                    string
              required:
                - someProperty
  /named-one-of:
    post:
      operationId: namedOneOf
      responses:
        200:
          description: ok
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NamedOneOfUnion"
  /array-of-one-ofs:
    post:
      operationId: arrayOfOneOfs
      responses:
        200:
          description: ok
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ArrayOfOneOfs"
  /nested-collections:
    post:
      operationId: nestedCollections
      responses:
        200:
          description: ok
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NestedCollections"
  /additional-properties:
    post:
      operationId: dictionary
      responses:
        200:
          description: ok
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AdditionalPropertiesResponse"
components:
  schemas:
    MyEnum:
      type: string
      enum:
        - one
        - two
        - three
    NamedOneOfUnion:
      oneOf:
        - type: object
          title: namedOneOf
          properties:
            foo:
              type: string
        - type: object
          title: anotherNamedOneOf
          properties:
            bar:
              type: string
    ArrayOfOneOfs:
      type: object
      properties:
        oneOfs:
          type: array
          items:
            $ref: "#/components/schemas/NamedOneOfUnion"
    NestedCollections:
      type: object
      properties:
        nestedArrayOfStrings:
          type: array
          items:
            type: array
            items:
              type: string
        nestedArrayOfDates:
          type: array
          items:
            type: array
            items:
              type: string
              format: date
        nestedArrayOfObjects:
          type: array
          items:
            type: array
            items:
              $ref: "#/components/schemas/SomeObject"
        fourDimensionalNestedArrayOfObjects:
          type: array
          items:
            type: array
            items:
              type: array
              items:
                type: array
                items:
                  $ref: "#/components/schemas/SomeObject"
        nestedDictionaryOfStrings:
          type: object
          additionalProperties:
            type: object
            additionalProperties:
              type: string
        nestedDictionaryOfObjects:
          type: object
          additionalProperties:
            type: object
            additionalProperties:
              $ref: "#/components/schemas/SomeObject"
        fourDimensionalNestedDictionaryOfObjects:
          type: object
          additionalProperties:
            type: object
            additionalProperties:
              type: object
              additionalProperties:
                type: object
                additionalProperties:
                  $ref: "#/components/schemas/SomeObject"
        nestedMixOfDictionariesAndArrays:
          type: array
          items:
            type: object
            additionalProperties:
              type: array
              items:
                type: array
                items:
                  type: object
                  additionalProperties:
                    type: array
                    items:
                      $ref: "#/components/schemas/SomeObject"
        cycleArray:
          $ref: "#/components/schemas/CycleArray"
        cycleDictionary:
          $ref: "#/components/schemas/CycleDictionary"
    CycleArray:
      type: array
      items:
        $ref: "#/components/schemas/CycleArrayNode"
    CycleArrayNode:
      type: object
      properties:
        nodes:
          $ref: "#/components/schemas/CycleArray"
    CycleDictionary:
      type: object
      additionalProperties:
        $ref: "#/components/schemas/CycleDictionaryNode"
    CycleDictionaryNode:
      type: object
      properties:
        nodes:
          $ref: "#/components/schemas/CycleDictionary"
    AdditionalPropertiesResponse:
      type: object
      properties:
        dictionaryOfObjects:
          $ref: "#/components/schemas/Dictionary"
        dictionaryOfPrimitives:
          type: object
          additionalProperties:
            type: string
    Dictionary:
      type: object
      additionalProperties:
        type: array
        items:
          $ref: "#/components/schemas/SomeObject"
    SomeObject:
      type: object
      properties:
        a:
          type: string
