// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`PDK Pipeline Unit Tests CodeCommit Source - Defaults 1`] = `
{
  "Mappings": {
    "LatestNodeRuntimeMap": {
      "af-south-1": {
        "value": "nodejs20.x",
      },
      "ap-east-1": {
        "value": "nodejs20.x",
      },
      "ap-northeast-1": {
        "value": "nodejs20.x",
      },
      "ap-northeast-2": {
        "value": "nodejs20.x",
      },
      "ap-northeast-3": {
        "value": "nodejs20.x",
      },
      "ap-south-1": {
        "value": "nodejs20.x",
      },
      "ap-south-2": {
        "value": "nodejs20.x",
      },
      "ap-southeast-1": {
        "value": "nodejs20.x",
      },
      "ap-southeast-2": {
        "value": "nodejs20.x",
      },
      "ap-southeast-3": {
        "value": "nodejs20.x",
      },
      "ap-southeast-4": {
        "value": "nodejs20.x",
      },
      "ap-southeast-5": {
        "value": "nodejs20.x",
      },
      "ap-southeast-7": {
        "value": "nodejs20.x",
      },
      "ca-central-1": {
        "value": "nodejs20.x",
      },
      "ca-west-1": {
        "value": "nodejs20.x",
      },
      "cn-north-1": {
        "value": "nodejs18.x",
      },
      "cn-northwest-1": {
        "value": "nodejs18.x",
      },
      "eu-central-1": {
        "value": "nodejs20.x",
      },
      "eu-central-2": {
        "value": "nodejs20.x",
      },
      "eu-isoe-west-1": {
        "value": "nodejs18.x",
      },
      "eu-north-1": {
        "value": "nodejs20.x",
      },
      "eu-south-1": {
        "value": "nodejs20.x",
      },
      "eu-south-2": {
        "value": "nodejs20.x",
      },
      "eu-west-1": {
        "value": "nodejs20.x",
      },
      "eu-west-2": {
        "value": "nodejs20.x",
      },
      "eu-west-3": {
        "value": "nodejs20.x",
      },
      "il-central-1": {
        "value": "nodejs20.x",
      },
      "me-central-1": {
        "value": "nodejs20.x",
      },
      "me-south-1": {
        "value": "nodejs20.x",
      },
      "mx-central-1": {
        "value": "nodejs20.x",
      },
      "sa-east-1": {
        "value": "nodejs20.x",
      },
      "us-east-1": {
        "value": "nodejs20.x",
      },
      "us-east-2": {
        "value": "nodejs20.x",
      },
      "us-gov-east-1": {
        "value": "nodejs18.x",
      },
      "us-gov-west-1": {
        "value": "nodejs18.x",
      },
      "us-iso-east-1": {
        "value": "nodejs18.x",
      },
      "us-iso-west-1": {
        "value": "nodejs18.x",
      },
      "us-isob-east-1": {
        "value": "nodejs18.x",
      },
      "us-west-1": {
        "value": "nodejs20.x",
      },
      "us-west-2": {
        "value": "nodejs20.x",
      },
    },
  },
  "Outputs": {
    "DefaultsCodeRepositoryGRCUrlF9B2453F": {
      "Value": {
        "Fn::Join": [
          "",
          [
            "codecommit::",
            {
              "Ref": "AWS::Region",
            },
            "://",
            {
              "Fn::GetAtt": [
                "DefaultsCodeRepositoryBDE0B808",
                "Name",
              ],
            },
          ],
        ],
      },
    },
    "DefaultsSonarCodeScannerSonarqubeSecretArn61BE693F": {
      "Value": {
        "Ref": "DefaultsSonarCodeScannerSonarQubeTokenD1898305",
      },
    },
  },
  "Parameters": {
    "BootstrapVersion": {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": {
    "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F": {
      "DependsOn": [
        "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "faa95a81ae7d7373f3e1f242268f904eb748d8d0fdd306e8a6fe515a1905a7d6.zip",
        },
        "Description": {
          "Fn::Join": [
            "",
            [
              "Lambda function for auto-deleting objects in ",
              {
                "Ref": "DefaultsAccessLogsBucket1E788CBC",
              },
              " S3 bucket.",
            ],
          ],
        },
        "Handler": "index.handler",
        "MemorySize": 128,
        "Role": {
          "Fn::GetAtt": [
            "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
            "Arn",
          ],
        },
        "Runtime": {
          "Fn::FindInMap": [
            "LatestNodeRuntimeMap",
            {
              "Ref": "AWS::Region",
            },
            "value",
          ],
        },
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Sub": "arn:\${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "DefaultsAccessLogsBucket1E788CBC": {
      "DeletionPolicy": "Delete",
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": {
        "BucketEncryption": {
          "ServerSideEncryptionConfiguration": [
            {
              "ServerSideEncryptionByDefault": {
                "SSEAlgorithm": "AES256",
              },
            },
          ],
        },
        "OwnershipControls": {
          "Rules": [
            {
              "ObjectOwnership": "ObjectWriter",
            },
          ],
        },
        "PublicAccessBlockConfiguration": {
          "BlockPublicAcls": true,
          "BlockPublicPolicy": true,
          "IgnorePublicAcls": true,
          "RestrictPublicBuckets": true,
        },
        "Tags": [
          {
            "Key": "aws-cdk:auto-delete-objects",
            "Value": "true",
          },
        ],
      },
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Delete",
    },
    "DefaultsAccessLogsBucketAutoDeleteObjectsCustomResourceB315E04B": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "DefaultsAccessLogsBucketPolicy87291CAB",
      ],
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": {
        "BucketName": {
          "Ref": "DefaultsAccessLogsBucket1E788CBC",
        },
        "ServiceToken": {
          "Fn::GetAtt": [
            "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F",
            "Arn",
          ],
        },
      },
      "Type": "Custom::S3AutoDeleteObjects",
      "UpdateReplacePolicy": "Delete",
    },
    "DefaultsAccessLogsBucketPolicy87291CAB": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": {
        "Bucket": {
          "Ref": "DefaultsAccessLogsBucket1E788CBC",
        },
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "s3:*",
              "Condition": {
                "Bool": {
                  "aws:SecureTransport": "false",
                },
              },
              "Effect": "Deny",
              "Principal": {
                "AWS": "*",
              },
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "DefaultsAccessLogsBucket1E788CBC",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "DefaultsAccessLogsBucket1E788CBC",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": [
                "s3:PutBucketPolicy",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
              ],
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::GetAtt": [
                    "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
                    "Arn",
                  ],
                },
              },
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "DefaultsAccessLogsBucket1E788CBC",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "DefaultsAccessLogsBucket1E788CBC",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": "s3:PutObject",
              "Condition": {
                "ArnLike": {
                  "aws:SourceArn": {
                    "Fn::GetAtt": [
                      "DefaultsArtifactsBucket267E29E1",
                      "Arn",
                    ],
                  },
                },
                "StringEquals": {
                  "aws:SourceAccount": {
                    "Ref": "AWS::AccountId",
                  },
                },
              },
              "Effect": "Allow",
              "Principal": {
                "Service": "logging.s3.amazonaws.com",
              },
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    {
                      "Fn::GetAtt": [
                        "DefaultsAccessLogsBucket1E788CBC",
                        "Arn",
                      ],
                    },
                    "/access-logs*",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::S3::BucketPolicy",
    },
    "DefaultsArtifactsBucket267E29E1": {
      "DeletionPolicy": "Delete",
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": {
        "BucketEncryption": {
          "ServerSideEncryptionConfiguration": [
            {
              "ServerSideEncryptionByDefault": {
                "SSEAlgorithm": "AES256",
              },
            },
          ],
        },
        "LoggingConfiguration": {
          "DestinationBucketName": {
            "Ref": "DefaultsAccessLogsBucket1E788CBC",
          },
          "LogFilePrefix": "access-logs",
        },
        "OwnershipControls": {
          "Rules": [
            {
              "ObjectOwnership": "BucketOwnerEnforced",
            },
          ],
        },
        "PublicAccessBlockConfiguration": {
          "BlockPublicAcls": true,
          "BlockPublicPolicy": true,
          "IgnorePublicAcls": true,
          "RestrictPublicBuckets": true,
        },
        "Tags": [
          {
            "Key": "aws-cdk:auto-delete-objects",
            "Value": "true",
          },
        ],
      },
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Delete",
    },
    "DefaultsArtifactsBucketAutoDeleteObjectsCustomResourceED1B0B57": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "DefaultsArtifactsBucketPolicyA6159620",
      ],
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": {
        "BucketName": {
          "Ref": "DefaultsArtifactsBucket267E29E1",
        },
        "ServiceToken": {
          "Fn::GetAtt": [
            "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F",
            "Arn",
          ],
        },
      },
      "Type": "Custom::S3AutoDeleteObjects",
      "UpdateReplacePolicy": "Delete",
    },
    "DefaultsArtifactsBucketPolicyA6159620": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": {
        "Bucket": {
          "Ref": "DefaultsArtifactsBucket267E29E1",
        },
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "s3:*",
              "Condition": {
                "Bool": {
                  "aws:SecureTransport": "false",
                },
              },
              "Effect": "Deny",
              "Principal": {
                "AWS": "*",
              },
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "DefaultsArtifactsBucket267E29E1",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "DefaultsArtifactsBucket267E29E1",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": [
                "s3:PutBucketPolicy",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
              ],
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::GetAtt": [
                    "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
                    "Arn",
                  ],
                },
              },
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "DefaultsArtifactsBucket267E29E1",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "DefaultsArtifactsBucket267E29E1",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
              ],
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":role/cdk-hnb659fds-deploy-role-",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      "-",
                      {
                        "Ref": "AWS::Region",
                      },
                    ],
                  ],
                },
              },
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "DefaultsArtifactsBucket267E29E1",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "DefaultsArtifactsBucket267E29E1",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::S3::BucketPolicy",
    },
    "DefaultsAssetsFileAsset1C016008C": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": {
        "Artifacts": {
          "Type": "CODEPIPELINE",
        },
        "Cache": {
          "Type": "NO_CACHE",
        },
        "Description": "Pipeline step Default/CodePipeline/Assets/FileAsset1",
        "EncryptionKey": "alias/aws/s3",
        "Environment": {
          "ComputeType": "BUILD_GENERAL1_SMALL",
          "Image": "aws/codebuild/standard:7.0",
          "ImagePullCredentialsType": "CODEBUILD",
          "PrivilegedMode": false,
          "Type": "LINUX_CONTAINER",
        },
        "ServiceRole": {
          "Fn::GetAtt": [
            "DefaultsAssetsFileRole651D25B9",
            "Arn",
          ],
        },
        "Source": {
          "BuildSpec": "{
  "version": "0.2",
  "phases": {
    "install": {
      "commands": [
        "npm install -g cdk-assets@latest"
      ]
    },
    "build": {
      "commands": [
        "cdk-assets --path \\"assembly-Stage/StageAppStack7618C9EF.assets.json\\" --verbose publish \\"14dd2d75ed909331e6d3efb3db54ed40dc6bd19804f86e266387ad8934897c85:current_account-current_region\\""
      ]
    }
  }
}",
          "Type": "CODEPIPELINE",
        },
      },
      "Type": "AWS::CodeBuild::Project",
    },
    "DefaultsAssetsFileRole651D25B9": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "codebuild.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "DefaultsAssetsFileRoleDefaultPolicy3887BD04": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "logs:CreateLogGroup",
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":logs:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":log-group:/aws/codebuild/*",
                  ],
                ],
              },
            },
            {
              "Action": [
                "codebuild:CreateReportGroup",
                "codebuild:CreateReport",
                "codebuild:UpdateReport",
                "codebuild:BatchPutTestCases",
                "codebuild:BatchPutCodeCoverages",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":codebuild:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":report-group/*",
                  ],
                ],
              },
            },
            {
              "Action": [
                "codebuild:BatchGetBuilds",
                "codebuild:StartBuild",
                "codebuild:StopBuild",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Resource": {
                "Fn::Sub": "arn:\${AWS::Partition}:iam::\${AWS::AccountId}:role/cdk-hnb659fds-file-publishing-role-\${AWS::AccountId}-\${AWS::Region}",
              },
            },
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "DefaultsArtifactsBucket267E29E1",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "DefaultsArtifactsBucket267E29E1",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "DefaultsAssetsFileRoleDefaultPolicy3887BD04",
        "Roles": [
          {
            "Ref": "DefaultsAssetsFileRole651D25B9",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "DefaultsCodeBuildActionRole26049CBA": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::GetAtt": [
                    "DefaultsCodePipelineRoleF466C0E3",
                    "Arn",
                  ],
                },
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "DefaultsCodeBuildActionRoleDefaultPolicy0F3A543D": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "codebuild:BatchGetBuilds",
                "codebuild:StartBuild",
                "codebuild:StopBuild",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "DefaultsCodePipelineBuildSynthCdkBuildProject81772484",
                  "Arn",
                ],
              },
            },
            {
              "Action": [
                "codebuild:BatchGetBuilds",
                "codebuild:StartBuild",
                "codebuild:StopBuild",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "DefaultsUpdatePipelineSelfMutationD1F1D812",
                  "Arn",
                ],
              },
            },
            {
              "Action": [
                "codebuild:BatchGetBuilds",
                "codebuild:StartBuild",
                "codebuild:StopBuild",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "DefaultsAssetsFileAsset1C016008C",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "DefaultsCodeBuildActionRoleDefaultPolicy0F3A543D",
        "Roles": [
          {
            "Ref": "DefaultsCodeBuildActionRole26049CBA",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "DefaultsCodePipelineBuildSynthCdkBuildProject81772484": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": {
        "Artifacts": {
          "Type": "CODEPIPELINE",
        },
        "Cache": {
          "Type": "NO_CACHE",
        },
        "Description": "Pipeline step Default/CodePipeline/Build/Synth",
        "EncryptionKey": "alias/aws/s3",
        "Environment": {
          "ComputeType": "BUILD_GENERAL1_SMALL",
          "Image": "aws/codebuild/standard:7.0",
          "ImagePullCredentialsType": "CODEBUILD",
          "PrivilegedMode": false,
          "Type": "LINUX_CONTAINER",
        },
        "ServiceRole": {
          "Fn::GetAtt": [
            "DefaultsCodePipelineBuildSynthCdkBuildProjectRoleA72DCE39",
            "Arn",
          ],
        },
        "Source": {
          "BuildSpec": "{
  "version": "0.2",
  "phases": {
    "install": {
      "commands": [
        "npm install -g aws-cdk pnpm",
        "npx projen install"
      ]
    },
    "build": {
      "commands": [
        "npx projen build"
      ]
    }
  },
  "artifacts": {
    "secondary-artifacts": {
      "Synth_Output": {
        "base-directory": "cdk.out",
        "files": "**/*"
      },
      "Synth__": {
        "base-directory": ".",
        "files": "**/*"
      }
    }
  }
}",
          "Type": "CODEPIPELINE",
        },
      },
      "Type": "AWS::CodeBuild::Project",
    },
    "DefaultsCodePipelineBuildSynthCdkBuildProjectRoleA72DCE39": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "codebuild.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "DefaultsCodePipelineBuildSynthCdkBuildProjectRoleDefaultPolicyC0AFF59F": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "logs:CreateLogGroup",
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":logs:",
                      {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":log-group:/aws/codebuild/",
                      {
                        "Ref": "DefaultsCodePipelineBuildSynthCdkBuildProject81772484",
                      },
                    ],
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":logs:",
                      {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":log-group:/aws/codebuild/",
                      {
                        "Ref": "DefaultsCodePipelineBuildSynthCdkBuildProject81772484",
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": [
                "codebuild:CreateReportGroup",
                "codebuild:CreateReport",
                "codebuild:UpdateReport",
                "codebuild:BatchPutTestCases",
                "codebuild:BatchPutCodeCoverages",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":codebuild:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":report-group/",
                    {
                      "Ref": "DefaultsCodePipelineBuildSynthCdkBuildProject81772484",
                    },
                    "-*",
                  ],
                ],
              },
            },
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
                "s3:PutObject",
                "s3:PutObjectLegalHold",
                "s3:PutObjectRetention",
                "s3:PutObjectTagging",
                "s3:PutObjectVersionTagging",
                "s3:Abort*",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "DefaultsArtifactsBucket267E29E1",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "DefaultsArtifactsBucket267E29E1",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "DefaultsCodePipelineBuildSynthCdkBuildProjectRoleDefaultPolicyC0AFF59F",
        "Roles": [
          {
            "Ref": "DefaultsCodePipelineBuildSynthCdkBuildProjectRoleA72DCE39",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "DefaultsCodePipelineDAB2FB72": {
      "DependsOn": [
        "DefaultsCodePipelineRoleDefaultPolicyF4A44365",
        "DefaultsCodePipelineRoleF466C0E3",
      ],
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": {
        "ArtifactStore": {
          "Location": {
            "Ref": "DefaultsArtifactsBucket267E29E1",
          },
          "Type": "S3",
        },
        "PipelineType": "V1",
        "RestartExecutionOnUpdate": true,
        "RoleArn": {
          "Fn::GetAtt": [
            "DefaultsCodePipelineRoleF466C0E3",
            "Arn",
          ],
        },
        "Stages": [
          {
            "Actions": [
              {
                "ActionTypeId": {
                  "Category": "Source",
                  "Owner": "AWS",
                  "Provider": "CodeCommit",
                  "Version": "1",
                },
                "Configuration": {
                  "BranchName": "mainline",
                  "PollForSourceChanges": false,
                  "RepositoryName": {
                    "Fn::GetAtt": [
                      "DefaultsCodeRepositoryBDE0B808",
                      "Name",
                    ],
                  },
                },
                "Name": {
                  "Fn::GetAtt": [
                    "DefaultsCodeRepositoryBDE0B808",
                    "Name",
                  ],
                },
                "OutputArtifacts": [
                  {
                    "Name": "c8be7966da6130450b89fe7dd9dced39142a8f041d_Source",
                  },
                ],
                "RoleArn": {
                  "Fn::GetAtt": [
                    "DefaultsCodePipelineSourceCodeCommitCodePipelineActionRole1F53CA96",
                    "Arn",
                  ],
                },
                "RunOrder": 1,
              },
            ],
            "Name": "Source",
          },
          {
            "Actions": [
              {
                "ActionTypeId": {
                  "Category": "Build",
                  "Owner": "AWS",
                  "Provider": "CodeBuild",
                  "Version": "1",
                },
                "Configuration": {
                  "EnvironmentVariables": "[{"name":"_PROJECT_CONFIG_HASH","type":"PLAINTEXT","value":"1743fe23e45e6f2b0fdc043d5f0f1105f88a2596949f76d42fb43084b867d9ae"}]",
                  "ProjectName": {
                    "Ref": "DefaultsCodePipelineBuildSynthCdkBuildProject81772484",
                  },
                },
                "InputArtifacts": [
                  {
                    "Name": "c8be7966da6130450b89fe7dd9dced39142a8f041d_Source",
                  },
                ],
                "Name": "Synth",
                "OutputArtifacts": [
                  {
                    "Name": "Synth_Output",
                  },
                  {
                    "Name": "Synth__",
                  },
                ],
                "RoleArn": {
                  "Fn::GetAtt": [
                    "DefaultsCodeBuildActionRole26049CBA",
                    "Arn",
                  ],
                },
                "RunOrder": 1,
              },
            ],
            "Name": "Build",
          },
          {
            "Actions": [
              {
                "ActionTypeId": {
                  "Category": "Build",
                  "Owner": "AWS",
                  "Provider": "CodeBuild",
                  "Version": "1",
                },
                "Configuration": {
                  "EnvironmentVariables": "[{"name":"_PROJECT_CONFIG_HASH","type":"PLAINTEXT","value":"f5c136b42f09ed582b9273672c6585264fb7142640d362897bd6649d732584c2"}]",
                  "ProjectName": {
                    "Ref": "DefaultsUpdatePipelineSelfMutationD1F1D812",
                  },
                },
                "InputArtifacts": [
                  {
                    "Name": "Synth_Output",
                  },
                ],
                "Name": "SelfMutate",
                "RoleArn": {
                  "Fn::GetAtt": [
                    "DefaultsCodeBuildActionRole26049CBA",
                    "Arn",
                  ],
                },
                "RunOrder": 1,
              },
            ],
            "Name": "UpdatePipeline",
          },
          {
            "Actions": [
              {
                "ActionTypeId": {
                  "Category": "Build",
                  "Owner": "AWS",
                  "Provider": "CodeBuild",
                  "Version": "1",
                },
                "Configuration": {
                  "ProjectName": {
                    "Ref": "DefaultsAssetsFileAsset1C016008C",
                  },
                },
                "InputArtifacts": [
                  {
                    "Name": "Synth_Output",
                  },
                ],
                "Name": "FileAsset1",
                "RoleArn": {
                  "Fn::GetAtt": [
                    "DefaultsCodeBuildActionRole26049CBA",
                    "Arn",
                  ],
                },
                "RunOrder": 1,
              },
            ],
            "Name": "Assets",
          },
          {
            "Actions": [
              {
                "ActionTypeId": {
                  "Category": "Deploy",
                  "Owner": "AWS",
                  "Provider": "CloudFormation",
                  "Version": "1",
                },
                "Configuration": {
                  "ActionMode": "CHANGE_SET_REPLACE",
                  "Capabilities": "CAPABILITY_NAMED_IAM,CAPABILITY_AUTO_EXPAND",
                  "ChangeSetName": "PipelineChange",
                  "RoleArn": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition",
                        },
                        ":iam::",
                        {
                          "Ref": "AWS::AccountId",
                        },
                        ":role/cdk-hnb659fds-cfn-exec-role-",
                        {
                          "Ref": "AWS::AccountId",
                        },
                        "-",
                        {
                          "Ref": "AWS::Region",
                        },
                      ],
                    ],
                  },
                  "StackName": "Stage-AppStack",
                  "TemplatePath": "Synth_Output::assembly-Stage/StageAppStack7618C9EF.template.json",
                },
                "InputArtifacts": [
                  {
                    "Name": "Synth_Output",
                  },
                ],
                "Name": "Prepare",
                "RoleArn": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":role/cdk-hnb659fds-deploy-role-",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      "-",
                      {
                        "Ref": "AWS::Region",
                      },
                    ],
                  ],
                },
                "RunOrder": 1,
              },
              {
                "ActionTypeId": {
                  "Category": "Deploy",
                  "Owner": "AWS",
                  "Provider": "CloudFormation",
                  "Version": "1",
                },
                "Configuration": {
                  "ActionMode": "CHANGE_SET_EXECUTE",
                  "ChangeSetName": "PipelineChange",
                  "StackName": "Stage-AppStack",
                },
                "Name": "Deploy",
                "RoleArn": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":role/cdk-hnb659fds-deploy-role-",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      "-",
                      {
                        "Ref": "AWS::Region",
                      },
                    ],
                  ],
                },
                "RunOrder": 2,
              },
            ],
            "Name": "Stage",
          },
        ],
      },
      "Type": "AWS::CodePipeline::Pipeline",
    },
    "DefaultsCodePipelineEventsRole44B0ACD2": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "events.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "DefaultsCodePipelineEventsRoleDefaultPolicyB0676072": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "codepipeline:StartPipelineExecution",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":codepipeline:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":",
                    {
                      "Ref": "DefaultsCodePipelineDAB2FB72",
                    },
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "DefaultsCodePipelineEventsRoleDefaultPolicyB0676072",
        "Roles": [
          {
            "Ref": "DefaultsCodePipelineEventsRole44B0ACD2",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "DefaultsCodePipelineRoleDefaultPolicyF4A44365": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
                "s3:PutObject",
                "s3:PutObjectLegalHold",
                "s3:PutObjectRetention",
                "s3:PutObjectTagging",
                "s3:PutObjectVersionTagging",
                "s3:Abort*",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "DefaultsArtifactsBucket267E29E1",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "DefaultsArtifactsBucket267E29E1",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "DefaultsCodePipelineSourceCodeCommitCodePipelineActionRole1F53CA96",
                  "Arn",
                ],
              },
            },
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "DefaultsCodeBuildActionRole26049CBA",
                  "Arn",
                ],
              },
            },
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":iam::",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":role/cdk-hnb659fds-deploy-role-",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    "-",
                    {
                      "Ref": "AWS::Region",
                    },
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "DefaultsCodePipelineRoleDefaultPolicyF4A44365",
        "Roles": [
          {
            "Ref": "DefaultsCodePipelineRoleF466C0E3",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "DefaultsCodePipelineRoleF466C0E3": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "codepipeline.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "DefaultsCodePipelineSourceCodeCommitCodePipelineActionRole1F53CA96": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":root",
                    ],
                  ],
                },
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "DefaultsCodePipelineSourceCodeCommitCodePipelineActionRoleDefaultPolicyF3026D6A": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
                "s3:PutObject",
                "s3:PutObjectLegalHold",
                "s3:PutObjectRetention",
                "s3:PutObjectTagging",
                "s3:PutObjectVersionTagging",
                "s3:Abort*",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "DefaultsArtifactsBucket267E29E1",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "DefaultsArtifactsBucket267E29E1",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": [
                "codecommit:GetBranch",
                "codecommit:GetCommit",
                "codecommit:UploadArchive",
                "codecommit:GetUploadArchiveStatus",
                "codecommit:CancelUploadArchive",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "DefaultsCodeRepositoryBDE0B808",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "DefaultsCodePipelineSourceCodeCommitCodePipelineActionRoleDefaultPolicyF3026D6A",
        "Roles": [
          {
            "Ref": "DefaultsCodePipelineSourceCodeCommitCodePipelineActionRole1F53CA96",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "DefaultsCodeRepositoryBDE0B808": {
      "DeletionPolicy": "Retain",
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": {
        "RepositoryName": "Defaults",
      },
      "Type": "AWS::CodeCommit::Repository",
      "UpdateReplacePolicy": "Retain",
    },
    "DefaultsCodeRepositoryDefaultsCodePipeline4E276C62mainlineEventRule67A64C52": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": {
        "EventPattern": {
          "detail": {
            "event": [
              "referenceCreated",
              "referenceUpdated",
            ],
            "referenceName": [
              "mainline",
            ],
          },
          "detail-type": [
            "CodeCommit Repository State Change",
          ],
          "resources": [
            {
              "Fn::GetAtt": [
                "DefaultsCodeRepositoryBDE0B808",
                "Arn",
              ],
            },
          ],
          "source": [
            "aws.codecommit",
          ],
        },
        "State": "ENABLED",
        "Targets": [
          {
            "Arn": {
              "Fn::Join": [
                "",
                [
                  "arn:",
                  {
                    "Ref": "AWS::Partition",
                  },
                  ":codepipeline:",
                  {
                    "Ref": "AWS::Region",
                  },
                  ":",
                  {
                    "Ref": "AWS::AccountId",
                  },
                  ":",
                  {
                    "Ref": "DefaultsCodePipelineDAB2FB72",
                  },
                ],
              ],
            },
            "Id": "Target0",
            "RoleArn": {
              "Fn::GetAtt": [
                "DefaultsCodePipelineEventsRole44B0ACD2",
                "Arn",
              ],
            },
          },
        ],
      },
      "Type": "AWS::Events::Rule",
    },
    "DefaultsSonarCodeScannerSonarQubeTokenD1898305": {
      "DeletionPolicy": "Delete",
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-SMG4",
              "reason": "Key rotation is not possible as a user token needs to be generated from Sonarqube",
            },
            {
              "id": "AwsPrototyping-SecretsManagerRotationEnabled",
              "reason": "Key rotation is not possible as a user token needs to be generated from Sonarqube",
            },
            {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": {
        "GenerateSecretString": {},
      },
      "Type": "AWS::SecretsManager::Secret",
      "UpdateReplacePolicy": "Delete",
    },
    "DefaultsSonarCodeScannerSynthBuildProjectOnSynthSuccessE7E65027": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": {
        "EventPattern": {
          "detail": {
            "build-status": [
              "SUCCEEDED",
            ],
            "project-name": [
              {
                "Fn::Select": [
                  1,
                  {
                    "Fn::Split": [
                      "/",
                      {
                        "Fn::Select": [
                          5,
                          {
                            "Fn::Split": [
                              ":",
                              {
                                "Fn::GetAtt": [
                                  "DefaultsCodePipelineBuildSynthCdkBuildProject81772484",
                                  "Arn",
                                ],
                              },
                            ],
                          },
                        ],
                      },
                    ],
                  },
                ],
              },
            ],
          },
          "detail-type": [
            "CodeBuild Build State Change",
          ],
          "source": [
            "aws.codebuild",
          ],
        },
        "State": "ENABLED",
        "Targets": [
          {
            "Arn": {
              "Fn::GetAtt": [
                "DefaultsSonarCodeScannerValidationProjectFAE7BAD0",
                "Arn",
              ],
            },
            "Id": "Target0",
            "InputTransformer": {
              "InputPathsMap": {
                "detail-build-id": "$.detail.build-id",
              },
              "InputTemplate": "{"environmentVariablesOverride":[{"name":"SYNTH_BUILD_ID","type":"PLAINTEXT","value":<detail-build-id>}]}",
            },
            "RoleArn": {
              "Fn::GetAtt": [
                "DefaultsSonarCodeScannerValidationProjectEventsRole18DD9D4A",
                "Arn",
              ],
            },
          },
        ],
      },
      "Type": "AWS::Events::Rule",
    },
    "DefaultsSonarCodeScannerValidationProjectEventsRole18DD9D4A": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "events.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "DefaultsSonarCodeScannerValidationProjectEventsRoleDefaultPolicy6C4FE447": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "codebuild:StartBuild",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "DefaultsSonarCodeScannerValidationProjectFAE7BAD0",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "DefaultsSonarCodeScannerValidationProjectEventsRoleDefaultPolicy6C4FE447",
        "Roles": [
          {
            "Ref": "DefaultsSonarCodeScannerValidationProjectEventsRole18DD9D4A",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "DefaultsSonarCodeScannerValidationProjectFAE7BAD0": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": {
        "Artifacts": {
          "Type": "NO_ARTIFACTS",
        },
        "Cache": {
          "Type": "NO_CACHE",
        },
        "EncryptionKey": "alias/aws/s3",
        "Environment": {
          "ComputeType": "BUILD_GENERAL1_SMALL",
          "EnvironmentVariables": [
            {
              "Name": "SONARQUBE_TOKEN",
              "Type": "SECRETS_MANAGER",
              "Value": {
                "Ref": "DefaultsSonarCodeScannerSonarQubeTokenD1898305",
              },
            },
            {
              "Name": "SONARQUBE_ENDPOINT",
              "Type": "PLAINTEXT",
              "Value": "https://sonar.dev",
            },
            {
              "Name": "PROJECT_NAME",
              "Type": "PLAINTEXT",
              "Value": "Default",
            },
          ],
          "Image": "aws/codebuild/standard:5.0",
          "ImagePullCredentialsType": "CODEBUILD",
          "PrivilegedMode": false,
          "Type": "LINUX_CONTAINER",
        },
        "ServiceRole": {
          "Fn::GetAtt": [
            "DefaultsSonarCodeScannerValidationProjectRole6AF1A9E5",
            "Arn",
          ],
        },
        "Source": {
          "BuildSpec": "{
  "version": "0.2",
  "env": {
    "shell": "bash"
  },
  "phases": {
    "install": {
      "commands": [
        "npm install -g aws-cdk",
        "gem install cfn-nag"
      ]
    },
    "build": {
      "commands": [
        "export RESOLVED_SOURCE_VERSION=\`aws codebuild batch-get-builds --ids $SYNTH_BUILD_ID | jq -r '.builds[0].resolvedSourceVersion'\`",
        "export BUILT_ARTIFACT_URI=\`aws codebuild batch-get-builds --ids $SYNTH_BUILD_ID | jq -r '.builds[0].secondaryArtifacts[] | select(.artifactIdentifier == \\"Synth__\\") | .location' | awk '{sub(\\"arn:aws:s3:::\\",\\"s3://\\")}1' $1\`",
        "export SYNTH_SOURCE_URI=\`aws codebuild batch-get-builds --ids $SYNTH_BUILD_ID | jq -r '.builds[0].sourceVersion' | awk '{sub(\\"arn:aws:s3:::\\",\\"s3://\\")}1' $1\`",
        "aws s3 cp $SYNTH_SOURCE_URI source.zip",
        "aws s3 cp $BUILT_ARTIFACT_URI built.zip",
        "unzip source.zip -d src",
        "unzip built.zip -d built",
        "rm source.zip built.zip",
        "rsync -a built/* src --include=\\"*/\\"  --include=\\"**/coverage/**\\" --include=\\"**/cdk.out/**\\" --exclude=\\"**/node_modules/**/*\\" --exclude=\\"**/.env/**\\" --exclude=\\"*\\" --prune-empty-dirs",
        "CREATE_PROJECT_OUTPUT=\`curl -X POST -u $SONARQUBE_TOKEN: \\"$SONARQUBE_ENDPOINT/api/projects/create?name=$PROJECT_NAME&project=$PROJECT_NAME&visibility=private\\" \`",
        "if [[ \\"$(echo $CREATE_PROJECT_OUTPUT | jq .errors)\\" == \\"null\\" ]]; then curl -X POST -u $SONARQUBE_TOKEN: \\"$SONARQUBE_ENDPOINT/api/permissions/add_group?projectKey=$PROJECT_NAME&groupName=dev&permission=admin\\" ;curl -X POST -u $SONARQUBE_TOKEN: \\"$SONARQUBE_ENDPOINT/api/permissions/add_group?projectKey=$PROJECT_NAME&groupName=dev&permission=codeviewer\\" ;curl -X POST -u $SONARQUBE_TOKEN: \\"$SONARQUBE_ENDPOINT/api/permissions/add_group?projectKey=$PROJECT_NAME&groupName=dev&permission=issueadmin\\" ;curl -X POST -u $SONARQUBE_TOKEN: \\"$SONARQUBE_ENDPOINT/api/permissions/add_group?projectKey=$PROJECT_NAME&groupName=dev&permission=securityhotspotadmin\\" ;curl -X POST -u $SONARQUBE_TOKEN: \\"$SONARQUBE_ENDPOINT/api/permissions/add_group?projectKey=$PROJECT_NAME&groupName=dev&permission=scan\\" ;curl -X POST -u $SONARQUBE_TOKEN: \\"$SONARQUBE_ENDPOINT/api/permissions/add_group?projectKey=$PROJECT_NAME&groupName=dev&permission=user\\" ;curl -X POST -u $SONARQUBE_TOKEN: \\"$SONARQUBE_ENDPOINT/api/project_branches/rename?project=$PROJECT_NAME&name=mainline\\" ;curl -X POST -u $SONARQUBE_TOKEN: \\"$SONARQUBE_ENDPOINT/api/project_tags/set?project=$PROJECT_NAME&tags=dev\\" ;export DEFAULT_PROFILE=\`curl -X GET -u $SONARQUBE_TOKEN: \\"$SONARQUBE_ENDPOINT/api/qualityprofiles/search?qualityProfile=dev\\"  | jq .profiles\`;export SPECIFIC_PROFILE=\`curl -X GET -u $SONARQUBE_TOKEN: \\"$SONARQUBE_ENDPOINT/api/qualityprofiles/search?qualityProfile=undefined\\"  | jq .profiles\`;export MERGED_PROFILES=\`jq --argjson arr1 \\"$DEFAULT_PROFILE\\" --argjson arr2 \\"$SPECIFIC_PROFILE\\" -n '$arr1 + $arr2 | group_by(.language) | map(.[-1])'\`;echo $MERGED_PROFILES | jq -c '.[]' | while read i; do curl -X POST -u $SONARQUBE_TOKEN: \\"$SONARQUBE_ENDPOINT/api/qualityprofiles/add_project?project=$PROJECT_NAME&language=\`echo $i | jq -r .language\`&qualityProfile=\`echo $i | jq -r .name\`\\" ; done;export DEFAULT_GATE=\`curl -X GET -u $SONARQUBE_TOKEN: \\"$SONARQUBE_ENDPOINT/api/qualitygates/search?gateName=dev\\" \`;export SPECIFIC_GATE=\`curl -X GET -u $SONARQUBE_TOKEN: \\"$SONARQUBE_ENDPOINT/api/qualitygates/search?gateName=undefined\\" \`;if [[ \\"$(echo $SPECIFIC_GATE | jq .errors)\\" == \\"null\\" && \\"$(echo $SPECIFIC_GATE | jq '.results | length')\\" -gt 0 ]]; then export GATE_NAME=undefined; else export GATE_NAME=dev; fi;curl -X POST -u $SONARQUBE_TOKEN: \\"$SONARQUBE_ENDPOINT/api/qualitygates/select?projectKey=$PROJECT_NAME&gateName=$GATE_NAME\\" ; fi;",
        "mkdir -p src/reports",
        "npx owasp-dependency-check --format HTML --out src/reports --exclude '**/.git/**/*' --scan src --enableExperimental --bin /tmp/dep-check --disableRetireJS",
        "cfn_nag  built/cdk.out/**/*.template.json --output-format=json > src/reports/cfn-nag-report.json",
        "cd src",
        "npx sonarqube-scanner -Dsonar.login=$SONARQUBE_TOKEN -Dsonar.projectKey=$PROJECT_NAME -Dsonar.projectName=$PROJECT_NAME -Dsonar.projectVersion=\`echo $RESOLVED_SOURCE_VERSION | cut -c1-7\` -Dsonar.branch.name=mainline -Dsonar.host.url=$SONARQUBE_ENDPOINT -Dsonar.cfn.nag.reportFiles=reports/cfn-nag-report.json -Dsonar.dependencyCheck.htmlReportPath=reports/dependency-check-report.html -Dsonar.javascript.lcov.reportPaths=**/coverage/lcov.info -Dsonar.clover.reportPath=**/coverage/clover.xml -Dsonar.exclusions=\\"**/reports/**,**/coverage/**\\" -Dsonar.sources=.",
        "curl -X GET -u $SONARQUBE_TOKEN: \\"$SONARQUBE_ENDPOINT/api/bitegarden/report/pdf_issues_breakdown?resource=$PROJECT_NAME&branch=mainline\\" --output reports/prototype-issues-report.pdf",
        "curl -X GET -u $SONARQUBE_TOKEN: \\"$SONARQUBE_ENDPOINT/api/bitegarden/report/pdf?resource=$PROJECT_NAME&branch=mainline\\" --output reports/prototype-executive-report.pdf",
        "curl -X GET -u $SONARQUBE_TOKEN: \\"$SONARQUBE_ENDPOINT/api/security_reports/download?project=$PROJECT_NAME\\" --output reports/prototype-security-report.pdf"
      ]
    }
  }
}",
          "Type": "NO_SOURCE",
        },
      },
      "Type": "AWS::CodeBuild::Project",
    },
    "DefaultsSonarCodeScannerValidationProjectRole6AF1A9E5": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "applies_to": [
                {
                  "regex": "/^Resource::arn:<AWS::Partition>:logs:<AWS::Region>:<AWS::AccountId>:log-group:/aws/codebuild/<.*SonarCodeScannerValidationProject.*>:\\*$/g",
                },
                {
                  "regex": "/^Resource::arn:<AWS::Partition>:codebuild:<AWS::Region>:<AWS::AccountId>:report-group/<.*SonarCodeScannerValidationProject.*>-\\*$/g",
                },
                {
                  "regex": "/^Action::s3:GetObject\\*$/g",
                },
                {
                  "regex": "/^Resource::<ArtifactsBucket.*.Arn>/\\*\\*$/g",
                },
              ],
              "id": "AwsSolutions-IAM5",
              "reason": "Validation CodeBuild project requires access to the ArtifactsBucket and ability to create logs.",
            },
            {
              "applies_to": [
                {
                  "regex": "/^Resource::arn:<AWS::Partition>:logs:<AWS::Region>:<AWS::AccountId>:log-group:/aws/codebuild/<.*SonarCodeScannerValidationProject.*>:\\*$/g",
                },
                {
                  "regex": "/^Resource::arn:<AWS::Partition>:codebuild:<AWS::Region>:<AWS::AccountId>:report-group/<.*SonarCodeScannerValidationProject.*>-\\*$/g",
                },
                {
                  "regex": "/^Action::s3:GetObject\\*$/g",
                },
                {
                  "regex": "/^Resource::<ArtifactsBucket.*.Arn>/\\*\\*$/g",
                },
              ],
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Validation CodeBuild project requires access to the ArtifactsBucket and ability to create logs.",
            },
            {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "codebuild.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "DefaultsSonarCodeScannerValidationProjectRoleDefaultPolicyF147A45E": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "applies_to": [
                {
                  "regex": "/^Resource::arn:<AWS::Partition>:logs:<AWS::Region>:<AWS::AccountId>:log-group:/aws/codebuild/<.*SonarCodeScannerValidationProject.*>:\\*$/g",
                },
                {
                  "regex": "/^Resource::arn:<AWS::Partition>:codebuild:<AWS::Region>:<AWS::AccountId>:report-group/<.*SonarCodeScannerValidationProject.*>-\\*$/g",
                },
                {
                  "regex": "/^Action::s3:GetObject\\*$/g",
                },
                {
                  "regex": "/^Resource::<ArtifactsBucket.*.Arn>/\\*\\*$/g",
                },
              ],
              "id": "AwsSolutions-IAM5",
              "reason": "Validation CodeBuild project requires access to the ArtifactsBucket and ability to create logs.",
            },
            {
              "applies_to": [
                {
                  "regex": "/^Resource::arn:<AWS::Partition>:logs:<AWS::Region>:<AWS::AccountId>:log-group:/aws/codebuild/<.*SonarCodeScannerValidationProject.*>:\\*$/g",
                },
                {
                  "regex": "/^Resource::arn:<AWS::Partition>:codebuild:<AWS::Region>:<AWS::AccountId>:report-group/<.*SonarCodeScannerValidationProject.*>-\\*$/g",
                },
                {
                  "regex": "/^Action::s3:GetObject\\*$/g",
                },
                {
                  "regex": "/^Resource::<ArtifactsBucket.*.Arn>/\\*\\*$/g",
                },
              ],
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Validation CodeBuild project requires access to the ArtifactsBucket and ability to create logs.",
            },
            {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "secretsmanager:GetSecretValue",
              "Effect": "Allow",
              "Resource": {
                "Ref": "DefaultsSonarCodeScannerSonarQubeTokenD1898305",
              },
            },
            {
              "Action": [
                "logs:CreateLogGroup",
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":logs:",
                      {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":log-group:/aws/codebuild/",
                      {
                        "Ref": "DefaultsSonarCodeScannerValidationProjectFAE7BAD0",
                      },
                    ],
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":logs:",
                      {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":log-group:/aws/codebuild/",
                      {
                        "Ref": "DefaultsSonarCodeScannerValidationProjectFAE7BAD0",
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": [
                "codebuild:CreateReportGroup",
                "codebuild:CreateReport",
                "codebuild:UpdateReport",
                "codebuild:BatchPutTestCases",
                "codebuild:BatchPutCodeCoverages",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":codebuild:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":report-group/",
                    {
                      "Ref": "DefaultsSonarCodeScannerValidationProjectFAE7BAD0",
                    },
                    "-*",
                  ],
                ],
              },
            },
            {
              "Action": "codebuild:BatchGetBuilds",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "DefaultsCodePipelineBuildSynthCdkBuildProject81772484",
                  "Arn",
                ],
              },
            },
            {
              "Action": "s3:GetObject*",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "DefaultsArtifactsBucket267E29E1",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "DefaultsArtifactsBucket267E29E1",
                          "Arn",
                        ],
                      },
                      "/**",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "DefaultsSonarCodeScannerValidationProjectRoleDefaultPolicyF147A45E",
        "Roles": [
          {
            "Ref": "DefaultsSonarCodeScannerValidationProjectRole6AF1A9E5",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "DefaultsUpdatePipelineSelfMutationD1F1D812": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": {
        "Artifacts": {
          "Type": "CODEPIPELINE",
        },
        "Cache": {
          "Type": "NO_CACHE",
        },
        "Description": "Pipeline step Default/CodePipeline/UpdatePipeline/SelfMutate",
        "EncryptionKey": "alias/aws/s3",
        "Environment": {
          "ComputeType": "BUILD_GENERAL1_SMALL",
          "Image": "aws/codebuild/standard:7.0",
          "ImagePullCredentialsType": "CODEBUILD",
          "PrivilegedMode": false,
          "Type": "LINUX_CONTAINER",
        },
        "ServiceRole": {
          "Fn::GetAtt": [
            "DefaultsUpdatePipelineSelfMutationRole0C19159A",
            "Arn",
          ],
        },
        "Source": {
          "BuildSpec": "{
  "version": "0.2",
  "phases": {
    "install": {
      "commands": [
        "npm install -g aws-cdk@2"
      ]
    },
    "build": {
      "commands": [
        "cdk -a . deploy Default --require-approval=never --verbose"
      ]
    }
  }
}",
          "Type": "CODEPIPELINE",
        },
      },
      "Type": "AWS::CodeBuild::Project",
    },
    "DefaultsUpdatePipelineSelfMutationRole0C19159A": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "codebuild.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "DefaultsUpdatePipelineSelfMutationRoleDefaultPolicyCE04D82F": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "logs:CreateLogGroup",
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":logs:",
                      {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":log-group:/aws/codebuild/",
                      {
                        "Ref": "DefaultsUpdatePipelineSelfMutationD1F1D812",
                      },
                    ],
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":logs:",
                      {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":log-group:/aws/codebuild/",
                      {
                        "Ref": "DefaultsUpdatePipelineSelfMutationD1F1D812",
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": [
                "codebuild:CreateReportGroup",
                "codebuild:CreateReport",
                "codebuild:UpdateReport",
                "codebuild:BatchPutTestCases",
                "codebuild:BatchPutCodeCoverages",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":codebuild:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":report-group/",
                    {
                      "Ref": "DefaultsUpdatePipelineSelfMutationD1F1D812",
                    },
                    "-*",
                  ],
                ],
              },
            },
            {
              "Action": "sts:AssumeRole",
              "Condition": {
                "ForAnyValue:StringEquals": {
                  "iam:ResourceTag/aws-cdk:bootstrap-role": [
                    "image-publishing",
                    "file-publishing",
                    "deploy",
                  ],
                },
              },
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:*:iam::",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":role/*",
                  ],
                ],
              },
            },
            {
              "Action": "cloudformation:DescribeStacks",
              "Effect": "Allow",
              "Resource": "*",
            },
            {
              "Action": "s3:ListBucket",
              "Effect": "Allow",
              "Resource": "*",
            },
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "DefaultsArtifactsBucket267E29E1",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "DefaultsArtifactsBucket267E29E1",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "DefaultsUpdatePipelineSelfMutationRoleDefaultPolicyCE04D82F",
        "Roles": [
          {
            "Ref": "DefaultsUpdatePipelineSelfMutationRole0C19159A",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
  },
  "Rules": {
    "CheckBootstrapVersion": {
      "Assertions": [
        {
          "Assert": {
            "Fn::Not": [
              {
                "Fn::Contains": [
                  [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;

exports[`PDK Pipeline Unit Tests CodeStar Connection Source - Defaults 1`] = `
{
  "Mappings": {
    "LatestNodeRuntimeMap": {
      "af-south-1": {
        "value": "nodejs20.x",
      },
      "ap-east-1": {
        "value": "nodejs20.x",
      },
      "ap-northeast-1": {
        "value": "nodejs20.x",
      },
      "ap-northeast-2": {
        "value": "nodejs20.x",
      },
      "ap-northeast-3": {
        "value": "nodejs20.x",
      },
      "ap-south-1": {
        "value": "nodejs20.x",
      },
      "ap-south-2": {
        "value": "nodejs20.x",
      },
      "ap-southeast-1": {
        "value": "nodejs20.x",
      },
      "ap-southeast-2": {
        "value": "nodejs20.x",
      },
      "ap-southeast-3": {
        "value": "nodejs20.x",
      },
      "ap-southeast-4": {
        "value": "nodejs20.x",
      },
      "ap-southeast-5": {
        "value": "nodejs20.x",
      },
      "ap-southeast-7": {
        "value": "nodejs20.x",
      },
      "ca-central-1": {
        "value": "nodejs20.x",
      },
      "ca-west-1": {
        "value": "nodejs20.x",
      },
      "cn-north-1": {
        "value": "nodejs18.x",
      },
      "cn-northwest-1": {
        "value": "nodejs18.x",
      },
      "eu-central-1": {
        "value": "nodejs20.x",
      },
      "eu-central-2": {
        "value": "nodejs20.x",
      },
      "eu-isoe-west-1": {
        "value": "nodejs18.x",
      },
      "eu-north-1": {
        "value": "nodejs20.x",
      },
      "eu-south-1": {
        "value": "nodejs20.x",
      },
      "eu-south-2": {
        "value": "nodejs20.x",
      },
      "eu-west-1": {
        "value": "nodejs20.x",
      },
      "eu-west-2": {
        "value": "nodejs20.x",
      },
      "eu-west-3": {
        "value": "nodejs20.x",
      },
      "il-central-1": {
        "value": "nodejs20.x",
      },
      "me-central-1": {
        "value": "nodejs20.x",
      },
      "me-south-1": {
        "value": "nodejs20.x",
      },
      "mx-central-1": {
        "value": "nodejs20.x",
      },
      "sa-east-1": {
        "value": "nodejs20.x",
      },
      "us-east-1": {
        "value": "nodejs20.x",
      },
      "us-east-2": {
        "value": "nodejs20.x",
      },
      "us-gov-east-1": {
        "value": "nodejs18.x",
      },
      "us-gov-west-1": {
        "value": "nodejs18.x",
      },
      "us-iso-east-1": {
        "value": "nodejs18.x",
      },
      "us-iso-west-1": {
        "value": "nodejs18.x",
      },
      "us-isob-east-1": {
        "value": "nodejs18.x",
      },
      "us-west-1": {
        "value": "nodejs20.x",
      },
      "us-west-2": {
        "value": "nodejs20.x",
      },
    },
  },
  "Outputs": {
    "CodeStarDefaultsSonarCodeScannerSonarqubeSecretArn9C2E01E6": {
      "Value": {
        "Ref": "CodeStarDefaultsSonarCodeScannerSonarQubeToken654DF0AF",
      },
    },
  },
  "Parameters": {
    "BootstrapVersion": {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": {
    "CodeStarDefaultsAccessLogsBucket41917F2D": {
      "DeletionPolicy": "Delete",
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": {
        "BucketEncryption": {
          "ServerSideEncryptionConfiguration": [
            {
              "ServerSideEncryptionByDefault": {
                "SSEAlgorithm": "AES256",
              },
            },
          ],
        },
        "OwnershipControls": {
          "Rules": [
            {
              "ObjectOwnership": "ObjectWriter",
            },
          ],
        },
        "PublicAccessBlockConfiguration": {
          "BlockPublicAcls": true,
          "BlockPublicPolicy": true,
          "IgnorePublicAcls": true,
          "RestrictPublicBuckets": true,
        },
        "Tags": [
          {
            "Key": "aws-cdk:auto-delete-objects",
            "Value": "true",
          },
        ],
      },
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Delete",
    },
    "CodeStarDefaultsAccessLogsBucketAutoDeleteObjectsCustomResource1ADFB4BC": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "CodeStarDefaultsAccessLogsBucketPolicyD742DA2C",
      ],
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": {
        "BucketName": {
          "Ref": "CodeStarDefaultsAccessLogsBucket41917F2D",
        },
        "ServiceToken": {
          "Fn::GetAtt": [
            "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F",
            "Arn",
          ],
        },
      },
      "Type": "Custom::S3AutoDeleteObjects",
      "UpdateReplacePolicy": "Delete",
    },
    "CodeStarDefaultsAccessLogsBucketPolicyD742DA2C": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": {
        "Bucket": {
          "Ref": "CodeStarDefaultsAccessLogsBucket41917F2D",
        },
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "s3:*",
              "Condition": {
                "Bool": {
                  "aws:SecureTransport": "false",
                },
              },
              "Effect": "Deny",
              "Principal": {
                "AWS": "*",
              },
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "CodeStarDefaultsAccessLogsBucket41917F2D",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "CodeStarDefaultsAccessLogsBucket41917F2D",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": [
                "s3:PutBucketPolicy",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
              ],
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::GetAtt": [
                    "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
                    "Arn",
                  ],
                },
              },
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "CodeStarDefaultsAccessLogsBucket41917F2D",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "CodeStarDefaultsAccessLogsBucket41917F2D",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": "s3:PutObject",
              "Condition": {
                "ArnLike": {
                  "aws:SourceArn": {
                    "Fn::GetAtt": [
                      "CodeStarDefaultsArtifactsBucket43E36EC6",
                      "Arn",
                    ],
                  },
                },
                "StringEquals": {
                  "aws:SourceAccount": {
                    "Ref": "AWS::AccountId",
                  },
                },
              },
              "Effect": "Allow",
              "Principal": {
                "Service": "logging.s3.amazonaws.com",
              },
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    {
                      "Fn::GetAtt": [
                        "CodeStarDefaultsAccessLogsBucket41917F2D",
                        "Arn",
                      ],
                    },
                    "/access-logs*",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::S3::BucketPolicy",
    },
    "CodeStarDefaultsArtifactsBucket43E36EC6": {
      "DeletionPolicy": "Delete",
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": {
        "BucketEncryption": {
          "ServerSideEncryptionConfiguration": [
            {
              "ServerSideEncryptionByDefault": {
                "SSEAlgorithm": "AES256",
              },
            },
          ],
        },
        "LoggingConfiguration": {
          "DestinationBucketName": {
            "Ref": "CodeStarDefaultsAccessLogsBucket41917F2D",
          },
          "LogFilePrefix": "access-logs",
        },
        "OwnershipControls": {
          "Rules": [
            {
              "ObjectOwnership": "BucketOwnerEnforced",
            },
          ],
        },
        "PublicAccessBlockConfiguration": {
          "BlockPublicAcls": true,
          "BlockPublicPolicy": true,
          "IgnorePublicAcls": true,
          "RestrictPublicBuckets": true,
        },
        "Tags": [
          {
            "Key": "aws-cdk:auto-delete-objects",
            "Value": "true",
          },
        ],
      },
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Delete",
    },
    "CodeStarDefaultsArtifactsBucketAutoDeleteObjectsCustomResourceE5EF9583": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "CodeStarDefaultsArtifactsBucketPolicy6D3C0E85",
      ],
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": {
        "BucketName": {
          "Ref": "CodeStarDefaultsArtifactsBucket43E36EC6",
        },
        "ServiceToken": {
          "Fn::GetAtt": [
            "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F",
            "Arn",
          ],
        },
      },
      "Type": "Custom::S3AutoDeleteObjects",
      "UpdateReplacePolicy": "Delete",
    },
    "CodeStarDefaultsArtifactsBucketPolicy6D3C0E85": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": {
        "Bucket": {
          "Ref": "CodeStarDefaultsArtifactsBucket43E36EC6",
        },
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "s3:*",
              "Condition": {
                "Bool": {
                  "aws:SecureTransport": "false",
                },
              },
              "Effect": "Deny",
              "Principal": {
                "AWS": "*",
              },
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "CodeStarDefaultsArtifactsBucket43E36EC6",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "CodeStarDefaultsArtifactsBucket43E36EC6",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": [
                "s3:PutBucketPolicy",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
              ],
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::GetAtt": [
                    "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
                    "Arn",
                  ],
                },
              },
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "CodeStarDefaultsArtifactsBucket43E36EC6",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "CodeStarDefaultsArtifactsBucket43E36EC6",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
              ],
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":role/cdk-hnb659fds-deploy-role-",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      "-",
                      {
                        "Ref": "AWS::Region",
                      },
                    ],
                  ],
                },
              },
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "CodeStarDefaultsArtifactsBucket43E36EC6",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "CodeStarDefaultsArtifactsBucket43E36EC6",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::S3::BucketPolicy",
    },
    "CodeStarDefaultsAssetsFileAsset1A7EF9998": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": {
        "Artifacts": {
          "Type": "CODEPIPELINE",
        },
        "Cache": {
          "Type": "NO_CACHE",
        },
        "Description": "Pipeline step Default/CodePipeline/Assets/FileAsset1",
        "EncryptionKey": "alias/aws/s3",
        "Environment": {
          "ComputeType": "BUILD_GENERAL1_SMALL",
          "Image": "aws/codebuild/standard:7.0",
          "ImagePullCredentialsType": "CODEBUILD",
          "PrivilegedMode": false,
          "Type": "LINUX_CONTAINER",
        },
        "ServiceRole": {
          "Fn::GetAtt": [
            "CodeStarDefaultsAssetsFileRoleCC46F4A6",
            "Arn",
          ],
        },
        "Source": {
          "BuildSpec": "{
  "version": "0.2",
  "phases": {
    "install": {
      "commands": [
        "npm install -g cdk-assets@latest"
      ]
    },
    "build": {
      "commands": [
        "cdk-assets --path \\"assembly-Stage/StageAppStack7618C9EF.assets.json\\" --verbose publish \\"14dd2d75ed909331e6d3efb3db54ed40dc6bd19804f86e266387ad8934897c85:current_account-current_region\\""
      ]
    }
  }
}",
          "Type": "CODEPIPELINE",
        },
      },
      "Type": "AWS::CodeBuild::Project",
    },
    "CodeStarDefaultsAssetsFileRoleCC46F4A6": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "codebuild.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "CodeStarDefaultsAssetsFileRoleDefaultPolicy57611CC2": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "logs:CreateLogGroup",
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":logs:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":log-group:/aws/codebuild/*",
                  ],
                ],
              },
            },
            {
              "Action": [
                "codebuild:CreateReportGroup",
                "codebuild:CreateReport",
                "codebuild:UpdateReport",
                "codebuild:BatchPutTestCases",
                "codebuild:BatchPutCodeCoverages",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":codebuild:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":report-group/*",
                  ],
                ],
              },
            },
            {
              "Action": [
                "codebuild:BatchGetBuilds",
                "codebuild:StartBuild",
                "codebuild:StopBuild",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Resource": {
                "Fn::Sub": "arn:\${AWS::Partition}:iam::\${AWS::AccountId}:role/cdk-hnb659fds-file-publishing-role-\${AWS::AccountId}-\${AWS::Region}",
              },
            },
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "CodeStarDefaultsArtifactsBucket43E36EC6",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "CodeStarDefaultsArtifactsBucket43E36EC6",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CodeStarDefaultsAssetsFileRoleDefaultPolicy57611CC2",
        "Roles": [
          {
            "Ref": "CodeStarDefaultsAssetsFileRoleCC46F4A6",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CodeStarDefaultsCodeBuildActionRole23A11171": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::GetAtt": [
                    "CodeStarDefaultsCodePipelineRoleA96D30CD",
                    "Arn",
                  ],
                },
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "CodeStarDefaultsCodeBuildActionRoleDefaultPolicyD3494D3B": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "codebuild:BatchGetBuilds",
                "codebuild:StartBuild",
                "codebuild:StopBuild",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "CodeStarDefaultsCodePipelineBuildSynthCdkBuildProject7E7A8AEC",
                  "Arn",
                ],
              },
            },
            {
              "Action": [
                "codebuild:BatchGetBuilds",
                "codebuild:StartBuild",
                "codebuild:StopBuild",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "CodeStarDefaultsUpdatePipelineSelfMutation17AE1859",
                  "Arn",
                ],
              },
            },
            {
              "Action": [
                "codebuild:BatchGetBuilds",
                "codebuild:StartBuild",
                "codebuild:StopBuild",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "CodeStarDefaultsAssetsFileAsset1A7EF9998",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CodeStarDefaultsCodeBuildActionRoleDefaultPolicyD3494D3B",
        "Roles": [
          {
            "Ref": "CodeStarDefaultsCodeBuildActionRole23A11171",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CodeStarDefaultsCodePipeline7BA3A22B": {
      "DependsOn": [
        "CodeStarDefaultsCodePipelineRoleDefaultPolicy5B46AB36",
        "CodeStarDefaultsCodePipelineRoleA96D30CD",
      ],
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": {
        "ArtifactStore": {
          "Location": {
            "Ref": "CodeStarDefaultsArtifactsBucket43E36EC6",
          },
          "Type": "S3",
        },
        "PipelineType": "V1",
        "RestartExecutionOnUpdate": true,
        "RoleArn": {
          "Fn::GetAtt": [
            "CodeStarDefaultsCodePipelineRoleA96D30CD",
            "Arn",
          ],
        },
        "Stages": [
          {
            "Actions": [
              {
                "ActionTypeId": {
                  "Category": "Source",
                  "Owner": "AWS",
                  "Provider": "CodeStarSourceConnection",
                  "Version": "1",
                },
                "Configuration": {
                  "BranchName": "mainline",
                  "ConnectionArn": "arn:aws:codestar-connections:region:account:connection/uuid",
                  "FullRepositoryId": "owner/repo",
                },
                "Name": "owner_repo",
                "OutputArtifacts": [
                  {
                    "Name": "owner_repo_Source",
                  },
                ],
                "RoleArn": {
                  "Fn::GetAtt": [
                    "CodeStarDefaultsCodePipelineSourceownerrepoCodePipelineActionRoleA0A372CD",
                    "Arn",
                  ],
                },
                "RunOrder": 1,
              },
            ],
            "Name": "Source",
          },
          {
            "Actions": [
              {
                "ActionTypeId": {
                  "Category": "Build",
                  "Owner": "AWS",
                  "Provider": "CodeBuild",
                  "Version": "1",
                },
                "Configuration": {
                  "EnvironmentVariables": "[{"name":"_PROJECT_CONFIG_HASH","type":"PLAINTEXT","value":"1743fe23e45e6f2b0fdc043d5f0f1105f88a2596949f76d42fb43084b867d9ae"}]",
                  "ProjectName": {
                    "Ref": "CodeStarDefaultsCodePipelineBuildSynthCdkBuildProject7E7A8AEC",
                  },
                },
                "InputArtifacts": [
                  {
                    "Name": "owner_repo_Source",
                  },
                ],
                "Name": "Synth",
                "OutputArtifacts": [
                  {
                    "Name": "Synth_Output",
                  },
                  {
                    "Name": "Synth__",
                  },
                ],
                "RoleArn": {
                  "Fn::GetAtt": [
                    "CodeStarDefaultsCodeBuildActionRole23A11171",
                    "Arn",
                  ],
                },
                "RunOrder": 1,
              },
            ],
            "Name": "Build",
          },
          {
            "Actions": [
              {
                "ActionTypeId": {
                  "Category": "Build",
                  "Owner": "AWS",
                  "Provider": "CodeBuild",
                  "Version": "1",
                },
                "Configuration": {
                  "EnvironmentVariables": "[{"name":"_PROJECT_CONFIG_HASH","type":"PLAINTEXT","value":"f5c136b42f09ed582b9273672c6585264fb7142640d362897bd6649d732584c2"}]",
                  "ProjectName": {
                    "Ref": "CodeStarDefaultsUpdatePipelineSelfMutation17AE1859",
                  },
                },
                "InputArtifacts": [
                  {
                    "Name": "Synth_Output",
                  },
                ],
                "Name": "SelfMutate",
                "RoleArn": {
                  "Fn::GetAtt": [
                    "CodeStarDefaultsCodeBuildActionRole23A11171",
                    "Arn",
                  ],
                },
                "RunOrder": 1,
              },
            ],
            "Name": "UpdatePipeline",
          },
          {
            "Actions": [
              {
                "ActionTypeId": {
                  "Category": "Build",
                  "Owner": "AWS",
                  "Provider": "CodeBuild",
                  "Version": "1",
                },
                "Configuration": {
                  "ProjectName": {
                    "Ref": "CodeStarDefaultsAssetsFileAsset1A7EF9998",
                  },
                },
                "InputArtifacts": [
                  {
                    "Name": "Synth_Output",
                  },
                ],
                "Name": "FileAsset1",
                "RoleArn": {
                  "Fn::GetAtt": [
                    "CodeStarDefaultsCodeBuildActionRole23A11171",
                    "Arn",
                  ],
                },
                "RunOrder": 1,
              },
            ],
            "Name": "Assets",
          },
          {
            "Actions": [
              {
                "ActionTypeId": {
                  "Category": "Deploy",
                  "Owner": "AWS",
                  "Provider": "CloudFormation",
                  "Version": "1",
                },
                "Configuration": {
                  "ActionMode": "CHANGE_SET_REPLACE",
                  "Capabilities": "CAPABILITY_NAMED_IAM,CAPABILITY_AUTO_EXPAND",
                  "ChangeSetName": "PipelineChange",
                  "RoleArn": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition",
                        },
                        ":iam::",
                        {
                          "Ref": "AWS::AccountId",
                        },
                        ":role/cdk-hnb659fds-cfn-exec-role-",
                        {
                          "Ref": "AWS::AccountId",
                        },
                        "-",
                        {
                          "Ref": "AWS::Region",
                        },
                      ],
                    ],
                  },
                  "StackName": "Stage-AppStack",
                  "TemplatePath": "Synth_Output::assembly-Stage/StageAppStack7618C9EF.template.json",
                },
                "InputArtifacts": [
                  {
                    "Name": "Synth_Output",
                  },
                ],
                "Name": "Prepare",
                "RoleArn": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":role/cdk-hnb659fds-deploy-role-",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      "-",
                      {
                        "Ref": "AWS::Region",
                      },
                    ],
                  ],
                },
                "RunOrder": 1,
              },
              {
                "ActionTypeId": {
                  "Category": "Deploy",
                  "Owner": "AWS",
                  "Provider": "CloudFormation",
                  "Version": "1",
                },
                "Configuration": {
                  "ActionMode": "CHANGE_SET_EXECUTE",
                  "ChangeSetName": "PipelineChange",
                  "StackName": "Stage-AppStack",
                },
                "Name": "Deploy",
                "RoleArn": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":role/cdk-hnb659fds-deploy-role-",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      "-",
                      {
                        "Ref": "AWS::Region",
                      },
                    ],
                  ],
                },
                "RunOrder": 2,
              },
            ],
            "Name": "Stage",
          },
        ],
      },
      "Type": "AWS::CodePipeline::Pipeline",
    },
    "CodeStarDefaultsCodePipelineBuildSynthCdkBuildProject7E7A8AEC": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": {
        "Artifacts": {
          "Type": "CODEPIPELINE",
        },
        "Cache": {
          "Type": "NO_CACHE",
        },
        "Description": "Pipeline step Default/CodePipeline/Build/Synth",
        "EncryptionKey": "alias/aws/s3",
        "Environment": {
          "ComputeType": "BUILD_GENERAL1_SMALL",
          "Image": "aws/codebuild/standard:7.0",
          "ImagePullCredentialsType": "CODEBUILD",
          "PrivilegedMode": false,
          "Type": "LINUX_CONTAINER",
        },
        "ServiceRole": {
          "Fn::GetAtt": [
            "CodeStarDefaultsCodePipelineBuildSynthCdkBuildProjectRole8FA3CF1F",
            "Arn",
          ],
        },
        "Source": {
          "BuildSpec": "{
  "version": "0.2",
  "phases": {
    "install": {
      "commands": [
        "npm install -g aws-cdk pnpm",
        "npx projen install"
      ]
    },
    "build": {
      "commands": [
        "npx projen build"
      ]
    }
  },
  "artifacts": {
    "secondary-artifacts": {
      "Synth_Output": {
        "base-directory": "cdk.out",
        "files": "**/*"
      },
      "Synth__": {
        "base-directory": ".",
        "files": "**/*"
      }
    }
  }
}",
          "Type": "CODEPIPELINE",
        },
      },
      "Type": "AWS::CodeBuild::Project",
    },
    "CodeStarDefaultsCodePipelineBuildSynthCdkBuildProjectRole8FA3CF1F": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "codebuild.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "CodeStarDefaultsCodePipelineBuildSynthCdkBuildProjectRoleDefaultPolicyB9041268": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "logs:CreateLogGroup",
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":logs:",
                      {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":log-group:/aws/codebuild/",
                      {
                        "Ref": "CodeStarDefaultsCodePipelineBuildSynthCdkBuildProject7E7A8AEC",
                      },
                    ],
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":logs:",
                      {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":log-group:/aws/codebuild/",
                      {
                        "Ref": "CodeStarDefaultsCodePipelineBuildSynthCdkBuildProject7E7A8AEC",
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": [
                "codebuild:CreateReportGroup",
                "codebuild:CreateReport",
                "codebuild:UpdateReport",
                "codebuild:BatchPutTestCases",
                "codebuild:BatchPutCodeCoverages",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":codebuild:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":report-group/",
                    {
                      "Ref": "CodeStarDefaultsCodePipelineBuildSynthCdkBuildProject7E7A8AEC",
                    },
                    "-*",
                  ],
                ],
              },
            },
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
                "s3:PutObject",
                "s3:PutObjectLegalHold",
                "s3:PutObjectRetention",
                "s3:PutObjectTagging",
                "s3:PutObjectVersionTagging",
                "s3:Abort*",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "CodeStarDefaultsArtifactsBucket43E36EC6",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "CodeStarDefaultsArtifactsBucket43E36EC6",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CodeStarDefaultsCodePipelineBuildSynthCdkBuildProjectRoleDefaultPolicyB9041268",
        "Roles": [
          {
            "Ref": "CodeStarDefaultsCodePipelineBuildSynthCdkBuildProjectRole8FA3CF1F",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CodeStarDefaultsCodePipelineRoleA96D30CD": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "codepipeline.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "CodeStarDefaultsCodePipelineRoleDefaultPolicy5B46AB36": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
                "s3:PutObject",
                "s3:PutObjectLegalHold",
                "s3:PutObjectRetention",
                "s3:PutObjectTagging",
                "s3:PutObjectVersionTagging",
                "s3:Abort*",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "CodeStarDefaultsArtifactsBucket43E36EC6",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "CodeStarDefaultsArtifactsBucket43E36EC6",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "CodeStarDefaultsCodePipelineSourceownerrepoCodePipelineActionRoleA0A372CD",
                  "Arn",
                ],
              },
            },
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "CodeStarDefaultsCodeBuildActionRole23A11171",
                  "Arn",
                ],
              },
            },
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":iam::",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":role/cdk-hnb659fds-deploy-role-",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    "-",
                    {
                      "Ref": "AWS::Region",
                    },
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CodeStarDefaultsCodePipelineRoleDefaultPolicy5B46AB36",
        "Roles": [
          {
            "Ref": "CodeStarDefaultsCodePipelineRoleA96D30CD",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CodeStarDefaultsCodePipelineSourceownerrepoCodePipelineActionRoleA0A372CD": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":root",
                    ],
                  ],
                },
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "CodeStarDefaultsCodePipelineSourceownerrepoCodePipelineActionRoleDefaultPolicyCC0CB80F": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "codestar-connections:UseConnection",
              "Effect": "Allow",
              "Resource": "arn:aws:codestar-connections:region:account:connection/uuid",
            },
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
                "s3:PutObject",
                "s3:PutObjectLegalHold",
                "s3:PutObjectRetention",
                "s3:PutObjectTagging",
                "s3:PutObjectVersionTagging",
                "s3:Abort*",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "CodeStarDefaultsArtifactsBucket43E36EC6",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "CodeStarDefaultsArtifactsBucket43E36EC6",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": [
                "s3:PutObjectAcl",
                "s3:PutObjectVersionAcl",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    {
                      "Fn::GetAtt": [
                        "CodeStarDefaultsArtifactsBucket43E36EC6",
                        "Arn",
                      ],
                    },
                    "/*",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CodeStarDefaultsCodePipelineSourceownerrepoCodePipelineActionRoleDefaultPolicyCC0CB80F",
        "Roles": [
          {
            "Ref": "CodeStarDefaultsCodePipelineSourceownerrepoCodePipelineActionRoleA0A372CD",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CodeStarDefaultsSonarCodeScannerSonarQubeToken654DF0AF": {
      "DeletionPolicy": "Delete",
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-SMG4",
              "reason": "Key rotation is not possible as a user token needs to be generated from Sonarqube",
            },
            {
              "id": "AwsPrototyping-SecretsManagerRotationEnabled",
              "reason": "Key rotation is not possible as a user token needs to be generated from Sonarqube",
            },
            {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": {
        "GenerateSecretString": {},
      },
      "Type": "AWS::SecretsManager::Secret",
      "UpdateReplacePolicy": "Delete",
    },
    "CodeStarDefaultsSonarCodeScannerSynthBuildProjectOnSynthSuccess5C2466E4": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": {
        "EventPattern": {
          "detail": {
            "build-status": [
              "SUCCEEDED",
            ],
            "project-name": [
              {
                "Fn::Select": [
                  1,
                  {
                    "Fn::Split": [
                      "/",
                      {
                        "Fn::Select": [
                          5,
                          {
                            "Fn::Split": [
                              ":",
                              {
                                "Fn::GetAtt": [
                                  "CodeStarDefaultsCodePipelineBuildSynthCdkBuildProject7E7A8AEC",
                                  "Arn",
                                ],
                              },
                            ],
                          },
                        ],
                      },
                    ],
                  },
                ],
              },
            ],
          },
          "detail-type": [
            "CodeBuild Build State Change",
          ],
          "source": [
            "aws.codebuild",
          ],
        },
        "State": "ENABLED",
        "Targets": [
          {
            "Arn": {
              "Fn::GetAtt": [
                "CodeStarDefaultsSonarCodeScannerValidationProjectB31F80FB",
                "Arn",
              ],
            },
            "Id": "Target0",
            "InputTransformer": {
              "InputPathsMap": {
                "detail-build-id": "$.detail.build-id",
              },
              "InputTemplate": "{"environmentVariablesOverride":[{"name":"SYNTH_BUILD_ID","type":"PLAINTEXT","value":<detail-build-id>}]}",
            },
            "RoleArn": {
              "Fn::GetAtt": [
                "CodeStarDefaultsSonarCodeScannerValidationProjectEventsRole900326BB",
                "Arn",
              ],
            },
          },
        ],
      },
      "Type": "AWS::Events::Rule",
    },
    "CodeStarDefaultsSonarCodeScannerValidationProjectB31F80FB": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": {
        "Artifacts": {
          "Type": "NO_ARTIFACTS",
        },
        "Cache": {
          "Type": "NO_CACHE",
        },
        "EncryptionKey": "alias/aws/s3",
        "Environment": {
          "ComputeType": "BUILD_GENERAL1_SMALL",
          "EnvironmentVariables": [
            {
              "Name": "SONARQUBE_TOKEN",
              "Type": "SECRETS_MANAGER",
              "Value": {
                "Ref": "CodeStarDefaultsSonarCodeScannerSonarQubeToken654DF0AF",
              },
            },
            {
              "Name": "SONARQUBE_ENDPOINT",
              "Type": "PLAINTEXT",
              "Value": "https://sonar.dev",
            },
            {
              "Name": "PROJECT_NAME",
              "Type": "PLAINTEXT",
              "Value": "Default",
            },
          ],
          "Image": "aws/codebuild/standard:5.0",
          "ImagePullCredentialsType": "CODEBUILD",
          "PrivilegedMode": false,
          "Type": "LINUX_CONTAINER",
        },
        "ServiceRole": {
          "Fn::GetAtt": [
            "CodeStarDefaultsSonarCodeScannerValidationProjectRole56EAF338",
            "Arn",
          ],
        },
        "Source": {
          "BuildSpec": "{
  "version": "0.2",
  "env": {
    "shell": "bash"
  },
  "phases": {
    "install": {
      "commands": [
        "npm install -g aws-cdk",
        "gem install cfn-nag"
      ]
    },
    "build": {
      "commands": [
        "export RESOLVED_SOURCE_VERSION=\`aws codebuild batch-get-builds --ids $SYNTH_BUILD_ID | jq -r '.builds[0].resolvedSourceVersion'\`",
        "export BUILT_ARTIFACT_URI=\`aws codebuild batch-get-builds --ids $SYNTH_BUILD_ID | jq -r '.builds[0].secondaryArtifacts[] | select(.artifactIdentifier == \\"Synth__\\") | .location' | awk '{sub(\\"arn:aws:s3:::\\",\\"s3://\\")}1' $1\`",
        "export SYNTH_SOURCE_URI=\`aws codebuild batch-get-builds --ids $SYNTH_BUILD_ID | jq -r '.builds[0].sourceVersion' | awk '{sub(\\"arn:aws:s3:::\\",\\"s3://\\")}1' $1\`",
        "aws s3 cp $SYNTH_SOURCE_URI source.zip",
        "aws s3 cp $BUILT_ARTIFACT_URI built.zip",
        "unzip source.zip -d src",
        "unzip built.zip -d built",
        "rm source.zip built.zip",
        "rsync -a built/* src --include=\\"*/\\"  --include=\\"**/coverage/**\\" --include=\\"**/cdk.out/**\\" --exclude=\\"**/node_modules/**/*\\" --exclude=\\"**/.env/**\\" --exclude=\\"*\\" --prune-empty-dirs",
        "CREATE_PROJECT_OUTPUT=\`curl -X POST -u $SONARQUBE_TOKEN: \\"$SONARQUBE_ENDPOINT/api/projects/create?name=$PROJECT_NAME&project=$PROJECT_NAME&visibility=private\\" \`",
        "if [[ \\"$(echo $CREATE_PROJECT_OUTPUT | jq .errors)\\" == \\"null\\" ]]; then curl -X POST -u $SONARQUBE_TOKEN: \\"$SONARQUBE_ENDPOINT/api/permissions/add_group?projectKey=$PROJECT_NAME&groupName=dev&permission=admin\\" ;curl -X POST -u $SONARQUBE_TOKEN: \\"$SONARQUBE_ENDPOINT/api/permissions/add_group?projectKey=$PROJECT_NAME&groupName=dev&permission=codeviewer\\" ;curl -X POST -u $SONARQUBE_TOKEN: \\"$SONARQUBE_ENDPOINT/api/permissions/add_group?projectKey=$PROJECT_NAME&groupName=dev&permission=issueadmin\\" ;curl -X POST -u $SONARQUBE_TOKEN: \\"$SONARQUBE_ENDPOINT/api/permissions/add_group?projectKey=$PROJECT_NAME&groupName=dev&permission=securityhotspotadmin\\" ;curl -X POST -u $SONARQUBE_TOKEN: \\"$SONARQUBE_ENDPOINT/api/permissions/add_group?projectKey=$PROJECT_NAME&groupName=dev&permission=scan\\" ;curl -X POST -u $SONARQUBE_TOKEN: \\"$SONARQUBE_ENDPOINT/api/permissions/add_group?projectKey=$PROJECT_NAME&groupName=dev&permission=user\\" ;curl -X POST -u $SONARQUBE_TOKEN: \\"$SONARQUBE_ENDPOINT/api/project_branches/rename?project=$PROJECT_NAME&name=mainline\\" ;curl -X POST -u $SONARQUBE_TOKEN: \\"$SONARQUBE_ENDPOINT/api/project_tags/set?project=$PROJECT_NAME&tags=dev\\" ;export DEFAULT_PROFILE=\`curl -X GET -u $SONARQUBE_TOKEN: \\"$SONARQUBE_ENDPOINT/api/qualityprofiles/search?qualityProfile=dev\\"  | jq .profiles\`;export SPECIFIC_PROFILE=\`curl -X GET -u $SONARQUBE_TOKEN: \\"$SONARQUBE_ENDPOINT/api/qualityprofiles/search?qualityProfile=undefined\\"  | jq .profiles\`;export MERGED_PROFILES=\`jq --argjson arr1 \\"$DEFAULT_PROFILE\\" --argjson arr2 \\"$SPECIFIC_PROFILE\\" -n '$arr1 + $arr2 | group_by(.language) | map(.[-1])'\`;echo $MERGED_PROFILES | jq -c '.[]' | while read i; do curl -X POST -u $SONARQUBE_TOKEN: \\"$SONARQUBE_ENDPOINT/api/qualityprofiles/add_project?project=$PROJECT_NAME&language=\`echo $i | jq -r .language\`&qualityProfile=\`echo $i | jq -r .name\`\\" ; done;export DEFAULT_GATE=\`curl -X GET -u $SONARQUBE_TOKEN: \\"$SONARQUBE_ENDPOINT/api/qualitygates/search?gateName=dev\\" \`;export SPECIFIC_GATE=\`curl -X GET -u $SONARQUBE_TOKEN: \\"$SONARQUBE_ENDPOINT/api/qualitygates/search?gateName=undefined\\" \`;if [[ \\"$(echo $SPECIFIC_GATE | jq .errors)\\" == \\"null\\" && \\"$(echo $SPECIFIC_GATE | jq '.results | length')\\" -gt 0 ]]; then export GATE_NAME=undefined; else export GATE_NAME=dev; fi;curl -X POST -u $SONARQUBE_TOKEN: \\"$SONARQUBE_ENDPOINT/api/qualitygates/select?projectKey=$PROJECT_NAME&gateName=$GATE_NAME\\" ; fi;",
        "mkdir -p src/reports",
        "npx owasp-dependency-check --format HTML --out src/reports --exclude '**/.git/**/*' --scan src --enableExperimental --bin /tmp/dep-check --disableRetireJS",
        "cfn_nag  built/cdk.out/**/*.template.json --output-format=json > src/reports/cfn-nag-report.json",
        "cd src",
        "npx sonarqube-scanner -Dsonar.login=$SONARQUBE_TOKEN -Dsonar.projectKey=$PROJECT_NAME -Dsonar.projectName=$PROJECT_NAME -Dsonar.projectVersion=\`echo $RESOLVED_SOURCE_VERSION | cut -c1-7\` -Dsonar.branch.name=mainline -Dsonar.host.url=$SONARQUBE_ENDPOINT -Dsonar.cfn.nag.reportFiles=reports/cfn-nag-report.json -Dsonar.dependencyCheck.htmlReportPath=reports/dependency-check-report.html -Dsonar.javascript.lcov.reportPaths=**/coverage/lcov.info -Dsonar.clover.reportPath=**/coverage/clover.xml -Dsonar.exclusions=\\"**/reports/**,**/coverage/**\\" -Dsonar.sources=.",
        "curl -X GET -u $SONARQUBE_TOKEN: \\"$SONARQUBE_ENDPOINT/api/bitegarden/report/pdf_issues_breakdown?resource=$PROJECT_NAME&branch=mainline\\" --output reports/prototype-issues-report.pdf",
        "curl -X GET -u $SONARQUBE_TOKEN: \\"$SONARQUBE_ENDPOINT/api/bitegarden/report/pdf?resource=$PROJECT_NAME&branch=mainline\\" --output reports/prototype-executive-report.pdf",
        "curl -X GET -u $SONARQUBE_TOKEN: \\"$SONARQUBE_ENDPOINT/api/security_reports/download?project=$PROJECT_NAME\\" --output reports/prototype-security-report.pdf"
      ]
    }
  }
}",
          "Type": "NO_SOURCE",
        },
      },
      "Type": "AWS::CodeBuild::Project",
    },
    "CodeStarDefaultsSonarCodeScannerValidationProjectEventsRole900326BB": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "events.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "CodeStarDefaultsSonarCodeScannerValidationProjectEventsRoleDefaultPolicy9FF541D4": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "codebuild:StartBuild",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "CodeStarDefaultsSonarCodeScannerValidationProjectB31F80FB",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CodeStarDefaultsSonarCodeScannerValidationProjectEventsRoleDefaultPolicy9FF541D4",
        "Roles": [
          {
            "Ref": "CodeStarDefaultsSonarCodeScannerValidationProjectEventsRole900326BB",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CodeStarDefaultsSonarCodeScannerValidationProjectRole56EAF338": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "applies_to": [
                {
                  "regex": "/^Resource::arn:<AWS::Partition>:logs:<AWS::Region>:<AWS::AccountId>:log-group:/aws/codebuild/<.*SonarCodeScannerValidationProject.*>:\\*$/g",
                },
                {
                  "regex": "/^Resource::arn:<AWS::Partition>:codebuild:<AWS::Region>:<AWS::AccountId>:report-group/<.*SonarCodeScannerValidationProject.*>-\\*$/g",
                },
                {
                  "regex": "/^Action::s3:GetObject\\*$/g",
                },
                {
                  "regex": "/^Resource::<ArtifactsBucket.*.Arn>/\\*\\*$/g",
                },
              ],
              "id": "AwsSolutions-IAM5",
              "reason": "Validation CodeBuild project requires access to the ArtifactsBucket and ability to create logs.",
            },
            {
              "applies_to": [
                {
                  "regex": "/^Resource::arn:<AWS::Partition>:logs:<AWS::Region>:<AWS::AccountId>:log-group:/aws/codebuild/<.*SonarCodeScannerValidationProject.*>:\\*$/g",
                },
                {
                  "regex": "/^Resource::arn:<AWS::Partition>:codebuild:<AWS::Region>:<AWS::AccountId>:report-group/<.*SonarCodeScannerValidationProject.*>-\\*$/g",
                },
                {
                  "regex": "/^Action::s3:GetObject\\*$/g",
                },
                {
                  "regex": "/^Resource::<ArtifactsBucket.*.Arn>/\\*\\*$/g",
                },
              ],
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Validation CodeBuild project requires access to the ArtifactsBucket and ability to create logs.",
            },
            {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "codebuild.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "CodeStarDefaultsSonarCodeScannerValidationProjectRoleDefaultPolicyF187659B": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "applies_to": [
                {
                  "regex": "/^Resource::arn:<AWS::Partition>:logs:<AWS::Region>:<AWS::AccountId>:log-group:/aws/codebuild/<.*SonarCodeScannerValidationProject.*>:\\*$/g",
                },
                {
                  "regex": "/^Resource::arn:<AWS::Partition>:codebuild:<AWS::Region>:<AWS::AccountId>:report-group/<.*SonarCodeScannerValidationProject.*>-\\*$/g",
                },
                {
                  "regex": "/^Action::s3:GetObject\\*$/g",
                },
                {
                  "regex": "/^Resource::<ArtifactsBucket.*.Arn>/\\*\\*$/g",
                },
              ],
              "id": "AwsSolutions-IAM5",
              "reason": "Validation CodeBuild project requires access to the ArtifactsBucket and ability to create logs.",
            },
            {
              "applies_to": [
                {
                  "regex": "/^Resource::arn:<AWS::Partition>:logs:<AWS::Region>:<AWS::AccountId>:log-group:/aws/codebuild/<.*SonarCodeScannerValidationProject.*>:\\*$/g",
                },
                {
                  "regex": "/^Resource::arn:<AWS::Partition>:codebuild:<AWS::Region>:<AWS::AccountId>:report-group/<.*SonarCodeScannerValidationProject.*>-\\*$/g",
                },
                {
                  "regex": "/^Action::s3:GetObject\\*$/g",
                },
                {
                  "regex": "/^Resource::<ArtifactsBucket.*.Arn>/\\*\\*$/g",
                },
              ],
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Validation CodeBuild project requires access to the ArtifactsBucket and ability to create logs.",
            },
            {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "secretsmanager:GetSecretValue",
              "Effect": "Allow",
              "Resource": {
                "Ref": "CodeStarDefaultsSonarCodeScannerSonarQubeToken654DF0AF",
              },
            },
            {
              "Action": [
                "logs:CreateLogGroup",
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":logs:",
                      {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":log-group:/aws/codebuild/",
                      {
                        "Ref": "CodeStarDefaultsSonarCodeScannerValidationProjectB31F80FB",
                      },
                    ],
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":logs:",
                      {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":log-group:/aws/codebuild/",
                      {
                        "Ref": "CodeStarDefaultsSonarCodeScannerValidationProjectB31F80FB",
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": [
                "codebuild:CreateReportGroup",
                "codebuild:CreateReport",
                "codebuild:UpdateReport",
                "codebuild:BatchPutTestCases",
                "codebuild:BatchPutCodeCoverages",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":codebuild:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":report-group/",
                    {
                      "Ref": "CodeStarDefaultsSonarCodeScannerValidationProjectB31F80FB",
                    },
                    "-*",
                  ],
                ],
              },
            },
            {
              "Action": "codebuild:BatchGetBuilds",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "CodeStarDefaultsCodePipelineBuildSynthCdkBuildProject7E7A8AEC",
                  "Arn",
                ],
              },
            },
            {
              "Action": "s3:GetObject*",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "CodeStarDefaultsArtifactsBucket43E36EC6",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "CodeStarDefaultsArtifactsBucket43E36EC6",
                          "Arn",
                        ],
                      },
                      "/**",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CodeStarDefaultsSonarCodeScannerValidationProjectRoleDefaultPolicyF187659B",
        "Roles": [
          {
            "Ref": "CodeStarDefaultsSonarCodeScannerValidationProjectRole56EAF338",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CodeStarDefaultsUpdatePipelineSelfMutation17AE1859": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": {
        "Artifacts": {
          "Type": "CODEPIPELINE",
        },
        "Cache": {
          "Type": "NO_CACHE",
        },
        "Description": "Pipeline step Default/CodePipeline/UpdatePipeline/SelfMutate",
        "EncryptionKey": "alias/aws/s3",
        "Environment": {
          "ComputeType": "BUILD_GENERAL1_SMALL",
          "Image": "aws/codebuild/standard:7.0",
          "ImagePullCredentialsType": "CODEBUILD",
          "PrivilegedMode": false,
          "Type": "LINUX_CONTAINER",
        },
        "ServiceRole": {
          "Fn::GetAtt": [
            "CodeStarDefaultsUpdatePipelineSelfMutationRole57337B36",
            "Arn",
          ],
        },
        "Source": {
          "BuildSpec": "{
  "version": "0.2",
  "phases": {
    "install": {
      "commands": [
        "npm install -g aws-cdk@2"
      ]
    },
    "build": {
      "commands": [
        "cdk -a . deploy Default --require-approval=never --verbose"
      ]
    }
  }
}",
          "Type": "CODEPIPELINE",
        },
      },
      "Type": "AWS::CodeBuild::Project",
    },
    "CodeStarDefaultsUpdatePipelineSelfMutationRole57337B36": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "codebuild.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "CodeStarDefaultsUpdatePipelineSelfMutationRoleDefaultPolicy008CD36E": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "logs:CreateLogGroup",
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":logs:",
                      {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":log-group:/aws/codebuild/",
                      {
                        "Ref": "CodeStarDefaultsUpdatePipelineSelfMutation17AE1859",
                      },
                    ],
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":logs:",
                      {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":log-group:/aws/codebuild/",
                      {
                        "Ref": "CodeStarDefaultsUpdatePipelineSelfMutation17AE1859",
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": [
                "codebuild:CreateReportGroup",
                "codebuild:CreateReport",
                "codebuild:UpdateReport",
                "codebuild:BatchPutTestCases",
                "codebuild:BatchPutCodeCoverages",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":codebuild:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":report-group/",
                    {
                      "Ref": "CodeStarDefaultsUpdatePipelineSelfMutation17AE1859",
                    },
                    "-*",
                  ],
                ],
              },
            },
            {
              "Action": "sts:AssumeRole",
              "Condition": {
                "ForAnyValue:StringEquals": {
                  "iam:ResourceTag/aws-cdk:bootstrap-role": [
                    "image-publishing",
                    "file-publishing",
                    "deploy",
                  ],
                },
              },
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:*:iam::",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":role/*",
                  ],
                ],
              },
            },
            {
              "Action": "cloudformation:DescribeStacks",
              "Effect": "Allow",
              "Resource": "*",
            },
            {
              "Action": "s3:ListBucket",
              "Effect": "Allow",
              "Resource": "*",
            },
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "CodeStarDefaultsArtifactsBucket43E36EC6",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "CodeStarDefaultsArtifactsBucket43E36EC6",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CodeStarDefaultsUpdatePipelineSelfMutationRoleDefaultPolicy008CD36E",
        "Roles": [
          {
            "Ref": "CodeStarDefaultsUpdatePipelineSelfMutationRole57337B36",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F": {
      "DependsOn": [
        "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "faa95a81ae7d7373f3e1f242268f904eb748d8d0fdd306e8a6fe515a1905a7d6.zip",
        },
        "Description": {
          "Fn::Join": [
            "",
            [
              "Lambda function for auto-deleting objects in ",
              {
                "Ref": "CodeStarDefaultsAccessLogsBucket41917F2D",
              },
              " S3 bucket.",
            ],
          ],
        },
        "Handler": "index.handler",
        "MemorySize": 128,
        "Role": {
          "Fn::GetAtt": [
            "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
            "Arn",
          ],
        },
        "Runtime": {
          "Fn::FindInMap": [
            "LatestNodeRuntimeMap",
            {
              "Ref": "AWS::Region",
            },
            "value",
          ],
        },
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Sub": "arn:\${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
  },
  "Rules": {
    "CheckBootstrapVersion": {
      "Assertions": [
        {
          "Assert": {
            "Fn::Not": [
              {
                "Fn::Contains": [
                  [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;

exports[`PDK Pipeline Unit Tests CrossAccount - CodeStar Connection 1`] = `
{
  "Mappings": {
    "LatestNodeRuntimeMap": {
      "af-south-1": {
        "value": "nodejs20.x",
      },
      "ap-east-1": {
        "value": "nodejs20.x",
      },
      "ap-northeast-1": {
        "value": "nodejs20.x",
      },
      "ap-northeast-2": {
        "value": "nodejs20.x",
      },
      "ap-northeast-3": {
        "value": "nodejs20.x",
      },
      "ap-south-1": {
        "value": "nodejs20.x",
      },
      "ap-south-2": {
        "value": "nodejs20.x",
      },
      "ap-southeast-1": {
        "value": "nodejs20.x",
      },
      "ap-southeast-2": {
        "value": "nodejs20.x",
      },
      "ap-southeast-3": {
        "value": "nodejs20.x",
      },
      "ap-southeast-4": {
        "value": "nodejs20.x",
      },
      "ap-southeast-5": {
        "value": "nodejs20.x",
      },
      "ap-southeast-7": {
        "value": "nodejs20.x",
      },
      "ca-central-1": {
        "value": "nodejs20.x",
      },
      "ca-west-1": {
        "value": "nodejs20.x",
      },
      "cn-north-1": {
        "value": "nodejs18.x",
      },
      "cn-northwest-1": {
        "value": "nodejs18.x",
      },
      "eu-central-1": {
        "value": "nodejs20.x",
      },
      "eu-central-2": {
        "value": "nodejs20.x",
      },
      "eu-isoe-west-1": {
        "value": "nodejs18.x",
      },
      "eu-north-1": {
        "value": "nodejs20.x",
      },
      "eu-south-1": {
        "value": "nodejs20.x",
      },
      "eu-south-2": {
        "value": "nodejs20.x",
      },
      "eu-west-1": {
        "value": "nodejs20.x",
      },
      "eu-west-2": {
        "value": "nodejs20.x",
      },
      "eu-west-3": {
        "value": "nodejs20.x",
      },
      "il-central-1": {
        "value": "nodejs20.x",
      },
      "me-central-1": {
        "value": "nodejs20.x",
      },
      "me-south-1": {
        "value": "nodejs20.x",
      },
      "mx-central-1": {
        "value": "nodejs20.x",
      },
      "sa-east-1": {
        "value": "nodejs20.x",
      },
      "us-east-1": {
        "value": "nodejs20.x",
      },
      "us-east-2": {
        "value": "nodejs20.x",
      },
      "us-gov-east-1": {
        "value": "nodejs18.x",
      },
      "us-gov-west-1": {
        "value": "nodejs18.x",
      },
      "us-iso-east-1": {
        "value": "nodejs18.x",
      },
      "us-iso-west-1": {
        "value": "nodejs18.x",
      },
      "us-isob-east-1": {
        "value": "nodejs18.x",
      },
      "us-west-1": {
        "value": "nodejs20.x",
      },
      "us-west-2": {
        "value": "nodejs20.x",
      },
    },
  },
  "Outputs": {
    "CrossAccountCodeStarSonarCodeScannerSonarqubeSecretArnC12871F1": {
      "Value": {
        "Ref": "CrossAccountCodeStarSonarCodeScannerSonarQubeTokenFB4F66A5",
      },
    },
  },
  "Parameters": {
    "BootstrapVersion": {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": {
    "CrossAccountCodeStarAccessLogsBucket8DE3FC63": {
      "DeletionPolicy": "Delete",
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": {
        "BucketEncryption": {
          "ServerSideEncryptionConfiguration": [
            {
              "ServerSideEncryptionByDefault": {
                "SSEAlgorithm": "AES256",
              },
            },
          ],
        },
        "OwnershipControls": {
          "Rules": [
            {
              "ObjectOwnership": "ObjectWriter",
            },
          ],
        },
        "PublicAccessBlockConfiguration": {
          "BlockPublicAcls": true,
          "BlockPublicPolicy": true,
          "IgnorePublicAcls": true,
          "RestrictPublicBuckets": true,
        },
        "Tags": [
          {
            "Key": "aws-cdk:auto-delete-objects",
            "Value": "true",
          },
        ],
      },
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Delete",
    },
    "CrossAccountCodeStarAccessLogsBucketAutoDeleteObjectsCustomResource45F56A3A": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "CrossAccountCodeStarAccessLogsBucketPolicy6E1F9C06",
      ],
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": {
        "BucketName": {
          "Ref": "CrossAccountCodeStarAccessLogsBucket8DE3FC63",
        },
        "ServiceToken": {
          "Fn::GetAtt": [
            "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F",
            "Arn",
          ],
        },
      },
      "Type": "Custom::S3AutoDeleteObjects",
      "UpdateReplacePolicy": "Delete",
    },
    "CrossAccountCodeStarAccessLogsBucketPolicy6E1F9C06": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": {
        "Bucket": {
          "Ref": "CrossAccountCodeStarAccessLogsBucket8DE3FC63",
        },
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "s3:*",
              "Condition": {
                "Bool": {
                  "aws:SecureTransport": "false",
                },
              },
              "Effect": "Deny",
              "Principal": {
                "AWS": "*",
              },
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "CrossAccountCodeStarAccessLogsBucket8DE3FC63",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "CrossAccountCodeStarAccessLogsBucket8DE3FC63",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": [
                "s3:PutBucketPolicy",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
              ],
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::GetAtt": [
                    "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
                    "Arn",
                  ],
                },
              },
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "CrossAccountCodeStarAccessLogsBucket8DE3FC63",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "CrossAccountCodeStarAccessLogsBucket8DE3FC63",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": "s3:PutObject",
              "Condition": {
                "ArnLike": {
                  "aws:SourceArn": {
                    "Fn::GetAtt": [
                      "CrossAccountCodeStarArtifactsBucket316CAFC0",
                      "Arn",
                    ],
                  },
                },
                "StringEquals": {
                  "aws:SourceAccount": {
                    "Ref": "AWS::AccountId",
                  },
                },
              },
              "Effect": "Allow",
              "Principal": {
                "Service": "logging.s3.amazonaws.com",
              },
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    {
                      "Fn::GetAtt": [
                        "CrossAccountCodeStarAccessLogsBucket8DE3FC63",
                        "Arn",
                      ],
                    },
                    "/access-logs*",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::S3::BucketPolicy",
    },
    "CrossAccountCodeStarArtifactKey2ABD4E1A": {
      "DeletionPolicy": "Delete",
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": {
        "EnableKeyRotation": true,
        "KeyPolicy": {
          "Statement": [
            {
              "Action": "kms:*",
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":root",
                    ],
                  ],
                },
              },
              "Resource": "*",
            },
            {
              "Action": [
                "kms:Decrypt",
                "kms:DescribeKey",
              ],
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":role/cdk-hnb659fds-deploy-role-",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      "-",
                      {
                        "Ref": "AWS::Region",
                      },
                    ],
                  ],
                },
              },
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::KMS::Key",
      "UpdateReplacePolicy": "Delete",
    },
    "CrossAccountCodeStarArtifactsBucket316CAFC0": {
      "DeletionPolicy": "Delete",
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": {
        "BucketEncryption": {
          "ServerSideEncryptionConfiguration": [
            {
              "ServerSideEncryptionByDefault": {
                "KMSMasterKeyID": {
                  "Fn::GetAtt": [
                    "CrossAccountCodeStarArtifactKey2ABD4E1A",
                    "Arn",
                  ],
                },
                "SSEAlgorithm": "aws:kms",
              },
            },
          ],
        },
        "LoggingConfiguration": {
          "DestinationBucketName": {
            "Ref": "CrossAccountCodeStarAccessLogsBucket8DE3FC63",
          },
          "LogFilePrefix": "access-logs",
        },
        "OwnershipControls": {
          "Rules": [
            {
              "ObjectOwnership": "BucketOwnerEnforced",
            },
          ],
        },
        "PublicAccessBlockConfiguration": {
          "BlockPublicAcls": true,
          "BlockPublicPolicy": true,
          "IgnorePublicAcls": true,
          "RestrictPublicBuckets": true,
        },
        "Tags": [
          {
            "Key": "aws-cdk:auto-delete-objects",
            "Value": "true",
          },
        ],
      },
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Delete",
    },
    "CrossAccountCodeStarArtifactsBucketAutoDeleteObjectsCustomResource44E1D0A7": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "CrossAccountCodeStarArtifactsBucketPolicy41FA7A89",
      ],
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": {
        "BucketName": {
          "Ref": "CrossAccountCodeStarArtifactsBucket316CAFC0",
        },
        "ServiceToken": {
          "Fn::GetAtt": [
            "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F",
            "Arn",
          ],
        },
      },
      "Type": "Custom::S3AutoDeleteObjects",
      "UpdateReplacePolicy": "Delete",
    },
    "CrossAccountCodeStarArtifactsBucketPolicy41FA7A89": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": {
        "Bucket": {
          "Ref": "CrossAccountCodeStarArtifactsBucket316CAFC0",
        },
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "s3:*",
              "Condition": {
                "Bool": {
                  "aws:SecureTransport": "false",
                },
              },
              "Effect": "Deny",
              "Principal": {
                "AWS": "*",
              },
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "CrossAccountCodeStarArtifactsBucket316CAFC0",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "CrossAccountCodeStarArtifactsBucket316CAFC0",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": [
                "s3:PutBucketPolicy",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
              ],
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::GetAtt": [
                    "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
                    "Arn",
                  ],
                },
              },
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "CrossAccountCodeStarArtifactsBucket316CAFC0",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "CrossAccountCodeStarArtifactsBucket316CAFC0",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
              ],
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":role/cdk-hnb659fds-deploy-role-",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      "-",
                      {
                        "Ref": "AWS::Region",
                      },
                    ],
                  ],
                },
              },
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "CrossAccountCodeStarArtifactsBucket316CAFC0",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "CrossAccountCodeStarArtifactsBucket316CAFC0",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::S3::BucketPolicy",
    },
    "CrossAccountCodeStarAssetsFileAsset13AE6CC19": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": {
        "Artifacts": {
          "Type": "CODEPIPELINE",
        },
        "Cache": {
          "Type": "NO_CACHE",
        },
        "Description": "Pipeline step Default/CodePipeline/Assets/FileAsset1",
        "EncryptionKey": {
          "Fn::GetAtt": [
            "CrossAccountCodeStarArtifactKey2ABD4E1A",
            "Arn",
          ],
        },
        "Environment": {
          "ComputeType": "BUILD_GENERAL1_SMALL",
          "Image": "aws/codebuild/standard:7.0",
          "ImagePullCredentialsType": "CODEBUILD",
          "PrivilegedMode": false,
          "Type": "LINUX_CONTAINER",
        },
        "ServiceRole": {
          "Fn::GetAtt": [
            "CrossAccountCodeStarAssetsFileRole6A43F551",
            "Arn",
          ],
        },
        "Source": {
          "BuildSpec": "{
  "version": "0.2",
  "phases": {
    "install": {
      "commands": [
        "npm install -g cdk-assets@latest"
      ]
    },
    "build": {
      "commands": [
        "cdk-assets --path \\"assembly-Stage/StageAppStack7618C9EF.assets.json\\" --verbose publish \\"14dd2d75ed909331e6d3efb3db54ed40dc6bd19804f86e266387ad8934897c85:current_account-current_region\\""
      ]
    }
  }
}",
          "Type": "CODEPIPELINE",
        },
      },
      "Type": "AWS::CodeBuild::Project",
    },
    "CrossAccountCodeStarAssetsFileRole6A43F551": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "codebuild.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "CrossAccountCodeStarAssetsFileRoleDefaultPolicyCFA0DC64": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "logs:CreateLogGroup",
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":logs:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":log-group:/aws/codebuild/*",
                  ],
                ],
              },
            },
            {
              "Action": [
                "codebuild:CreateReportGroup",
                "codebuild:CreateReport",
                "codebuild:UpdateReport",
                "codebuild:BatchPutTestCases",
                "codebuild:BatchPutCodeCoverages",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":codebuild:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":report-group/*",
                  ],
                ],
              },
            },
            {
              "Action": [
                "codebuild:BatchGetBuilds",
                "codebuild:StartBuild",
                "codebuild:StopBuild",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Resource": {
                "Fn::Sub": "arn:\${AWS::Partition}:iam::\${AWS::AccountId}:role/cdk-hnb659fds-file-publishing-role-\${AWS::AccountId}-\${AWS::Region}",
              },
            },
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "CrossAccountCodeStarArtifactsBucket316CAFC0",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "CrossAccountCodeStarArtifactsBucket316CAFC0",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": [
                "kms:Decrypt",
                "kms:DescribeKey",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "CrossAccountCodeStarArtifactKey2ABD4E1A",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CrossAccountCodeStarAssetsFileRoleDefaultPolicyCFA0DC64",
        "Roles": [
          {
            "Ref": "CrossAccountCodeStarAssetsFileRole6A43F551",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CrossAccountCodeStarCodeBuildActionRoleB407ED8D": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::GetAtt": [
                    "CrossAccountCodeStarCodePipelineRole2C20EBCC",
                    "Arn",
                  ],
                },
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "CrossAccountCodeStarCodeBuildActionRoleDefaultPolicyE57B8B80": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "codebuild:BatchGetBuilds",
                "codebuild:StartBuild",
                "codebuild:StopBuild",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "CrossAccountCodeStarCodePipelineBuildSynthCdkBuildProject78772731",
                  "Arn",
                ],
              },
            },
            {
              "Action": [
                "codebuild:BatchGetBuilds",
                "codebuild:StartBuild",
                "codebuild:StopBuild",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "CrossAccountCodeStarUpdatePipelineSelfMutation9C319999",
                  "Arn",
                ],
              },
            },
            {
              "Action": [
                "codebuild:BatchGetBuilds",
                "codebuild:StartBuild",
                "codebuild:StopBuild",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "CrossAccountCodeStarAssetsFileAsset13AE6CC19",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CrossAccountCodeStarCodeBuildActionRoleDefaultPolicyE57B8B80",
        "Roles": [
          {
            "Ref": "CrossAccountCodeStarCodeBuildActionRoleB407ED8D",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CrossAccountCodeStarCodePipeline0BF48DA7": {
      "DependsOn": [
        "CrossAccountCodeStarCodePipelineRoleDefaultPolicyCF427995",
        "CrossAccountCodeStarCodePipelineRole2C20EBCC",
      ],
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": {
        "ArtifactStore": {
          "EncryptionKey": {
            "Id": {
              "Fn::GetAtt": [
                "CrossAccountCodeStarArtifactKey2ABD4E1A",
                "Arn",
              ],
            },
            "Type": "KMS",
          },
          "Location": {
            "Ref": "CrossAccountCodeStarArtifactsBucket316CAFC0",
          },
          "Type": "S3",
        },
        "PipelineType": "V1",
        "RestartExecutionOnUpdate": true,
        "RoleArn": {
          "Fn::GetAtt": [
            "CrossAccountCodeStarCodePipelineRole2C20EBCC",
            "Arn",
          ],
        },
        "Stages": [
          {
            "Actions": [
              {
                "ActionTypeId": {
                  "Category": "Source",
                  "Owner": "AWS",
                  "Provider": "CodeStarSourceConnection",
                  "Version": "1",
                },
                "Configuration": {
                  "BranchName": "mainline",
                  "ConnectionArn": "arn:aws:codestar-connections:region:account:connection/uuid",
                  "FullRepositoryId": "owner/repo",
                },
                "Name": "owner_repo",
                "OutputArtifacts": [
                  {
                    "Name": "owner_repo_Source",
                  },
                ],
                "RoleArn": {
                  "Fn::GetAtt": [
                    "CrossAccountCodeStarCodePipelineSourceownerrepoCodePipelineActionRole4818694B",
                    "Arn",
                  ],
                },
                "RunOrder": 1,
              },
            ],
            "Name": "Source",
          },
          {
            "Actions": [
              {
                "ActionTypeId": {
                  "Category": "Build",
                  "Owner": "AWS",
                  "Provider": "CodeBuild",
                  "Version": "1",
                },
                "Configuration": {
                  "EnvironmentVariables": "[{"name":"_PROJECT_CONFIG_HASH","type":"PLAINTEXT","value":"1743fe23e45e6f2b0fdc043d5f0f1105f88a2596949f76d42fb43084b867d9ae"}]",
                  "ProjectName": {
                    "Ref": "CrossAccountCodeStarCodePipelineBuildSynthCdkBuildProject78772731",
                  },
                },
                "InputArtifacts": [
                  {
                    "Name": "owner_repo_Source",
                  },
                ],
                "Name": "Synth",
                "OutputArtifacts": [
                  {
                    "Name": "Synth_Output",
                  },
                  {
                    "Name": "Synth__",
                  },
                ],
                "RoleArn": {
                  "Fn::GetAtt": [
                    "CrossAccountCodeStarCodeBuildActionRoleB407ED8D",
                    "Arn",
                  ],
                },
                "RunOrder": 1,
              },
            ],
            "Name": "Build",
          },
          {
            "Actions": [
              {
                "ActionTypeId": {
                  "Category": "Build",
                  "Owner": "AWS",
                  "Provider": "CodeBuild",
                  "Version": "1",
                },
                "Configuration": {
                  "EnvironmentVariables": "[{"name":"_PROJECT_CONFIG_HASH","type":"PLAINTEXT","value":"f5c136b42f09ed582b9273672c6585264fb7142640d362897bd6649d732584c2"}]",
                  "ProjectName": {
                    "Ref": "CrossAccountCodeStarUpdatePipelineSelfMutation9C319999",
                  },
                },
                "InputArtifacts": [
                  {
                    "Name": "Synth_Output",
                  },
                ],
                "Name": "SelfMutate",
                "RoleArn": {
                  "Fn::GetAtt": [
                    "CrossAccountCodeStarCodeBuildActionRoleB407ED8D",
                    "Arn",
                  ],
                },
                "RunOrder": 1,
              },
            ],
            "Name": "UpdatePipeline",
          },
          {
            "Actions": [
              {
                "ActionTypeId": {
                  "Category": "Build",
                  "Owner": "AWS",
                  "Provider": "CodeBuild",
                  "Version": "1",
                },
                "Configuration": {
                  "ProjectName": {
                    "Ref": "CrossAccountCodeStarAssetsFileAsset13AE6CC19",
                  },
                },
                "InputArtifacts": [
                  {
                    "Name": "Synth_Output",
                  },
                ],
                "Name": "FileAsset1",
                "RoleArn": {
                  "Fn::GetAtt": [
                    "CrossAccountCodeStarCodeBuildActionRoleB407ED8D",
                    "Arn",
                  ],
                },
                "RunOrder": 1,
              },
            ],
            "Name": "Assets",
          },
          {
            "Actions": [
              {
                "ActionTypeId": {
                  "Category": "Deploy",
                  "Owner": "AWS",
                  "Provider": "CloudFormation",
                  "Version": "1",
                },
                "Configuration": {
                  "ActionMode": "CHANGE_SET_REPLACE",
                  "Capabilities": "CAPABILITY_NAMED_IAM,CAPABILITY_AUTO_EXPAND",
                  "ChangeSetName": "PipelineChange",
                  "RoleArn": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition",
                        },
                        ":iam::",
                        {
                          "Ref": "AWS::AccountId",
                        },
                        ":role/cdk-hnb659fds-cfn-exec-role-",
                        {
                          "Ref": "AWS::AccountId",
                        },
                        "-",
                        {
                          "Ref": "AWS::Region",
                        },
                      ],
                    ],
                  },
                  "StackName": "Stage-AppStack",
                  "TemplatePath": "Synth_Output::assembly-Stage/StageAppStack7618C9EF.template.json",
                },
                "InputArtifacts": [
                  {
                    "Name": "Synth_Output",
                  },
                ],
                "Name": "Prepare",
                "RoleArn": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":role/cdk-hnb659fds-deploy-role-",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      "-",
                      {
                        "Ref": "AWS::Region",
                      },
                    ],
                  ],
                },
                "RunOrder": 1,
              },
              {
                "ActionTypeId": {
                  "Category": "Deploy",
                  "Owner": "AWS",
                  "Provider": "CloudFormation",
                  "Version": "1",
                },
                "Configuration": {
                  "ActionMode": "CHANGE_SET_EXECUTE",
                  "ChangeSetName": "PipelineChange",
                  "StackName": "Stage-AppStack",
                },
                "Name": "Deploy",
                "RoleArn": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":role/cdk-hnb659fds-deploy-role-",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      "-",
                      {
                        "Ref": "AWS::Region",
                      },
                    ],
                  ],
                },
                "RunOrder": 2,
              },
            ],
            "Name": "Stage",
          },
        ],
      },
      "Type": "AWS::CodePipeline::Pipeline",
    },
    "CrossAccountCodeStarCodePipelineBuildSynthCdkBuildProject78772731": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": {
        "Artifacts": {
          "Type": "CODEPIPELINE",
        },
        "Cache": {
          "Type": "NO_CACHE",
        },
        "Description": "Pipeline step Default/CodePipeline/Build/Synth",
        "EncryptionKey": {
          "Fn::GetAtt": [
            "CrossAccountCodeStarArtifactKey2ABD4E1A",
            "Arn",
          ],
        },
        "Environment": {
          "ComputeType": "BUILD_GENERAL1_SMALL",
          "Image": "aws/codebuild/standard:7.0",
          "ImagePullCredentialsType": "CODEBUILD",
          "PrivilegedMode": false,
          "Type": "LINUX_CONTAINER",
        },
        "ServiceRole": {
          "Fn::GetAtt": [
            "CrossAccountCodeStarCodePipelineBuildSynthCdkBuildProjectRole91E5AC1E",
            "Arn",
          ],
        },
        "Source": {
          "BuildSpec": "{
  "version": "0.2",
  "phases": {
    "install": {
      "commands": [
        "npm install -g aws-cdk pnpm",
        "npx projen install"
      ]
    },
    "build": {
      "commands": [
        "npx projen build"
      ]
    }
  },
  "artifacts": {
    "secondary-artifacts": {
      "Synth_Output": {
        "base-directory": "cdk.out",
        "files": "**/*"
      },
      "Synth__": {
        "base-directory": ".",
        "files": "**/*"
      }
    }
  }
}",
          "Type": "CODEPIPELINE",
        },
      },
      "Type": "AWS::CodeBuild::Project",
    },
    "CrossAccountCodeStarCodePipelineBuildSynthCdkBuildProjectRole91E5AC1E": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "codebuild.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "CrossAccountCodeStarCodePipelineBuildSynthCdkBuildProjectRoleDefaultPolicyE3B5D090": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "logs:CreateLogGroup",
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":logs:",
                      {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":log-group:/aws/codebuild/",
                      {
                        "Ref": "CrossAccountCodeStarCodePipelineBuildSynthCdkBuildProject78772731",
                      },
                    ],
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":logs:",
                      {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":log-group:/aws/codebuild/",
                      {
                        "Ref": "CrossAccountCodeStarCodePipelineBuildSynthCdkBuildProject78772731",
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": [
                "codebuild:CreateReportGroup",
                "codebuild:CreateReport",
                "codebuild:UpdateReport",
                "codebuild:BatchPutTestCases",
                "codebuild:BatchPutCodeCoverages",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":codebuild:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":report-group/",
                    {
                      "Ref": "CrossAccountCodeStarCodePipelineBuildSynthCdkBuildProject78772731",
                    },
                    "-*",
                  ],
                ],
              },
            },
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
                "s3:PutObject",
                "s3:PutObjectLegalHold",
                "s3:PutObjectRetention",
                "s3:PutObjectTagging",
                "s3:PutObjectVersionTagging",
                "s3:Abort*",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "CrossAccountCodeStarArtifactsBucket316CAFC0",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "CrossAccountCodeStarArtifactsBucket316CAFC0",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": [
                "kms:Decrypt",
                "kms:DescribeKey",
                "kms:Encrypt",
                "kms:ReEncrypt*",
                "kms:GenerateDataKey*",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "CrossAccountCodeStarArtifactKey2ABD4E1A",
                  "Arn",
                ],
              },
            },
            {
              "Action": [
                "kms:Decrypt",
                "kms:Encrypt",
                "kms:ReEncrypt*",
                "kms:GenerateDataKey*",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "CrossAccountCodeStarArtifactKey2ABD4E1A",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CrossAccountCodeStarCodePipelineBuildSynthCdkBuildProjectRoleDefaultPolicyE3B5D090",
        "Roles": [
          {
            "Ref": "CrossAccountCodeStarCodePipelineBuildSynthCdkBuildProjectRole91E5AC1E",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CrossAccountCodeStarCodePipelineRole2C20EBCC": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "codepipeline.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "CrossAccountCodeStarCodePipelineRoleDefaultPolicyCF427995": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
                "s3:PutObject",
                "s3:PutObjectLegalHold",
                "s3:PutObjectRetention",
                "s3:PutObjectTagging",
                "s3:PutObjectVersionTagging",
                "s3:Abort*",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "CrossAccountCodeStarArtifactsBucket316CAFC0",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "CrossAccountCodeStarArtifactsBucket316CAFC0",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": [
                "kms:Decrypt",
                "kms:DescribeKey",
                "kms:Encrypt",
                "kms:ReEncrypt*",
                "kms:GenerateDataKey*",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "CrossAccountCodeStarArtifactKey2ABD4E1A",
                  "Arn",
                ],
              },
            },
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "CrossAccountCodeStarCodePipelineSourceownerrepoCodePipelineActionRole4818694B",
                  "Arn",
                ],
              },
            },
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "CrossAccountCodeStarCodeBuildActionRoleB407ED8D",
                  "Arn",
                ],
              },
            },
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":iam::",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":role/cdk-hnb659fds-deploy-role-",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    "-",
                    {
                      "Ref": "AWS::Region",
                    },
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CrossAccountCodeStarCodePipelineRoleDefaultPolicyCF427995",
        "Roles": [
          {
            "Ref": "CrossAccountCodeStarCodePipelineRole2C20EBCC",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CrossAccountCodeStarCodePipelineSourceownerrepoCodePipelineActionRole4818694B": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":root",
                    ],
                  ],
                },
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "CrossAccountCodeStarCodePipelineSourceownerrepoCodePipelineActionRoleDefaultPolicyC9C804E3": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "codestar-connections:UseConnection",
              "Effect": "Allow",
              "Resource": "arn:aws:codestar-connections:region:account:connection/uuid",
            },
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
                "s3:PutObject",
                "s3:PutObjectLegalHold",
                "s3:PutObjectRetention",
                "s3:PutObjectTagging",
                "s3:PutObjectVersionTagging",
                "s3:Abort*",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "CrossAccountCodeStarArtifactsBucket316CAFC0",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "CrossAccountCodeStarArtifactsBucket316CAFC0",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": [
                "kms:Decrypt",
                "kms:DescribeKey",
                "kms:Encrypt",
                "kms:ReEncrypt*",
                "kms:GenerateDataKey*",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "CrossAccountCodeStarArtifactKey2ABD4E1A",
                  "Arn",
                ],
              },
            },
            {
              "Action": [
                "s3:PutObjectAcl",
                "s3:PutObjectVersionAcl",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    {
                      "Fn::GetAtt": [
                        "CrossAccountCodeStarArtifactsBucket316CAFC0",
                        "Arn",
                      ],
                    },
                    "/*",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CrossAccountCodeStarCodePipelineSourceownerrepoCodePipelineActionRoleDefaultPolicyC9C804E3",
        "Roles": [
          {
            "Ref": "CrossAccountCodeStarCodePipelineSourceownerrepoCodePipelineActionRole4818694B",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CrossAccountCodeStarSonarCodeScannerSonarQubeTokenFB4F66A5": {
      "DeletionPolicy": "Delete",
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-SMG4",
              "reason": "Key rotation is not possible as a user token needs to be generated from Sonarqube",
            },
            {
              "id": "AwsPrototyping-SecretsManagerRotationEnabled",
              "reason": "Key rotation is not possible as a user token needs to be generated from Sonarqube",
            },
            {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": {
        "GenerateSecretString": {},
      },
      "Type": "AWS::SecretsManager::Secret",
      "UpdateReplacePolicy": "Delete",
    },
    "CrossAccountCodeStarSonarCodeScannerSynthBuildProjectOnSynthSuccess0662FD5C": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": {
        "EventPattern": {
          "detail": {
            "build-status": [
              "SUCCEEDED",
            ],
            "project-name": [
              {
                "Fn::Select": [
                  1,
                  {
                    "Fn::Split": [
                      "/",
                      {
                        "Fn::Select": [
                          5,
                          {
                            "Fn::Split": [
                              ":",
                              {
                                "Fn::GetAtt": [
                                  "CrossAccountCodeStarCodePipelineBuildSynthCdkBuildProject78772731",
                                  "Arn",
                                ],
                              },
                            ],
                          },
                        ],
                      },
                    ],
                  },
                ],
              },
            ],
          },
          "detail-type": [
            "CodeBuild Build State Change",
          ],
          "source": [
            "aws.codebuild",
          ],
        },
        "State": "ENABLED",
        "Targets": [
          {
            "Arn": {
              "Fn::GetAtt": [
                "CrossAccountCodeStarSonarCodeScannerValidationProjectC040E69E",
                "Arn",
              ],
            },
            "Id": "Target0",
            "InputTransformer": {
              "InputPathsMap": {
                "detail-build-id": "$.detail.build-id",
              },
              "InputTemplate": "{"environmentVariablesOverride":[{"name":"SYNTH_BUILD_ID","type":"PLAINTEXT","value":<detail-build-id>}]}",
            },
            "RoleArn": {
              "Fn::GetAtt": [
                "CrossAccountCodeStarSonarCodeScannerValidationProjectEventsRole95DFBACB",
                "Arn",
              ],
            },
          },
        ],
      },
      "Type": "AWS::Events::Rule",
    },
    "CrossAccountCodeStarSonarCodeScannerValidationProjectC040E69E": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": {
        "Artifacts": {
          "Type": "NO_ARTIFACTS",
        },
        "Cache": {
          "Type": "NO_CACHE",
        },
        "EncryptionKey": "alias/aws/s3",
        "Environment": {
          "ComputeType": "BUILD_GENERAL1_SMALL",
          "EnvironmentVariables": [
            {
              "Name": "SONARQUBE_TOKEN",
              "Type": "SECRETS_MANAGER",
              "Value": {
                "Ref": "CrossAccountCodeStarSonarCodeScannerSonarQubeTokenFB4F66A5",
              },
            },
            {
              "Name": "SONARQUBE_ENDPOINT",
              "Type": "PLAINTEXT",
              "Value": "https://sonar.dev",
            },
            {
              "Name": "PROJECT_NAME",
              "Type": "PLAINTEXT",
              "Value": "Default",
            },
          ],
          "Image": "aws/codebuild/standard:5.0",
          "ImagePullCredentialsType": "CODEBUILD",
          "PrivilegedMode": false,
          "Type": "LINUX_CONTAINER",
        },
        "ServiceRole": {
          "Fn::GetAtt": [
            "CrossAccountCodeStarSonarCodeScannerValidationProjectRole254F7395",
            "Arn",
          ],
        },
        "Source": {
          "BuildSpec": "{
  "version": "0.2",
  "env": {
    "shell": "bash"
  },
  "phases": {
    "install": {
      "commands": [
        "npm install -g aws-cdk",
        "gem install cfn-nag"
      ]
    },
    "build": {
      "commands": [
        "export RESOLVED_SOURCE_VERSION=\`aws codebuild batch-get-builds --ids $SYNTH_BUILD_ID | jq -r '.builds[0].resolvedSourceVersion'\`",
        "export BUILT_ARTIFACT_URI=\`aws codebuild batch-get-builds --ids $SYNTH_BUILD_ID | jq -r '.builds[0].secondaryArtifacts[] | select(.artifactIdentifier == \\"Synth__\\") | .location' | awk '{sub(\\"arn:aws:s3:::\\",\\"s3://\\")}1' $1\`",
        "export SYNTH_SOURCE_URI=\`aws codebuild batch-get-builds --ids $SYNTH_BUILD_ID | jq -r '.builds[0].sourceVersion' | awk '{sub(\\"arn:aws:s3:::\\",\\"s3://\\")}1' $1\`",
        "aws s3 cp $SYNTH_SOURCE_URI source.zip",
        "aws s3 cp $BUILT_ARTIFACT_URI built.zip",
        "unzip source.zip -d src",
        "unzip built.zip -d built",
        "rm source.zip built.zip",
        "rsync -a built/* src --include=\\"*/\\"  --include=\\"**/coverage/**\\" --include=\\"**/cdk.out/**\\" --exclude=\\"**/node_modules/**/*\\" --exclude=\\"**/.env/**\\" --exclude=\\"*\\" --prune-empty-dirs",
        "CREATE_PROJECT_OUTPUT=\`curl -X POST -u $SONARQUBE_TOKEN: \\"$SONARQUBE_ENDPOINT/api/projects/create?name=$PROJECT_NAME&project=$PROJECT_NAME&visibility=private\\" \`",
        "if [[ \\"$(echo $CREATE_PROJECT_OUTPUT | jq .errors)\\" == \\"null\\" ]]; then curl -X POST -u $SONARQUBE_TOKEN: \\"$SONARQUBE_ENDPOINT/api/permissions/add_group?projectKey=$PROJECT_NAME&groupName=dev&permission=admin\\" ;curl -X POST -u $SONARQUBE_TOKEN: \\"$SONARQUBE_ENDPOINT/api/permissions/add_group?projectKey=$PROJECT_NAME&groupName=dev&permission=codeviewer\\" ;curl -X POST -u $SONARQUBE_TOKEN: \\"$SONARQUBE_ENDPOINT/api/permissions/add_group?projectKey=$PROJECT_NAME&groupName=dev&permission=issueadmin\\" ;curl -X POST -u $SONARQUBE_TOKEN: \\"$SONARQUBE_ENDPOINT/api/permissions/add_group?projectKey=$PROJECT_NAME&groupName=dev&permission=securityhotspotadmin\\" ;curl -X POST -u $SONARQUBE_TOKEN: \\"$SONARQUBE_ENDPOINT/api/permissions/add_group?projectKey=$PROJECT_NAME&groupName=dev&permission=scan\\" ;curl -X POST -u $SONARQUBE_TOKEN: \\"$SONARQUBE_ENDPOINT/api/permissions/add_group?projectKey=$PROJECT_NAME&groupName=dev&permission=user\\" ;curl -X POST -u $SONARQUBE_TOKEN: \\"$SONARQUBE_ENDPOINT/api/project_branches/rename?project=$PROJECT_NAME&name=mainline\\" ;curl -X POST -u $SONARQUBE_TOKEN: \\"$SONARQUBE_ENDPOINT/api/project_tags/set?project=$PROJECT_NAME&tags=dev\\" ;export DEFAULT_PROFILE=\`curl -X GET -u $SONARQUBE_TOKEN: \\"$SONARQUBE_ENDPOINT/api/qualityprofiles/search?qualityProfile=dev\\"  | jq .profiles\`;export SPECIFIC_PROFILE=\`curl -X GET -u $SONARQUBE_TOKEN: \\"$SONARQUBE_ENDPOINT/api/qualityprofiles/search?qualityProfile=undefined\\"  | jq .profiles\`;export MERGED_PROFILES=\`jq --argjson arr1 \\"$DEFAULT_PROFILE\\" --argjson arr2 \\"$SPECIFIC_PROFILE\\" -n '$arr1 + $arr2 | group_by(.language) | map(.[-1])'\`;echo $MERGED_PROFILES | jq -c '.[]' | while read i; do curl -X POST -u $SONARQUBE_TOKEN: \\"$SONARQUBE_ENDPOINT/api/qualityprofiles/add_project?project=$PROJECT_NAME&language=\`echo $i | jq -r .language\`&qualityProfile=\`echo $i | jq -r .name\`\\" ; done;export DEFAULT_GATE=\`curl -X GET -u $SONARQUBE_TOKEN: \\"$SONARQUBE_ENDPOINT/api/qualitygates/search?gateName=dev\\" \`;export SPECIFIC_GATE=\`curl -X GET -u $SONARQUBE_TOKEN: \\"$SONARQUBE_ENDPOINT/api/qualitygates/search?gateName=undefined\\" \`;if [[ \\"$(echo $SPECIFIC_GATE | jq .errors)\\" == \\"null\\" && \\"$(echo $SPECIFIC_GATE | jq '.results | length')\\" -gt 0 ]]; then export GATE_NAME=undefined; else export GATE_NAME=dev; fi;curl -X POST -u $SONARQUBE_TOKEN: \\"$SONARQUBE_ENDPOINT/api/qualitygates/select?projectKey=$PROJECT_NAME&gateName=$GATE_NAME\\" ; fi;",
        "mkdir -p src/reports",
        "npx owasp-dependency-check --format HTML --out src/reports --exclude '**/.git/**/*' --scan src --enableExperimental --bin /tmp/dep-check --disableRetireJS",
        "cfn_nag  built/cdk.out/**/*.template.json --output-format=json > src/reports/cfn-nag-report.json",
        "cd src",
        "npx sonarqube-scanner -Dsonar.login=$SONARQUBE_TOKEN -Dsonar.projectKey=$PROJECT_NAME -Dsonar.projectName=$PROJECT_NAME -Dsonar.projectVersion=\`echo $RESOLVED_SOURCE_VERSION | cut -c1-7\` -Dsonar.branch.name=mainline -Dsonar.host.url=$SONARQUBE_ENDPOINT -Dsonar.cfn.nag.reportFiles=reports/cfn-nag-report.json -Dsonar.dependencyCheck.htmlReportPath=reports/dependency-check-report.html -Dsonar.javascript.lcov.reportPaths=**/coverage/lcov.info -Dsonar.clover.reportPath=**/coverage/clover.xml -Dsonar.exclusions=\\"**/reports/**,**/coverage/**\\" -Dsonar.sources=.",
        "curl -X GET -u $SONARQUBE_TOKEN: \\"$SONARQUBE_ENDPOINT/api/bitegarden/report/pdf_issues_breakdown?resource=$PROJECT_NAME&branch=mainline\\" --output reports/prototype-issues-report.pdf",
        "curl -X GET -u $SONARQUBE_TOKEN: \\"$SONARQUBE_ENDPOINT/api/bitegarden/report/pdf?resource=$PROJECT_NAME&branch=mainline\\" --output reports/prototype-executive-report.pdf",
        "curl -X GET -u $SONARQUBE_TOKEN: \\"$SONARQUBE_ENDPOINT/api/security_reports/download?project=$PROJECT_NAME\\" --output reports/prototype-security-report.pdf"
      ]
    }
  }
}",
          "Type": "NO_SOURCE",
        },
      },
      "Type": "AWS::CodeBuild::Project",
    },
    "CrossAccountCodeStarSonarCodeScannerValidationProjectEventsRole95DFBACB": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "events.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "CrossAccountCodeStarSonarCodeScannerValidationProjectEventsRoleDefaultPolicyD66ECF27": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "codebuild:StartBuild",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "CrossAccountCodeStarSonarCodeScannerValidationProjectC040E69E",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CrossAccountCodeStarSonarCodeScannerValidationProjectEventsRoleDefaultPolicyD66ECF27",
        "Roles": [
          {
            "Ref": "CrossAccountCodeStarSonarCodeScannerValidationProjectEventsRole95DFBACB",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CrossAccountCodeStarSonarCodeScannerValidationProjectRole254F7395": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "applies_to": [
                {
                  "regex": "/^Resource::arn:<AWS::Partition>:logs:<AWS::Region>:<AWS::AccountId>:log-group:/aws/codebuild/<.*SonarCodeScannerValidationProject.*>:\\*$/g",
                },
                {
                  "regex": "/^Resource::arn:<AWS::Partition>:codebuild:<AWS::Region>:<AWS::AccountId>:report-group/<.*SonarCodeScannerValidationProject.*>-\\*$/g",
                },
                {
                  "regex": "/^Action::s3:GetObject\\*$/g",
                },
                {
                  "regex": "/^Resource::<ArtifactsBucket.*.Arn>/\\*\\*$/g",
                },
              ],
              "id": "AwsSolutions-IAM5",
              "reason": "Validation CodeBuild project requires access to the ArtifactsBucket and ability to create logs.",
            },
            {
              "applies_to": [
                {
                  "regex": "/^Resource::arn:<AWS::Partition>:logs:<AWS::Region>:<AWS::AccountId>:log-group:/aws/codebuild/<.*SonarCodeScannerValidationProject.*>:\\*$/g",
                },
                {
                  "regex": "/^Resource::arn:<AWS::Partition>:codebuild:<AWS::Region>:<AWS::AccountId>:report-group/<.*SonarCodeScannerValidationProject.*>-\\*$/g",
                },
                {
                  "regex": "/^Action::s3:GetObject\\*$/g",
                },
                {
                  "regex": "/^Resource::<ArtifactsBucket.*.Arn>/\\*\\*$/g",
                },
              ],
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Validation CodeBuild project requires access to the ArtifactsBucket and ability to create logs.",
            },
            {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "codebuild.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "CrossAccountCodeStarSonarCodeScannerValidationProjectRoleDefaultPolicyA98A80D5": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "applies_to": [
                {
                  "regex": "/^Resource::arn:<AWS::Partition>:logs:<AWS::Region>:<AWS::AccountId>:log-group:/aws/codebuild/<.*SonarCodeScannerValidationProject.*>:\\*$/g",
                },
                {
                  "regex": "/^Resource::arn:<AWS::Partition>:codebuild:<AWS::Region>:<AWS::AccountId>:report-group/<.*SonarCodeScannerValidationProject.*>-\\*$/g",
                },
                {
                  "regex": "/^Action::s3:GetObject\\*$/g",
                },
                {
                  "regex": "/^Resource::<ArtifactsBucket.*.Arn>/\\*\\*$/g",
                },
              ],
              "id": "AwsSolutions-IAM5",
              "reason": "Validation CodeBuild project requires access to the ArtifactsBucket and ability to create logs.",
            },
            {
              "applies_to": [
                {
                  "regex": "/^Resource::arn:<AWS::Partition>:logs:<AWS::Region>:<AWS::AccountId>:log-group:/aws/codebuild/<.*SonarCodeScannerValidationProject.*>:\\*$/g",
                },
                {
                  "regex": "/^Resource::arn:<AWS::Partition>:codebuild:<AWS::Region>:<AWS::AccountId>:report-group/<.*SonarCodeScannerValidationProject.*>-\\*$/g",
                },
                {
                  "regex": "/^Action::s3:GetObject\\*$/g",
                },
                {
                  "regex": "/^Resource::<ArtifactsBucket.*.Arn>/\\*\\*$/g",
                },
              ],
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Validation CodeBuild project requires access to the ArtifactsBucket and ability to create logs.",
            },
            {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "secretsmanager:GetSecretValue",
              "Effect": "Allow",
              "Resource": {
                "Ref": "CrossAccountCodeStarSonarCodeScannerSonarQubeTokenFB4F66A5",
              },
            },
            {
              "Action": [
                "logs:CreateLogGroup",
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":logs:",
                      {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":log-group:/aws/codebuild/",
                      {
                        "Ref": "CrossAccountCodeStarSonarCodeScannerValidationProjectC040E69E",
                      },
                    ],
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":logs:",
                      {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":log-group:/aws/codebuild/",
                      {
                        "Ref": "CrossAccountCodeStarSonarCodeScannerValidationProjectC040E69E",
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": [
                "codebuild:CreateReportGroup",
                "codebuild:CreateReport",
                "codebuild:UpdateReport",
                "codebuild:BatchPutTestCases",
                "codebuild:BatchPutCodeCoverages",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":codebuild:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":report-group/",
                    {
                      "Ref": "CrossAccountCodeStarSonarCodeScannerValidationProjectC040E69E",
                    },
                    "-*",
                  ],
                ],
              },
            },
            {
              "Action": "codebuild:BatchGetBuilds",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "CrossAccountCodeStarCodePipelineBuildSynthCdkBuildProject78772731",
                  "Arn",
                ],
              },
            },
            {
              "Action": "s3:GetObject*",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "CrossAccountCodeStarArtifactsBucket316CAFC0",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "CrossAccountCodeStarArtifactsBucket316CAFC0",
                          "Arn",
                        ],
                      },
                      "/**",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": [
                "kms:Decrypt",
                "kms:DescribeKey",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "CrossAccountCodeStarArtifactKey2ABD4E1A",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CrossAccountCodeStarSonarCodeScannerValidationProjectRoleDefaultPolicyA98A80D5",
        "Roles": [
          {
            "Ref": "CrossAccountCodeStarSonarCodeScannerValidationProjectRole254F7395",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CrossAccountCodeStarUpdatePipelineSelfMutation9C319999": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": {
        "Artifacts": {
          "Type": "CODEPIPELINE",
        },
        "Cache": {
          "Type": "NO_CACHE",
        },
        "Description": "Pipeline step Default/CodePipeline/UpdatePipeline/SelfMutate",
        "EncryptionKey": {
          "Fn::GetAtt": [
            "CrossAccountCodeStarArtifactKey2ABD4E1A",
            "Arn",
          ],
        },
        "Environment": {
          "ComputeType": "BUILD_GENERAL1_SMALL",
          "Image": "aws/codebuild/standard:7.0",
          "ImagePullCredentialsType": "CODEBUILD",
          "PrivilegedMode": false,
          "Type": "LINUX_CONTAINER",
        },
        "ServiceRole": {
          "Fn::GetAtt": [
            "CrossAccountCodeStarUpdatePipelineSelfMutationRole3C347A34",
            "Arn",
          ],
        },
        "Source": {
          "BuildSpec": "{
  "version": "0.2",
  "phases": {
    "install": {
      "commands": [
        "npm install -g aws-cdk@2"
      ]
    },
    "build": {
      "commands": [
        "cdk -a . deploy Default --require-approval=never --verbose"
      ]
    }
  }
}",
          "Type": "CODEPIPELINE",
        },
      },
      "Type": "AWS::CodeBuild::Project",
    },
    "CrossAccountCodeStarUpdatePipelineSelfMutationRole3C347A34": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "codebuild.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "CrossAccountCodeStarUpdatePipelineSelfMutationRoleDefaultPolicy4C7EFD1C": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "logs:CreateLogGroup",
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":logs:",
                      {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":log-group:/aws/codebuild/",
                      {
                        "Ref": "CrossAccountCodeStarUpdatePipelineSelfMutation9C319999",
                      },
                    ],
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":logs:",
                      {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":log-group:/aws/codebuild/",
                      {
                        "Ref": "CrossAccountCodeStarUpdatePipelineSelfMutation9C319999",
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": [
                "codebuild:CreateReportGroup",
                "codebuild:CreateReport",
                "codebuild:UpdateReport",
                "codebuild:BatchPutTestCases",
                "codebuild:BatchPutCodeCoverages",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":codebuild:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":report-group/",
                    {
                      "Ref": "CrossAccountCodeStarUpdatePipelineSelfMutation9C319999",
                    },
                    "-*",
                  ],
                ],
              },
            },
            {
              "Action": "sts:AssumeRole",
              "Condition": {
                "ForAnyValue:StringEquals": {
                  "iam:ResourceTag/aws-cdk:bootstrap-role": [
                    "image-publishing",
                    "file-publishing",
                    "deploy",
                  ],
                },
              },
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:*:iam::",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":role/*",
                  ],
                ],
              },
            },
            {
              "Action": "cloudformation:DescribeStacks",
              "Effect": "Allow",
              "Resource": "*",
            },
            {
              "Action": "s3:ListBucket",
              "Effect": "Allow",
              "Resource": "*",
            },
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "CrossAccountCodeStarArtifactsBucket316CAFC0",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "CrossAccountCodeStarArtifactsBucket316CAFC0",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": [
                "kms:Decrypt",
                "kms:DescribeKey",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "CrossAccountCodeStarArtifactKey2ABD4E1A",
                  "Arn",
                ],
              },
            },
            {
              "Action": [
                "kms:Decrypt",
                "kms:Encrypt",
                "kms:ReEncrypt*",
                "kms:GenerateDataKey*",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "CrossAccountCodeStarArtifactKey2ABD4E1A",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CrossAccountCodeStarUpdatePipelineSelfMutationRoleDefaultPolicy4C7EFD1C",
        "Roles": [
          {
            "Ref": "CrossAccountCodeStarUpdatePipelineSelfMutationRole3C347A34",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F": {
      "DependsOn": [
        "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "faa95a81ae7d7373f3e1f242268f904eb748d8d0fdd306e8a6fe515a1905a7d6.zip",
        },
        "Description": {
          "Fn::Join": [
            "",
            [
              "Lambda function for auto-deleting objects in ",
              {
                "Ref": "CrossAccountCodeStarAccessLogsBucket8DE3FC63",
              },
              " S3 bucket.",
            ],
          ],
        },
        "Handler": "index.handler",
        "MemorySize": 128,
        "Role": {
          "Fn::GetAtt": [
            "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
            "Arn",
          ],
        },
        "Runtime": {
          "Fn::FindInMap": [
            "LatestNodeRuntimeMap",
            {
              "Ref": "AWS::Region",
            },
            "value",
          ],
        },
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Sub": "arn:\${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
  },
  "Rules": {
    "CheckBootstrapVersion": {
      "Assertions": [
        {
          "Assert": {
            "Fn::Not": [
              {
                "Fn::Contains": [
                  [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;

exports[`PDK Pipeline Unit Tests CrossAccount 1`] = `
{
  "Mappings": {
    "LatestNodeRuntimeMap": {
      "af-south-1": {
        "value": "nodejs20.x",
      },
      "ap-east-1": {
        "value": "nodejs20.x",
      },
      "ap-northeast-1": {
        "value": "nodejs20.x",
      },
      "ap-northeast-2": {
        "value": "nodejs20.x",
      },
      "ap-northeast-3": {
        "value": "nodejs20.x",
      },
      "ap-south-1": {
        "value": "nodejs20.x",
      },
      "ap-south-2": {
        "value": "nodejs20.x",
      },
      "ap-southeast-1": {
        "value": "nodejs20.x",
      },
      "ap-southeast-2": {
        "value": "nodejs20.x",
      },
      "ap-southeast-3": {
        "value": "nodejs20.x",
      },
      "ap-southeast-4": {
        "value": "nodejs20.x",
      },
      "ap-southeast-5": {
        "value": "nodejs20.x",
      },
      "ap-southeast-7": {
        "value": "nodejs20.x",
      },
      "ca-central-1": {
        "value": "nodejs20.x",
      },
      "ca-west-1": {
        "value": "nodejs20.x",
      },
      "cn-north-1": {
        "value": "nodejs18.x",
      },
      "cn-northwest-1": {
        "value": "nodejs18.x",
      },
      "eu-central-1": {
        "value": "nodejs20.x",
      },
      "eu-central-2": {
        "value": "nodejs20.x",
      },
      "eu-isoe-west-1": {
        "value": "nodejs18.x",
      },
      "eu-north-1": {
        "value": "nodejs20.x",
      },
      "eu-south-1": {
        "value": "nodejs20.x",
      },
      "eu-south-2": {
        "value": "nodejs20.x",
      },
      "eu-west-1": {
        "value": "nodejs20.x",
      },
      "eu-west-2": {
        "value": "nodejs20.x",
      },
      "eu-west-3": {
        "value": "nodejs20.x",
      },
      "il-central-1": {
        "value": "nodejs20.x",
      },
      "me-central-1": {
        "value": "nodejs20.x",
      },
      "me-south-1": {
        "value": "nodejs20.x",
      },
      "mx-central-1": {
        "value": "nodejs20.x",
      },
      "sa-east-1": {
        "value": "nodejs20.x",
      },
      "us-east-1": {
        "value": "nodejs20.x",
      },
      "us-east-2": {
        "value": "nodejs20.x",
      },
      "us-gov-east-1": {
        "value": "nodejs18.x",
      },
      "us-gov-west-1": {
        "value": "nodejs18.x",
      },
      "us-iso-east-1": {
        "value": "nodejs18.x",
      },
      "us-iso-west-1": {
        "value": "nodejs18.x",
      },
      "us-isob-east-1": {
        "value": "nodejs18.x",
      },
      "us-west-1": {
        "value": "nodejs20.x",
      },
      "us-west-2": {
        "value": "nodejs20.x",
      },
    },
  },
  "Outputs": {
    "CrossAccountCodeRepositoryGRCUrlA496E759": {
      "Value": {
        "Fn::Join": [
          "",
          [
            "codecommit::",
            {
              "Ref": "AWS::Region",
            },
            "://",
            {
              "Fn::GetAtt": [
                "CrossAccountCodeRepositoryCF9338D3",
                "Name",
              ],
            },
          ],
        ],
      },
    },
    "CrossAccountSonarCodeScannerSonarqubeSecretArn67524D2A": {
      "Value": {
        "Ref": "CrossAccountSonarCodeScannerSonarQubeToken76921F1B",
      },
    },
  },
  "Parameters": {
    "BootstrapVersion": {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": {
    "CrossAccountAccessLogsBucketAutoDeleteObjectsCustomResourceBF4BDBC9": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "CrossAccountAccessLogsBucketPolicy04189EE5",
      ],
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": {
        "BucketName": {
          "Ref": "CrossAccountAccessLogsBucketD7D72FC7",
        },
        "ServiceToken": {
          "Fn::GetAtt": [
            "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F",
            "Arn",
          ],
        },
      },
      "Type": "Custom::S3AutoDeleteObjects",
      "UpdateReplacePolicy": "Delete",
    },
    "CrossAccountAccessLogsBucketD7D72FC7": {
      "DeletionPolicy": "Delete",
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": {
        "BucketEncryption": {
          "ServerSideEncryptionConfiguration": [
            {
              "ServerSideEncryptionByDefault": {
                "SSEAlgorithm": "AES256",
              },
            },
          ],
        },
        "OwnershipControls": {
          "Rules": [
            {
              "ObjectOwnership": "ObjectWriter",
            },
          ],
        },
        "PublicAccessBlockConfiguration": {
          "BlockPublicAcls": true,
          "BlockPublicPolicy": true,
          "IgnorePublicAcls": true,
          "RestrictPublicBuckets": true,
        },
        "Tags": [
          {
            "Key": "aws-cdk:auto-delete-objects",
            "Value": "true",
          },
        ],
      },
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Delete",
    },
    "CrossAccountAccessLogsBucketPolicy04189EE5": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": {
        "Bucket": {
          "Ref": "CrossAccountAccessLogsBucketD7D72FC7",
        },
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "s3:*",
              "Condition": {
                "Bool": {
                  "aws:SecureTransport": "false",
                },
              },
              "Effect": "Deny",
              "Principal": {
                "AWS": "*",
              },
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "CrossAccountAccessLogsBucketD7D72FC7",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "CrossAccountAccessLogsBucketD7D72FC7",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": [
                "s3:PutBucketPolicy",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
              ],
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::GetAtt": [
                    "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
                    "Arn",
                  ],
                },
              },
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "CrossAccountAccessLogsBucketD7D72FC7",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "CrossAccountAccessLogsBucketD7D72FC7",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": "s3:PutObject",
              "Condition": {
                "ArnLike": {
                  "aws:SourceArn": {
                    "Fn::GetAtt": [
                      "CrossAccountArtifactsBucketA490794E",
                      "Arn",
                    ],
                  },
                },
                "StringEquals": {
                  "aws:SourceAccount": {
                    "Ref": "AWS::AccountId",
                  },
                },
              },
              "Effect": "Allow",
              "Principal": {
                "Service": "logging.s3.amazonaws.com",
              },
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    {
                      "Fn::GetAtt": [
                        "CrossAccountAccessLogsBucketD7D72FC7",
                        "Arn",
                      ],
                    },
                    "/access-logs*",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::S3::BucketPolicy",
    },
    "CrossAccountArtifactKey7D4916D3": {
      "DeletionPolicy": "Delete",
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": {
        "EnableKeyRotation": true,
        "KeyPolicy": {
          "Statement": [
            {
              "Action": "kms:*",
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":root",
                    ],
                  ],
                },
              },
              "Resource": "*",
            },
            {
              "Action": [
                "kms:Decrypt",
                "kms:DescribeKey",
              ],
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":role/cdk-hnb659fds-deploy-role-",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      "-",
                      {
                        "Ref": "AWS::Region",
                      },
                    ],
                  ],
                },
              },
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::KMS::Key",
      "UpdateReplacePolicy": "Delete",
    },
    "CrossAccountArtifactsBucketA490794E": {
      "DeletionPolicy": "Delete",
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": {
        "BucketEncryption": {
          "ServerSideEncryptionConfiguration": [
            {
              "ServerSideEncryptionByDefault": {
                "KMSMasterKeyID": {
                  "Fn::GetAtt": [
                    "CrossAccountArtifactKey7D4916D3",
                    "Arn",
                  ],
                },
                "SSEAlgorithm": "aws:kms",
              },
            },
          ],
        },
        "LoggingConfiguration": {
          "DestinationBucketName": {
            "Ref": "CrossAccountAccessLogsBucketD7D72FC7",
          },
          "LogFilePrefix": "access-logs",
        },
        "OwnershipControls": {
          "Rules": [
            {
              "ObjectOwnership": "BucketOwnerEnforced",
            },
          ],
        },
        "PublicAccessBlockConfiguration": {
          "BlockPublicAcls": true,
          "BlockPublicPolicy": true,
          "IgnorePublicAcls": true,
          "RestrictPublicBuckets": true,
        },
        "Tags": [
          {
            "Key": "aws-cdk:auto-delete-objects",
            "Value": "true",
          },
        ],
      },
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Delete",
    },
    "CrossAccountArtifactsBucketAutoDeleteObjectsCustomResourceDA0BD596": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "CrossAccountArtifactsBucketPolicyA1EA6713",
      ],
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": {
        "BucketName": {
          "Ref": "CrossAccountArtifactsBucketA490794E",
        },
        "ServiceToken": {
          "Fn::GetAtt": [
            "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F",
            "Arn",
          ],
        },
      },
      "Type": "Custom::S3AutoDeleteObjects",
      "UpdateReplacePolicy": "Delete",
    },
    "CrossAccountArtifactsBucketPolicyA1EA6713": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": {
        "Bucket": {
          "Ref": "CrossAccountArtifactsBucketA490794E",
        },
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "s3:*",
              "Condition": {
                "Bool": {
                  "aws:SecureTransport": "false",
                },
              },
              "Effect": "Deny",
              "Principal": {
                "AWS": "*",
              },
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "CrossAccountArtifactsBucketA490794E",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "CrossAccountArtifactsBucketA490794E",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": [
                "s3:PutBucketPolicy",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
              ],
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::GetAtt": [
                    "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
                    "Arn",
                  ],
                },
              },
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "CrossAccountArtifactsBucketA490794E",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "CrossAccountArtifactsBucketA490794E",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
              ],
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":role/cdk-hnb659fds-deploy-role-",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      "-",
                      {
                        "Ref": "AWS::Region",
                      },
                    ],
                  ],
                },
              },
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "CrossAccountArtifactsBucketA490794E",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "CrossAccountArtifactsBucketA490794E",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::S3::BucketPolicy",
    },
    "CrossAccountAssetsFileAsset1A747E04B": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": {
        "Artifacts": {
          "Type": "CODEPIPELINE",
        },
        "Cache": {
          "Type": "NO_CACHE",
        },
        "Description": "Pipeline step Default/CodePipeline/Assets/FileAsset1",
        "EncryptionKey": {
          "Fn::GetAtt": [
            "CrossAccountArtifactKey7D4916D3",
            "Arn",
          ],
        },
        "Environment": {
          "ComputeType": "BUILD_GENERAL1_SMALL",
          "Image": "aws/codebuild/standard:7.0",
          "ImagePullCredentialsType": "CODEBUILD",
          "PrivilegedMode": false,
          "Type": "LINUX_CONTAINER",
        },
        "ServiceRole": {
          "Fn::GetAtt": [
            "CrossAccountAssetsFileRoleA62CD5A0",
            "Arn",
          ],
        },
        "Source": {
          "BuildSpec": "{
  "version": "0.2",
  "phases": {
    "install": {
      "commands": [
        "npm install -g cdk-assets@latest"
      ]
    },
    "build": {
      "commands": [
        "cdk-assets --path \\"assembly-Stage/StageAppStack7618C9EF.assets.json\\" --verbose publish \\"14dd2d75ed909331e6d3efb3db54ed40dc6bd19804f86e266387ad8934897c85:current_account-current_region\\""
      ]
    }
  }
}",
          "Type": "CODEPIPELINE",
        },
      },
      "Type": "AWS::CodeBuild::Project",
    },
    "CrossAccountAssetsFileRoleA62CD5A0": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "codebuild.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "CrossAccountAssetsFileRoleDefaultPolicy75C80F22": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "logs:CreateLogGroup",
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":logs:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":log-group:/aws/codebuild/*",
                  ],
                ],
              },
            },
            {
              "Action": [
                "codebuild:CreateReportGroup",
                "codebuild:CreateReport",
                "codebuild:UpdateReport",
                "codebuild:BatchPutTestCases",
                "codebuild:BatchPutCodeCoverages",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":codebuild:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":report-group/*",
                  ],
                ],
              },
            },
            {
              "Action": [
                "codebuild:BatchGetBuilds",
                "codebuild:StartBuild",
                "codebuild:StopBuild",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Resource": {
                "Fn::Sub": "arn:\${AWS::Partition}:iam::\${AWS::AccountId}:role/cdk-hnb659fds-file-publishing-role-\${AWS::AccountId}-\${AWS::Region}",
              },
            },
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "CrossAccountArtifactsBucketA490794E",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "CrossAccountArtifactsBucketA490794E",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": [
                "kms:Decrypt",
                "kms:DescribeKey",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "CrossAccountArtifactKey7D4916D3",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CrossAccountAssetsFileRoleDefaultPolicy75C80F22",
        "Roles": [
          {
            "Ref": "CrossAccountAssetsFileRoleA62CD5A0",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CrossAccountCodeBuildActionRoleAD915E6A": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::GetAtt": [
                    "CrossAccountCodePipelineRole6867FC22",
                    "Arn",
                  ],
                },
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "CrossAccountCodeBuildActionRoleDefaultPolicy49AAE258": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "codebuild:BatchGetBuilds",
                "codebuild:StartBuild",
                "codebuild:StopBuild",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "CrossAccountCodePipelineBuildSynthCdkBuildProject938B55FC",
                  "Arn",
                ],
              },
            },
            {
              "Action": [
                "codebuild:BatchGetBuilds",
                "codebuild:StartBuild",
                "codebuild:StopBuild",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "CrossAccountUpdatePipelineSelfMutationEC1756F0",
                  "Arn",
                ],
              },
            },
            {
              "Action": [
                "codebuild:BatchGetBuilds",
                "codebuild:StartBuild",
                "codebuild:StopBuild",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "CrossAccountAssetsFileAsset1A747E04B",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CrossAccountCodeBuildActionRoleDefaultPolicy49AAE258",
        "Roles": [
          {
            "Ref": "CrossAccountCodeBuildActionRoleAD915E6A",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CrossAccountCodePipelineBuildSynthCdkBuildProject938B55FC": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": {
        "Artifacts": {
          "Type": "CODEPIPELINE",
        },
        "Cache": {
          "Type": "NO_CACHE",
        },
        "Description": "Pipeline step Default/CodePipeline/Build/Synth",
        "EncryptionKey": {
          "Fn::GetAtt": [
            "CrossAccountArtifactKey7D4916D3",
            "Arn",
          ],
        },
        "Environment": {
          "ComputeType": "BUILD_GENERAL1_SMALL",
          "Image": "aws/codebuild/standard:7.0",
          "ImagePullCredentialsType": "CODEBUILD",
          "PrivilegedMode": false,
          "Type": "LINUX_CONTAINER",
        },
        "ServiceRole": {
          "Fn::GetAtt": [
            "CrossAccountCodePipelineBuildSynthCdkBuildProjectRole06CF955F",
            "Arn",
          ],
        },
        "Source": {
          "BuildSpec": "{
  "version": "0.2",
  "phases": {
    "install": {
      "commands": [
        "npm install -g aws-cdk pnpm",
        "npx projen install"
      ]
    },
    "build": {
      "commands": [
        "npx projen build"
      ]
    }
  },
  "artifacts": {
    "secondary-artifacts": {
      "Synth_Output": {
        "base-directory": "cdk.out",
        "files": "**/*"
      },
      "Synth__": {
        "base-directory": ".",
        "files": "**/*"
      }
    }
  }
}",
          "Type": "CODEPIPELINE",
        },
      },
      "Type": "AWS::CodeBuild::Project",
    },
    "CrossAccountCodePipelineBuildSynthCdkBuildProjectRole06CF955F": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "codebuild.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "CrossAccountCodePipelineBuildSynthCdkBuildProjectRoleDefaultPolicy94879C97": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "logs:CreateLogGroup",
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":logs:",
                      {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":log-group:/aws/codebuild/",
                      {
                        "Ref": "CrossAccountCodePipelineBuildSynthCdkBuildProject938B55FC",
                      },
                    ],
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":logs:",
                      {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":log-group:/aws/codebuild/",
                      {
                        "Ref": "CrossAccountCodePipelineBuildSynthCdkBuildProject938B55FC",
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": [
                "codebuild:CreateReportGroup",
                "codebuild:CreateReport",
                "codebuild:UpdateReport",
                "codebuild:BatchPutTestCases",
                "codebuild:BatchPutCodeCoverages",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":codebuild:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":report-group/",
                    {
                      "Ref": "CrossAccountCodePipelineBuildSynthCdkBuildProject938B55FC",
                    },
                    "-*",
                  ],
                ],
              },
            },
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
                "s3:PutObject",
                "s3:PutObjectLegalHold",
                "s3:PutObjectRetention",
                "s3:PutObjectTagging",
                "s3:PutObjectVersionTagging",
                "s3:Abort*",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "CrossAccountArtifactsBucketA490794E",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "CrossAccountArtifactsBucketA490794E",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": [
                "kms:Decrypt",
                "kms:DescribeKey",
                "kms:Encrypt",
                "kms:ReEncrypt*",
                "kms:GenerateDataKey*",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "CrossAccountArtifactKey7D4916D3",
                  "Arn",
                ],
              },
            },
            {
              "Action": [
                "kms:Decrypt",
                "kms:Encrypt",
                "kms:ReEncrypt*",
                "kms:GenerateDataKey*",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "CrossAccountArtifactKey7D4916D3",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CrossAccountCodePipelineBuildSynthCdkBuildProjectRoleDefaultPolicy94879C97",
        "Roles": [
          {
            "Ref": "CrossAccountCodePipelineBuildSynthCdkBuildProjectRole06CF955F",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CrossAccountCodePipelineEventsRoleCF998AEF": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "events.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "CrossAccountCodePipelineEventsRoleDefaultPolicyCDDAD89A": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "codepipeline:StartPipelineExecution",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":codepipeline:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":",
                    {
                      "Ref": "CrossAccountCodePipelineFE6BA407",
                    },
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CrossAccountCodePipelineEventsRoleDefaultPolicyCDDAD89A",
        "Roles": [
          {
            "Ref": "CrossAccountCodePipelineEventsRoleCF998AEF",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CrossAccountCodePipelineFE6BA407": {
      "DependsOn": [
        "CrossAccountCodePipelineRoleDefaultPolicyB81D2E54",
        "CrossAccountCodePipelineRole6867FC22",
      ],
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": {
        "ArtifactStore": {
          "EncryptionKey": {
            "Id": {
              "Fn::GetAtt": [
                "CrossAccountArtifactKey7D4916D3",
                "Arn",
              ],
            },
            "Type": "KMS",
          },
          "Location": {
            "Ref": "CrossAccountArtifactsBucketA490794E",
          },
          "Type": "S3",
        },
        "PipelineType": "V1",
        "RestartExecutionOnUpdate": true,
        "RoleArn": {
          "Fn::GetAtt": [
            "CrossAccountCodePipelineRole6867FC22",
            "Arn",
          ],
        },
        "Stages": [
          {
            "Actions": [
              {
                "ActionTypeId": {
                  "Category": "Source",
                  "Owner": "AWS",
                  "Provider": "CodeCommit",
                  "Version": "1",
                },
                "Configuration": {
                  "BranchName": "mainline",
                  "PollForSourceChanges": false,
                  "RepositoryName": {
                    "Fn::GetAtt": [
                      "CrossAccountCodeRepositoryCF9338D3",
                      "Name",
                    ],
                  },
                },
                "Name": {
                  "Fn::GetAtt": [
                    "CrossAccountCodeRepositoryCF9338D3",
                    "Name",
                  ],
                },
                "OutputArtifacts": [
                  {
                    "Name": "c8323abab1481846407037ff91e03fe414541ba20b_Source",
                  },
                ],
                "RoleArn": {
                  "Fn::GetAtt": [
                    "CrossAccountCodePipelineSourceCodeCommitCodePipelineActionRole1A00297F",
                    "Arn",
                  ],
                },
                "RunOrder": 1,
              },
            ],
            "Name": "Source",
          },
          {
            "Actions": [
              {
                "ActionTypeId": {
                  "Category": "Build",
                  "Owner": "AWS",
                  "Provider": "CodeBuild",
                  "Version": "1",
                },
                "Configuration": {
                  "EnvironmentVariables": "[{"name":"_PROJECT_CONFIG_HASH","type":"PLAINTEXT","value":"1743fe23e45e6f2b0fdc043d5f0f1105f88a2596949f76d42fb43084b867d9ae"}]",
                  "ProjectName": {
                    "Ref": "CrossAccountCodePipelineBuildSynthCdkBuildProject938B55FC",
                  },
                },
                "InputArtifacts": [
                  {
                    "Name": "c8323abab1481846407037ff91e03fe414541ba20b_Source",
                  },
                ],
                "Name": "Synth",
                "OutputArtifacts": [
                  {
                    "Name": "Synth_Output",
                  },
                  {
                    "Name": "Synth__",
                  },
                ],
                "RoleArn": {
                  "Fn::GetAtt": [
                    "CrossAccountCodeBuildActionRoleAD915E6A",
                    "Arn",
                  ],
                },
                "RunOrder": 1,
              },
            ],
            "Name": "Build",
          },
          {
            "Actions": [
              {
                "ActionTypeId": {
                  "Category": "Build",
                  "Owner": "AWS",
                  "Provider": "CodeBuild",
                  "Version": "1",
                },
                "Configuration": {
                  "EnvironmentVariables": "[{"name":"_PROJECT_CONFIG_HASH","type":"PLAINTEXT","value":"f5c136b42f09ed582b9273672c6585264fb7142640d362897bd6649d732584c2"}]",
                  "ProjectName": {
                    "Ref": "CrossAccountUpdatePipelineSelfMutationEC1756F0",
                  },
                },
                "InputArtifacts": [
                  {
                    "Name": "Synth_Output",
                  },
                ],
                "Name": "SelfMutate",
                "RoleArn": {
                  "Fn::GetAtt": [
                    "CrossAccountCodeBuildActionRoleAD915E6A",
                    "Arn",
                  ],
                },
                "RunOrder": 1,
              },
            ],
            "Name": "UpdatePipeline",
          },
          {
            "Actions": [
              {
                "ActionTypeId": {
                  "Category": "Build",
                  "Owner": "AWS",
                  "Provider": "CodeBuild",
                  "Version": "1",
                },
                "Configuration": {
                  "ProjectName": {
                    "Ref": "CrossAccountAssetsFileAsset1A747E04B",
                  },
                },
                "InputArtifacts": [
                  {
                    "Name": "Synth_Output",
                  },
                ],
                "Name": "FileAsset1",
                "RoleArn": {
                  "Fn::GetAtt": [
                    "CrossAccountCodeBuildActionRoleAD915E6A",
                    "Arn",
                  ],
                },
                "RunOrder": 1,
              },
            ],
            "Name": "Assets",
          },
          {
            "Actions": [
              {
                "ActionTypeId": {
                  "Category": "Deploy",
                  "Owner": "AWS",
                  "Provider": "CloudFormation",
                  "Version": "1",
                },
                "Configuration": {
                  "ActionMode": "CHANGE_SET_REPLACE",
                  "Capabilities": "CAPABILITY_NAMED_IAM,CAPABILITY_AUTO_EXPAND",
                  "ChangeSetName": "PipelineChange",
                  "RoleArn": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition",
                        },
                        ":iam::",
                        {
                          "Ref": "AWS::AccountId",
                        },
                        ":role/cdk-hnb659fds-cfn-exec-role-",
                        {
                          "Ref": "AWS::AccountId",
                        },
                        "-",
                        {
                          "Ref": "AWS::Region",
                        },
                      ],
                    ],
                  },
                  "StackName": "Stage-AppStack",
                  "TemplatePath": "Synth_Output::assembly-Stage/StageAppStack7618C9EF.template.json",
                },
                "InputArtifacts": [
                  {
                    "Name": "Synth_Output",
                  },
                ],
                "Name": "Prepare",
                "RoleArn": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":role/cdk-hnb659fds-deploy-role-",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      "-",
                      {
                        "Ref": "AWS::Region",
                      },
                    ],
                  ],
                },
                "RunOrder": 1,
              },
              {
                "ActionTypeId": {
                  "Category": "Deploy",
                  "Owner": "AWS",
                  "Provider": "CloudFormation",
                  "Version": "1",
                },
                "Configuration": {
                  "ActionMode": "CHANGE_SET_EXECUTE",
                  "ChangeSetName": "PipelineChange",
                  "StackName": "Stage-AppStack",
                },
                "Name": "Deploy",
                "RoleArn": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":role/cdk-hnb659fds-deploy-role-",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      "-",
                      {
                        "Ref": "AWS::Region",
                      },
                    ],
                  ],
                },
                "RunOrder": 2,
              },
            ],
            "Name": "Stage",
          },
        ],
      },
      "Type": "AWS::CodePipeline::Pipeline",
    },
    "CrossAccountCodePipelineRole6867FC22": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "codepipeline.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "CrossAccountCodePipelineRoleDefaultPolicyB81D2E54": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
                "s3:PutObject",
                "s3:PutObjectLegalHold",
                "s3:PutObjectRetention",
                "s3:PutObjectTagging",
                "s3:PutObjectVersionTagging",
                "s3:Abort*",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "CrossAccountArtifactsBucketA490794E",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "CrossAccountArtifactsBucketA490794E",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": [
                "kms:Decrypt",
                "kms:DescribeKey",
                "kms:Encrypt",
                "kms:ReEncrypt*",
                "kms:GenerateDataKey*",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "CrossAccountArtifactKey7D4916D3",
                  "Arn",
                ],
              },
            },
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "CrossAccountCodePipelineSourceCodeCommitCodePipelineActionRole1A00297F",
                  "Arn",
                ],
              },
            },
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "CrossAccountCodeBuildActionRoleAD915E6A",
                  "Arn",
                ],
              },
            },
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":iam::",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":role/cdk-hnb659fds-deploy-role-",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    "-",
                    {
                      "Ref": "AWS::Region",
                    },
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CrossAccountCodePipelineRoleDefaultPolicyB81D2E54",
        "Roles": [
          {
            "Ref": "CrossAccountCodePipelineRole6867FC22",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CrossAccountCodePipelineSourceCodeCommitCodePipelineActionRole1A00297F": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":root",
                    ],
                  ],
                },
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "CrossAccountCodePipelineSourceCodeCommitCodePipelineActionRoleDefaultPolicy443B61A0": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
                "s3:PutObject",
                "s3:PutObjectLegalHold",
                "s3:PutObjectRetention",
                "s3:PutObjectTagging",
                "s3:PutObjectVersionTagging",
                "s3:Abort*",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "CrossAccountArtifactsBucketA490794E",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "CrossAccountArtifactsBucketA490794E",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": [
                "kms:Decrypt",
                "kms:DescribeKey",
                "kms:Encrypt",
                "kms:ReEncrypt*",
                "kms:GenerateDataKey*",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "CrossAccountArtifactKey7D4916D3",
                  "Arn",
                ],
              },
            },
            {
              "Action": [
                "codecommit:GetBranch",
                "codecommit:GetCommit",
                "codecommit:UploadArchive",
                "codecommit:GetUploadArchiveStatus",
                "codecommit:CancelUploadArchive",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "CrossAccountCodeRepositoryCF9338D3",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CrossAccountCodePipelineSourceCodeCommitCodePipelineActionRoleDefaultPolicy443B61A0",
        "Roles": [
          {
            "Ref": "CrossAccountCodePipelineSourceCodeCommitCodePipelineActionRole1A00297F",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CrossAccountCodeRepositoryCF9338D3": {
      "DeletionPolicy": "Retain",
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": {
        "RepositoryName": "Defaults",
      },
      "Type": "AWS::CodeCommit::Repository",
      "UpdateReplacePolicy": "Retain",
    },
    "CrossAccountCodeRepositoryCrossAccountCodePipelineE9B4FFC3mainlineEventRule3B7BD205": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": {
        "EventPattern": {
          "detail": {
            "event": [
              "referenceCreated",
              "referenceUpdated",
            ],
            "referenceName": [
              "mainline",
            ],
          },
          "detail-type": [
            "CodeCommit Repository State Change",
          ],
          "resources": [
            {
              "Fn::GetAtt": [
                "CrossAccountCodeRepositoryCF9338D3",
                "Arn",
              ],
            },
          ],
          "source": [
            "aws.codecommit",
          ],
        },
        "State": "ENABLED",
        "Targets": [
          {
            "Arn": {
              "Fn::Join": [
                "",
                [
                  "arn:",
                  {
                    "Ref": "AWS::Partition",
                  },
                  ":codepipeline:",
                  {
                    "Ref": "AWS::Region",
                  },
                  ":",
                  {
                    "Ref": "AWS::AccountId",
                  },
                  ":",
                  {
                    "Ref": "CrossAccountCodePipelineFE6BA407",
                  },
                ],
              ],
            },
            "Id": "Target0",
            "RoleArn": {
              "Fn::GetAtt": [
                "CrossAccountCodePipelineEventsRoleCF998AEF",
                "Arn",
              ],
            },
          },
        ],
      },
      "Type": "AWS::Events::Rule",
    },
    "CrossAccountSonarCodeScannerSonarQubeToken76921F1B": {
      "DeletionPolicy": "Delete",
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-SMG4",
              "reason": "Key rotation is not possible as a user token needs to be generated from Sonarqube",
            },
            {
              "id": "AwsPrototyping-SecretsManagerRotationEnabled",
              "reason": "Key rotation is not possible as a user token needs to be generated from Sonarqube",
            },
            {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": {
        "GenerateSecretString": {},
      },
      "Type": "AWS::SecretsManager::Secret",
      "UpdateReplacePolicy": "Delete",
    },
    "CrossAccountSonarCodeScannerSynthBuildProjectOnSynthSuccessD24D011A": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": {
        "EventPattern": {
          "detail": {
            "build-status": [
              "SUCCEEDED",
            ],
            "project-name": [
              {
                "Fn::Select": [
                  1,
                  {
                    "Fn::Split": [
                      "/",
                      {
                        "Fn::Select": [
                          5,
                          {
                            "Fn::Split": [
                              ":",
                              {
                                "Fn::GetAtt": [
                                  "CrossAccountCodePipelineBuildSynthCdkBuildProject938B55FC",
                                  "Arn",
                                ],
                              },
                            ],
                          },
                        ],
                      },
                    ],
                  },
                ],
              },
            ],
          },
          "detail-type": [
            "CodeBuild Build State Change",
          ],
          "source": [
            "aws.codebuild",
          ],
        },
        "State": "ENABLED",
        "Targets": [
          {
            "Arn": {
              "Fn::GetAtt": [
                "CrossAccountSonarCodeScannerValidationProjectAA1083C3",
                "Arn",
              ],
            },
            "Id": "Target0",
            "InputTransformer": {
              "InputPathsMap": {
                "detail-build-id": "$.detail.build-id",
              },
              "InputTemplate": "{"environmentVariablesOverride":[{"name":"SYNTH_BUILD_ID","type":"PLAINTEXT","value":<detail-build-id>}]}",
            },
            "RoleArn": {
              "Fn::GetAtt": [
                "CrossAccountSonarCodeScannerValidationProjectEventsRole551D56DA",
                "Arn",
              ],
            },
          },
        ],
      },
      "Type": "AWS::Events::Rule",
    },
    "CrossAccountSonarCodeScannerValidationProjectAA1083C3": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": {
        "Artifacts": {
          "Type": "NO_ARTIFACTS",
        },
        "Cache": {
          "Type": "NO_CACHE",
        },
        "EncryptionKey": "alias/aws/s3",
        "Environment": {
          "ComputeType": "BUILD_GENERAL1_SMALL",
          "EnvironmentVariables": [
            {
              "Name": "SONARQUBE_TOKEN",
              "Type": "SECRETS_MANAGER",
              "Value": {
                "Ref": "CrossAccountSonarCodeScannerSonarQubeToken76921F1B",
              },
            },
            {
              "Name": "SONARQUBE_ENDPOINT",
              "Type": "PLAINTEXT",
              "Value": "https://sonar.dev",
            },
            {
              "Name": "PROJECT_NAME",
              "Type": "PLAINTEXT",
              "Value": "Default",
            },
          ],
          "Image": "aws/codebuild/standard:5.0",
          "ImagePullCredentialsType": "CODEBUILD",
          "PrivilegedMode": false,
          "Type": "LINUX_CONTAINER",
        },
        "ServiceRole": {
          "Fn::GetAtt": [
            "CrossAccountSonarCodeScannerValidationProjectRole25023DA5",
            "Arn",
          ],
        },
        "Source": {
          "BuildSpec": "{
  "version": "0.2",
  "env": {
    "shell": "bash"
  },
  "phases": {
    "install": {
      "commands": [
        "npm install -g aws-cdk",
        "gem install cfn-nag"
      ]
    },
    "build": {
      "commands": [
        "export RESOLVED_SOURCE_VERSION=\`aws codebuild batch-get-builds --ids $SYNTH_BUILD_ID | jq -r '.builds[0].resolvedSourceVersion'\`",
        "export BUILT_ARTIFACT_URI=\`aws codebuild batch-get-builds --ids $SYNTH_BUILD_ID | jq -r '.builds[0].secondaryArtifacts[] | select(.artifactIdentifier == \\"Synth__\\") | .location' | awk '{sub(\\"arn:aws:s3:::\\",\\"s3://\\")}1' $1\`",
        "export SYNTH_SOURCE_URI=\`aws codebuild batch-get-builds --ids $SYNTH_BUILD_ID | jq -r '.builds[0].sourceVersion' | awk '{sub(\\"arn:aws:s3:::\\",\\"s3://\\")}1' $1\`",
        "aws s3 cp $SYNTH_SOURCE_URI source.zip",
        "aws s3 cp $BUILT_ARTIFACT_URI built.zip",
        "unzip source.zip -d src",
        "unzip built.zip -d built",
        "rm source.zip built.zip",
        "rsync -a built/* src --include=\\"*/\\"  --include=\\"**/coverage/**\\" --include=\\"**/cdk.out/**\\" --exclude=\\"**/node_modules/**/*\\" --exclude=\\"**/.env/**\\" --exclude=\\"*\\" --prune-empty-dirs",
        "CREATE_PROJECT_OUTPUT=\`curl -X POST -u $SONARQUBE_TOKEN: \\"$SONARQUBE_ENDPOINT/api/projects/create?name=$PROJECT_NAME&project=$PROJECT_NAME&visibility=private\\" \`",
        "if [[ \\"$(echo $CREATE_PROJECT_OUTPUT | jq .errors)\\" == \\"null\\" ]]; then curl -X POST -u $SONARQUBE_TOKEN: \\"$SONARQUBE_ENDPOINT/api/permissions/add_group?projectKey=$PROJECT_NAME&groupName=dev&permission=admin\\" ;curl -X POST -u $SONARQUBE_TOKEN: \\"$SONARQUBE_ENDPOINT/api/permissions/add_group?projectKey=$PROJECT_NAME&groupName=dev&permission=codeviewer\\" ;curl -X POST -u $SONARQUBE_TOKEN: \\"$SONARQUBE_ENDPOINT/api/permissions/add_group?projectKey=$PROJECT_NAME&groupName=dev&permission=issueadmin\\" ;curl -X POST -u $SONARQUBE_TOKEN: \\"$SONARQUBE_ENDPOINT/api/permissions/add_group?projectKey=$PROJECT_NAME&groupName=dev&permission=securityhotspotadmin\\" ;curl -X POST -u $SONARQUBE_TOKEN: \\"$SONARQUBE_ENDPOINT/api/permissions/add_group?projectKey=$PROJECT_NAME&groupName=dev&permission=scan\\" ;curl -X POST -u $SONARQUBE_TOKEN: \\"$SONARQUBE_ENDPOINT/api/permissions/add_group?projectKey=$PROJECT_NAME&groupName=dev&permission=user\\" ;curl -X POST -u $SONARQUBE_TOKEN: \\"$SONARQUBE_ENDPOINT/api/project_branches/rename?project=$PROJECT_NAME&name=mainline\\" ;curl -X POST -u $SONARQUBE_TOKEN: \\"$SONARQUBE_ENDPOINT/api/project_tags/set?project=$PROJECT_NAME&tags=dev\\" ;export DEFAULT_PROFILE=\`curl -X GET -u $SONARQUBE_TOKEN: \\"$SONARQUBE_ENDPOINT/api/qualityprofiles/search?qualityProfile=dev\\"  | jq .profiles\`;export SPECIFIC_PROFILE=\`curl -X GET -u $SONARQUBE_TOKEN: \\"$SONARQUBE_ENDPOINT/api/qualityprofiles/search?qualityProfile=undefined\\"  | jq .profiles\`;export MERGED_PROFILES=\`jq --argjson arr1 \\"$DEFAULT_PROFILE\\" --argjson arr2 \\"$SPECIFIC_PROFILE\\" -n '$arr1 + $arr2 | group_by(.language) | map(.[-1])'\`;echo $MERGED_PROFILES | jq -c '.[]' | while read i; do curl -X POST -u $SONARQUBE_TOKEN: \\"$SONARQUBE_ENDPOINT/api/qualityprofiles/add_project?project=$PROJECT_NAME&language=\`echo $i | jq -r .language\`&qualityProfile=\`echo $i | jq -r .name\`\\" ; done;export DEFAULT_GATE=\`curl -X GET -u $SONARQUBE_TOKEN: \\"$SONARQUBE_ENDPOINT/api/qualitygates/search?gateName=dev\\" \`;export SPECIFIC_GATE=\`curl -X GET -u $SONARQUBE_TOKEN: \\"$SONARQUBE_ENDPOINT/api/qualitygates/search?gateName=undefined\\" \`;if [[ \\"$(echo $SPECIFIC_GATE | jq .errors)\\" == \\"null\\" && \\"$(echo $SPECIFIC_GATE | jq '.results | length')\\" -gt 0 ]]; then export GATE_NAME=undefined; else export GATE_NAME=dev; fi;curl -X POST -u $SONARQUBE_TOKEN: \\"$SONARQUBE_ENDPOINT/api/qualitygates/select?projectKey=$PROJECT_NAME&gateName=$GATE_NAME\\" ; fi;",
        "mkdir -p src/reports",
        "npx owasp-dependency-check --format HTML --out src/reports --exclude '**/.git/**/*' --scan src --enableExperimental --bin /tmp/dep-check --disableRetireJS",
        "cfn_nag  built/cdk.out/**/*.template.json --output-format=json > src/reports/cfn-nag-report.json",
        "cd src",
        "npx sonarqube-scanner -Dsonar.login=$SONARQUBE_TOKEN -Dsonar.projectKey=$PROJECT_NAME -Dsonar.projectName=$PROJECT_NAME -Dsonar.projectVersion=\`echo $RESOLVED_SOURCE_VERSION | cut -c1-7\` -Dsonar.branch.name=mainline -Dsonar.host.url=$SONARQUBE_ENDPOINT -Dsonar.cfn.nag.reportFiles=reports/cfn-nag-report.json -Dsonar.dependencyCheck.htmlReportPath=reports/dependency-check-report.html -Dsonar.javascript.lcov.reportPaths=**/coverage/lcov.info -Dsonar.clover.reportPath=**/coverage/clover.xml -Dsonar.exclusions=\\"**/reports/**,**/coverage/**\\" -Dsonar.sources=.",
        "curl -X GET -u $SONARQUBE_TOKEN: \\"$SONARQUBE_ENDPOINT/api/bitegarden/report/pdf_issues_breakdown?resource=$PROJECT_NAME&branch=mainline\\" --output reports/prototype-issues-report.pdf",
        "curl -X GET -u $SONARQUBE_TOKEN: \\"$SONARQUBE_ENDPOINT/api/bitegarden/report/pdf?resource=$PROJECT_NAME&branch=mainline\\" --output reports/prototype-executive-report.pdf",
        "curl -X GET -u $SONARQUBE_TOKEN: \\"$SONARQUBE_ENDPOINT/api/security_reports/download?project=$PROJECT_NAME\\" --output reports/prototype-security-report.pdf"
      ]
    }
  }
}",
          "Type": "NO_SOURCE",
        },
      },
      "Type": "AWS::CodeBuild::Project",
    },
    "CrossAccountSonarCodeScannerValidationProjectEventsRole551D56DA": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "events.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "CrossAccountSonarCodeScannerValidationProjectEventsRoleDefaultPolicy1B23C513": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "codebuild:StartBuild",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "CrossAccountSonarCodeScannerValidationProjectAA1083C3",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CrossAccountSonarCodeScannerValidationProjectEventsRoleDefaultPolicy1B23C513",
        "Roles": [
          {
            "Ref": "CrossAccountSonarCodeScannerValidationProjectEventsRole551D56DA",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CrossAccountSonarCodeScannerValidationProjectRole25023DA5": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "applies_to": [
                {
                  "regex": "/^Resource::arn:<AWS::Partition>:logs:<AWS::Region>:<AWS::AccountId>:log-group:/aws/codebuild/<.*SonarCodeScannerValidationProject.*>:\\*$/g",
                },
                {
                  "regex": "/^Resource::arn:<AWS::Partition>:codebuild:<AWS::Region>:<AWS::AccountId>:report-group/<.*SonarCodeScannerValidationProject.*>-\\*$/g",
                },
                {
                  "regex": "/^Action::s3:GetObject\\*$/g",
                },
                {
                  "regex": "/^Resource::<ArtifactsBucket.*.Arn>/\\*\\*$/g",
                },
              ],
              "id": "AwsSolutions-IAM5",
              "reason": "Validation CodeBuild project requires access to the ArtifactsBucket and ability to create logs.",
            },
            {
              "applies_to": [
                {
                  "regex": "/^Resource::arn:<AWS::Partition>:logs:<AWS::Region>:<AWS::AccountId>:log-group:/aws/codebuild/<.*SonarCodeScannerValidationProject.*>:\\*$/g",
                },
                {
                  "regex": "/^Resource::arn:<AWS::Partition>:codebuild:<AWS::Region>:<AWS::AccountId>:report-group/<.*SonarCodeScannerValidationProject.*>-\\*$/g",
                },
                {
                  "regex": "/^Action::s3:GetObject\\*$/g",
                },
                {
                  "regex": "/^Resource::<ArtifactsBucket.*.Arn>/\\*\\*$/g",
                },
              ],
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Validation CodeBuild project requires access to the ArtifactsBucket and ability to create logs.",
            },
            {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "codebuild.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "CrossAccountSonarCodeScannerValidationProjectRoleDefaultPolicy225AB8B2": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "applies_to": [
                {
                  "regex": "/^Resource::arn:<AWS::Partition>:logs:<AWS::Region>:<AWS::AccountId>:log-group:/aws/codebuild/<.*SonarCodeScannerValidationProject.*>:\\*$/g",
                },
                {
                  "regex": "/^Resource::arn:<AWS::Partition>:codebuild:<AWS::Region>:<AWS::AccountId>:report-group/<.*SonarCodeScannerValidationProject.*>-\\*$/g",
                },
                {
                  "regex": "/^Action::s3:GetObject\\*$/g",
                },
                {
                  "regex": "/^Resource::<ArtifactsBucket.*.Arn>/\\*\\*$/g",
                },
              ],
              "id": "AwsSolutions-IAM5",
              "reason": "Validation CodeBuild project requires access to the ArtifactsBucket and ability to create logs.",
            },
            {
              "applies_to": [
                {
                  "regex": "/^Resource::arn:<AWS::Partition>:logs:<AWS::Region>:<AWS::AccountId>:log-group:/aws/codebuild/<.*SonarCodeScannerValidationProject.*>:\\*$/g",
                },
                {
                  "regex": "/^Resource::arn:<AWS::Partition>:codebuild:<AWS::Region>:<AWS::AccountId>:report-group/<.*SonarCodeScannerValidationProject.*>-\\*$/g",
                },
                {
                  "regex": "/^Action::s3:GetObject\\*$/g",
                },
                {
                  "regex": "/^Resource::<ArtifactsBucket.*.Arn>/\\*\\*$/g",
                },
              ],
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Validation CodeBuild project requires access to the ArtifactsBucket and ability to create logs.",
            },
            {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "secretsmanager:GetSecretValue",
              "Effect": "Allow",
              "Resource": {
                "Ref": "CrossAccountSonarCodeScannerSonarQubeToken76921F1B",
              },
            },
            {
              "Action": [
                "logs:CreateLogGroup",
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":logs:",
                      {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":log-group:/aws/codebuild/",
                      {
                        "Ref": "CrossAccountSonarCodeScannerValidationProjectAA1083C3",
                      },
                    ],
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":logs:",
                      {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":log-group:/aws/codebuild/",
                      {
                        "Ref": "CrossAccountSonarCodeScannerValidationProjectAA1083C3",
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": [
                "codebuild:CreateReportGroup",
                "codebuild:CreateReport",
                "codebuild:UpdateReport",
                "codebuild:BatchPutTestCases",
                "codebuild:BatchPutCodeCoverages",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":codebuild:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":report-group/",
                    {
                      "Ref": "CrossAccountSonarCodeScannerValidationProjectAA1083C3",
                    },
                    "-*",
                  ],
                ],
              },
            },
            {
              "Action": "codebuild:BatchGetBuilds",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "CrossAccountCodePipelineBuildSynthCdkBuildProject938B55FC",
                  "Arn",
                ],
              },
            },
            {
              "Action": "s3:GetObject*",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "CrossAccountArtifactsBucketA490794E",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "CrossAccountArtifactsBucketA490794E",
                          "Arn",
                        ],
                      },
                      "/**",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": [
                "kms:Decrypt",
                "kms:DescribeKey",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "CrossAccountArtifactKey7D4916D3",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CrossAccountSonarCodeScannerValidationProjectRoleDefaultPolicy225AB8B2",
        "Roles": [
          {
            "Ref": "CrossAccountSonarCodeScannerValidationProjectRole25023DA5",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CrossAccountUpdatePipelineSelfMutationEC1756F0": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": {
        "Artifacts": {
          "Type": "CODEPIPELINE",
        },
        "Cache": {
          "Type": "NO_CACHE",
        },
        "Description": "Pipeline step Default/CodePipeline/UpdatePipeline/SelfMutate",
        "EncryptionKey": {
          "Fn::GetAtt": [
            "CrossAccountArtifactKey7D4916D3",
            "Arn",
          ],
        },
        "Environment": {
          "ComputeType": "BUILD_GENERAL1_SMALL",
          "Image": "aws/codebuild/standard:7.0",
          "ImagePullCredentialsType": "CODEBUILD",
          "PrivilegedMode": false,
          "Type": "LINUX_CONTAINER",
        },
        "ServiceRole": {
          "Fn::GetAtt": [
            "CrossAccountUpdatePipelineSelfMutationRole0F9342FC",
            "Arn",
          ],
        },
        "Source": {
          "BuildSpec": "{
  "version": "0.2",
  "phases": {
    "install": {
      "commands": [
        "npm install -g aws-cdk@2"
      ]
    },
    "build": {
      "commands": [
        "cdk -a . deploy Default --require-approval=never --verbose"
      ]
    }
  }
}",
          "Type": "CODEPIPELINE",
        },
      },
      "Type": "AWS::CodeBuild::Project",
    },
    "CrossAccountUpdatePipelineSelfMutationRole0F9342FC": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "codebuild.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "CrossAccountUpdatePipelineSelfMutationRoleDefaultPolicyA7DA8F1E": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "logs:CreateLogGroup",
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":logs:",
                      {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":log-group:/aws/codebuild/",
                      {
                        "Ref": "CrossAccountUpdatePipelineSelfMutationEC1756F0",
                      },
                    ],
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":logs:",
                      {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":log-group:/aws/codebuild/",
                      {
                        "Ref": "CrossAccountUpdatePipelineSelfMutationEC1756F0",
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": [
                "codebuild:CreateReportGroup",
                "codebuild:CreateReport",
                "codebuild:UpdateReport",
                "codebuild:BatchPutTestCases",
                "codebuild:BatchPutCodeCoverages",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":codebuild:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":report-group/",
                    {
                      "Ref": "CrossAccountUpdatePipelineSelfMutationEC1756F0",
                    },
                    "-*",
                  ],
                ],
              },
            },
            {
              "Action": "sts:AssumeRole",
              "Condition": {
                "ForAnyValue:StringEquals": {
                  "iam:ResourceTag/aws-cdk:bootstrap-role": [
                    "image-publishing",
                    "file-publishing",
                    "deploy",
                  ],
                },
              },
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:*:iam::",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":role/*",
                  ],
                ],
              },
            },
            {
              "Action": "cloudformation:DescribeStacks",
              "Effect": "Allow",
              "Resource": "*",
            },
            {
              "Action": "s3:ListBucket",
              "Effect": "Allow",
              "Resource": "*",
            },
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "CrossAccountArtifactsBucketA490794E",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "CrossAccountArtifactsBucketA490794E",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": [
                "kms:Decrypt",
                "kms:DescribeKey",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "CrossAccountArtifactKey7D4916D3",
                  "Arn",
                ],
              },
            },
            {
              "Action": [
                "kms:Decrypt",
                "kms:Encrypt",
                "kms:ReEncrypt*",
                "kms:GenerateDataKey*",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "CrossAccountArtifactKey7D4916D3",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CrossAccountUpdatePipelineSelfMutationRoleDefaultPolicyA7DA8F1E",
        "Roles": [
          {
            "Ref": "CrossAccountUpdatePipelineSelfMutationRole0F9342FC",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F": {
      "DependsOn": [
        "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "faa95a81ae7d7373f3e1f242268f904eb748d8d0fdd306e8a6fe515a1905a7d6.zip",
        },
        "Description": {
          "Fn::Join": [
            "",
            [
              "Lambda function for auto-deleting objects in ",
              {
                "Ref": "CrossAccountAccessLogsBucketD7D72FC7",
              },
              " S3 bucket.",
            ],
          ],
        },
        "Handler": "index.handler",
        "MemorySize": 128,
        "Role": {
          "Fn::GetAtt": [
            "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
            "Arn",
          ],
        },
        "Runtime": {
          "Fn::FindInMap": [
            "LatestNodeRuntimeMap",
            {
              "Ref": "AWS::Region",
            },
            "value",
          ],
        },
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Sub": "arn:\${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
  },
  "Rules": {
    "CheckBootstrapVersion": {
      "Assertions": [
        {
          "Assert": {
            "Fn::Not": [
              {
                "Fn::Contains": [
                  [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;

exports[`PDK Pipeline Unit Tests Defaults - using AwsPrototyping NagPack 1`] = `
{
  "Mappings": {
    "LatestNodeRuntimeMap": {
      "af-south-1": {
        "value": "nodejs20.x",
      },
      "ap-east-1": {
        "value": "nodejs20.x",
      },
      "ap-northeast-1": {
        "value": "nodejs20.x",
      },
      "ap-northeast-2": {
        "value": "nodejs20.x",
      },
      "ap-northeast-3": {
        "value": "nodejs20.x",
      },
      "ap-south-1": {
        "value": "nodejs20.x",
      },
      "ap-south-2": {
        "value": "nodejs20.x",
      },
      "ap-southeast-1": {
        "value": "nodejs20.x",
      },
      "ap-southeast-2": {
        "value": "nodejs20.x",
      },
      "ap-southeast-3": {
        "value": "nodejs20.x",
      },
      "ap-southeast-4": {
        "value": "nodejs20.x",
      },
      "ap-southeast-5": {
        "value": "nodejs20.x",
      },
      "ap-southeast-7": {
        "value": "nodejs20.x",
      },
      "ca-central-1": {
        "value": "nodejs20.x",
      },
      "ca-west-1": {
        "value": "nodejs20.x",
      },
      "cn-north-1": {
        "value": "nodejs18.x",
      },
      "cn-northwest-1": {
        "value": "nodejs18.x",
      },
      "eu-central-1": {
        "value": "nodejs20.x",
      },
      "eu-central-2": {
        "value": "nodejs20.x",
      },
      "eu-isoe-west-1": {
        "value": "nodejs18.x",
      },
      "eu-north-1": {
        "value": "nodejs20.x",
      },
      "eu-south-1": {
        "value": "nodejs20.x",
      },
      "eu-south-2": {
        "value": "nodejs20.x",
      },
      "eu-west-1": {
        "value": "nodejs20.x",
      },
      "eu-west-2": {
        "value": "nodejs20.x",
      },
      "eu-west-3": {
        "value": "nodejs20.x",
      },
      "il-central-1": {
        "value": "nodejs20.x",
      },
      "me-central-1": {
        "value": "nodejs20.x",
      },
      "me-south-1": {
        "value": "nodejs20.x",
      },
      "mx-central-1": {
        "value": "nodejs20.x",
      },
      "sa-east-1": {
        "value": "nodejs20.x",
      },
      "us-east-1": {
        "value": "nodejs20.x",
      },
      "us-east-2": {
        "value": "nodejs20.x",
      },
      "us-gov-east-1": {
        "value": "nodejs18.x",
      },
      "us-gov-west-1": {
        "value": "nodejs18.x",
      },
      "us-iso-east-1": {
        "value": "nodejs18.x",
      },
      "us-iso-west-1": {
        "value": "nodejs18.x",
      },
      "us-isob-east-1": {
        "value": "nodejs18.x",
      },
      "us-west-1": {
        "value": "nodejs20.x",
      },
      "us-west-2": {
        "value": "nodejs20.x",
      },
    },
  },
  "Outputs": {
    "DefaultsCodeRepositoryGRCUrlF9B2453F": {
      "Value": {
        "Fn::Join": [
          "",
          [
            "codecommit::",
            {
              "Ref": "AWS::Region",
            },
            "://",
            {
              "Fn::GetAtt": [
                "DefaultsCodeRepositoryBDE0B808",
                "Name",
              ],
            },
          ],
        ],
      },
    },
    "DefaultsSonarCodeScannerSonarqubeSecretArn61BE693F": {
      "Value": {
        "Ref": "DefaultsSonarCodeScannerSonarQubeTokenD1898305",
      },
    },
  },
  "Parameters": {
    "BootstrapVersion": {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": {
    "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F": {
      "DependsOn": [
        "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "faa95a81ae7d7373f3e1f242268f904eb748d8d0fdd306e8a6fe515a1905a7d6.zip",
        },
        "Description": {
          "Fn::Join": [
            "",
            [
              "Lambda function for auto-deleting objects in ",
              {
                "Ref": "DefaultsAccessLogsBucket1E788CBC",
              },
              " S3 bucket.",
            ],
          ],
        },
        "Handler": "index.handler",
        "MemorySize": 128,
        "Role": {
          "Fn::GetAtt": [
            "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
            "Arn",
          ],
        },
        "Runtime": {
          "Fn::FindInMap": [
            "LatestNodeRuntimeMap",
            {
              "Ref": "AWS::Region",
            },
            "value",
          ],
        },
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Sub": "arn:\${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "DefaultsAccessLogsBucket1E788CBC": {
      "DeletionPolicy": "Delete",
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": {
        "BucketEncryption": {
          "ServerSideEncryptionConfiguration": [
            {
              "ServerSideEncryptionByDefault": {
                "SSEAlgorithm": "AES256",
              },
            },
          ],
        },
        "OwnershipControls": {
          "Rules": [
            {
              "ObjectOwnership": "ObjectWriter",
            },
          ],
        },
        "PublicAccessBlockConfiguration": {
          "BlockPublicAcls": true,
          "BlockPublicPolicy": true,
          "IgnorePublicAcls": true,
          "RestrictPublicBuckets": true,
        },
        "Tags": [
          {
            "Key": "aws-cdk:auto-delete-objects",
            "Value": "true",
          },
        ],
      },
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Delete",
    },
    "DefaultsAccessLogsBucketAutoDeleteObjectsCustomResourceB315E04B": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "DefaultsAccessLogsBucketPolicy87291CAB",
      ],
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": {
        "BucketName": {
          "Ref": "DefaultsAccessLogsBucket1E788CBC",
        },
        "ServiceToken": {
          "Fn::GetAtt": [
            "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F",
            "Arn",
          ],
        },
      },
      "Type": "Custom::S3AutoDeleteObjects",
      "UpdateReplacePolicy": "Delete",
    },
    "DefaultsAccessLogsBucketPolicy87291CAB": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": {
        "Bucket": {
          "Ref": "DefaultsAccessLogsBucket1E788CBC",
        },
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "s3:*",
              "Condition": {
                "Bool": {
                  "aws:SecureTransport": "false",
                },
              },
              "Effect": "Deny",
              "Principal": {
                "AWS": "*",
              },
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "DefaultsAccessLogsBucket1E788CBC",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "DefaultsAccessLogsBucket1E788CBC",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": [
                "s3:PutBucketPolicy",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
              ],
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::GetAtt": [
                    "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
                    "Arn",
                  ],
                },
              },
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "DefaultsAccessLogsBucket1E788CBC",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "DefaultsAccessLogsBucket1E788CBC",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": "s3:PutObject",
              "Condition": {
                "ArnLike": {
                  "aws:SourceArn": {
                    "Fn::GetAtt": [
                      "DefaultsArtifactsBucket267E29E1",
                      "Arn",
                    ],
                  },
                },
                "StringEquals": {
                  "aws:SourceAccount": {
                    "Ref": "AWS::AccountId",
                  },
                },
              },
              "Effect": "Allow",
              "Principal": {
                "Service": "logging.s3.amazonaws.com",
              },
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    {
                      "Fn::GetAtt": [
                        "DefaultsAccessLogsBucket1E788CBC",
                        "Arn",
                      ],
                    },
                    "/access-logs*",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::S3::BucketPolicy",
    },
    "DefaultsArtifactsBucket267E29E1": {
      "DeletionPolicy": "Delete",
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": {
        "BucketEncryption": {
          "ServerSideEncryptionConfiguration": [
            {
              "ServerSideEncryptionByDefault": {
                "SSEAlgorithm": "AES256",
              },
            },
          ],
        },
        "LoggingConfiguration": {
          "DestinationBucketName": {
            "Ref": "DefaultsAccessLogsBucket1E788CBC",
          },
          "LogFilePrefix": "access-logs",
        },
        "OwnershipControls": {
          "Rules": [
            {
              "ObjectOwnership": "BucketOwnerEnforced",
            },
          ],
        },
        "PublicAccessBlockConfiguration": {
          "BlockPublicAcls": true,
          "BlockPublicPolicy": true,
          "IgnorePublicAcls": true,
          "RestrictPublicBuckets": true,
        },
        "Tags": [
          {
            "Key": "aws-cdk:auto-delete-objects",
            "Value": "true",
          },
        ],
      },
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Delete",
    },
    "DefaultsArtifactsBucketAutoDeleteObjectsCustomResourceED1B0B57": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "DefaultsArtifactsBucketPolicyA6159620",
      ],
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": {
        "BucketName": {
          "Ref": "DefaultsArtifactsBucket267E29E1",
        },
        "ServiceToken": {
          "Fn::GetAtt": [
            "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F",
            "Arn",
          ],
        },
      },
      "Type": "Custom::S3AutoDeleteObjects",
      "UpdateReplacePolicy": "Delete",
    },
    "DefaultsArtifactsBucketPolicyA6159620": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": {
        "Bucket": {
          "Ref": "DefaultsArtifactsBucket267E29E1",
        },
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "s3:*",
              "Condition": {
                "Bool": {
                  "aws:SecureTransport": "false",
                },
              },
              "Effect": "Deny",
              "Principal": {
                "AWS": "*",
              },
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "DefaultsArtifactsBucket267E29E1",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "DefaultsArtifactsBucket267E29E1",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": [
                "s3:PutBucketPolicy",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
              ],
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::GetAtt": [
                    "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
                    "Arn",
                  ],
                },
              },
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "DefaultsArtifactsBucket267E29E1",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "DefaultsArtifactsBucket267E29E1",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
              ],
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":role/cdk-hnb659fds-deploy-role-",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      "-",
                      {
                        "Ref": "AWS::Region",
                      },
                    ],
                  ],
                },
              },
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "DefaultsArtifactsBucket267E29E1",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "DefaultsArtifactsBucket267E29E1",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::S3::BucketPolicy",
    },
    "DefaultsAssetsFileAsset1C016008C": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": {
        "Artifacts": {
          "Type": "CODEPIPELINE",
        },
        "Cache": {
          "Type": "NO_CACHE",
        },
        "Description": "Pipeline step Default/CodePipeline/Assets/FileAsset1",
        "EncryptionKey": "alias/aws/s3",
        "Environment": {
          "ComputeType": "BUILD_GENERAL1_SMALL",
          "Image": "aws/codebuild/standard:7.0",
          "ImagePullCredentialsType": "CODEBUILD",
          "PrivilegedMode": false,
          "Type": "LINUX_CONTAINER",
        },
        "ServiceRole": {
          "Fn::GetAtt": [
            "DefaultsAssetsFileRole651D25B9",
            "Arn",
          ],
        },
        "Source": {
          "BuildSpec": "{
  "version": "0.2",
  "phases": {
    "install": {
      "commands": [
        "npm install -g cdk-assets@latest"
      ]
    },
    "build": {
      "commands": [
        "cdk-assets --path \\"assembly-Stage/StageAppStack7618C9EF.assets.json\\" --verbose publish \\"14dd2d75ed909331e6d3efb3db54ed40dc6bd19804f86e266387ad8934897c85:current_account-current_region\\""
      ]
    }
  }
}",
          "Type": "CODEPIPELINE",
        },
      },
      "Type": "AWS::CodeBuild::Project",
    },
    "DefaultsAssetsFileRole651D25B9": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "codebuild.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "DefaultsAssetsFileRoleDefaultPolicy3887BD04": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "logs:CreateLogGroup",
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":logs:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":log-group:/aws/codebuild/*",
                  ],
                ],
              },
            },
            {
              "Action": [
                "codebuild:CreateReportGroup",
                "codebuild:CreateReport",
                "codebuild:UpdateReport",
                "codebuild:BatchPutTestCases",
                "codebuild:BatchPutCodeCoverages",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":codebuild:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":report-group/*",
                  ],
                ],
              },
            },
            {
              "Action": [
                "codebuild:BatchGetBuilds",
                "codebuild:StartBuild",
                "codebuild:StopBuild",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Resource": {
                "Fn::Sub": "arn:\${AWS::Partition}:iam::\${AWS::AccountId}:role/cdk-hnb659fds-file-publishing-role-\${AWS::AccountId}-\${AWS::Region}",
              },
            },
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "DefaultsArtifactsBucket267E29E1",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "DefaultsArtifactsBucket267E29E1",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "DefaultsAssetsFileRoleDefaultPolicy3887BD04",
        "Roles": [
          {
            "Ref": "DefaultsAssetsFileRole651D25B9",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "DefaultsCodeBuildActionRole26049CBA": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::GetAtt": [
                    "DefaultsCodePipelineRoleF466C0E3",
                    "Arn",
                  ],
                },
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "DefaultsCodeBuildActionRoleDefaultPolicy0F3A543D": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "codebuild:BatchGetBuilds",
                "codebuild:StartBuild",
                "codebuild:StopBuild",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "DefaultsCodePipelineBuildSynthCdkBuildProject81772484",
                  "Arn",
                ],
              },
            },
            {
              "Action": [
                "codebuild:BatchGetBuilds",
                "codebuild:StartBuild",
                "codebuild:StopBuild",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "DefaultsUpdatePipelineSelfMutationD1F1D812",
                  "Arn",
                ],
              },
            },
            {
              "Action": [
                "codebuild:BatchGetBuilds",
                "codebuild:StartBuild",
                "codebuild:StopBuild",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "DefaultsAssetsFileAsset1C016008C",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "DefaultsCodeBuildActionRoleDefaultPolicy0F3A543D",
        "Roles": [
          {
            "Ref": "DefaultsCodeBuildActionRole26049CBA",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "DefaultsCodePipelineBuildSynthCdkBuildProject81772484": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": {
        "Artifacts": {
          "Type": "CODEPIPELINE",
        },
        "Cache": {
          "Type": "NO_CACHE",
        },
        "Description": "Pipeline step Default/CodePipeline/Build/Synth",
        "EncryptionKey": "alias/aws/s3",
        "Environment": {
          "ComputeType": "BUILD_GENERAL1_SMALL",
          "Image": "aws/codebuild/standard:7.0",
          "ImagePullCredentialsType": "CODEBUILD",
          "PrivilegedMode": false,
          "Type": "LINUX_CONTAINER",
        },
        "ServiceRole": {
          "Fn::GetAtt": [
            "DefaultsCodePipelineBuildSynthCdkBuildProjectRoleA72DCE39",
            "Arn",
          ],
        },
        "Source": {
          "BuildSpec": "{
  "version": "0.2",
  "phases": {
    "install": {
      "commands": [
        "npm install -g aws-cdk pnpm",
        "npx projen install"
      ]
    },
    "build": {
      "commands": [
        "npx projen build"
      ]
    }
  },
  "artifacts": {
    "secondary-artifacts": {
      "Synth_Output": {
        "base-directory": "cdk.out",
        "files": "**/*"
      },
      "Synth__": {
        "base-directory": ".",
        "files": "**/*"
      }
    }
  }
}",
          "Type": "CODEPIPELINE",
        },
      },
      "Type": "AWS::CodeBuild::Project",
    },
    "DefaultsCodePipelineBuildSynthCdkBuildProjectRoleA72DCE39": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "codebuild.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "DefaultsCodePipelineBuildSynthCdkBuildProjectRoleDefaultPolicyC0AFF59F": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "logs:CreateLogGroup",
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":logs:",
                      {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":log-group:/aws/codebuild/",
                      {
                        "Ref": "DefaultsCodePipelineBuildSynthCdkBuildProject81772484",
                      },
                    ],
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":logs:",
                      {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":log-group:/aws/codebuild/",
                      {
                        "Ref": "DefaultsCodePipelineBuildSynthCdkBuildProject81772484",
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": [
                "codebuild:CreateReportGroup",
                "codebuild:CreateReport",
                "codebuild:UpdateReport",
                "codebuild:BatchPutTestCases",
                "codebuild:BatchPutCodeCoverages",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":codebuild:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":report-group/",
                    {
                      "Ref": "DefaultsCodePipelineBuildSynthCdkBuildProject81772484",
                    },
                    "-*",
                  ],
                ],
              },
            },
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
                "s3:PutObject",
                "s3:PutObjectLegalHold",
                "s3:PutObjectRetention",
                "s3:PutObjectTagging",
                "s3:PutObjectVersionTagging",
                "s3:Abort*",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "DefaultsArtifactsBucket267E29E1",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "DefaultsArtifactsBucket267E29E1",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "DefaultsCodePipelineBuildSynthCdkBuildProjectRoleDefaultPolicyC0AFF59F",
        "Roles": [
          {
            "Ref": "DefaultsCodePipelineBuildSynthCdkBuildProjectRoleA72DCE39",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "DefaultsCodePipelineDAB2FB72": {
      "DependsOn": [
        "DefaultsCodePipelineRoleDefaultPolicyF4A44365",
        "DefaultsCodePipelineRoleF466C0E3",
      ],
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": {
        "ArtifactStore": {
          "Location": {
            "Ref": "DefaultsArtifactsBucket267E29E1",
          },
          "Type": "S3",
        },
        "PipelineType": "V1",
        "RestartExecutionOnUpdate": true,
        "RoleArn": {
          "Fn::GetAtt": [
            "DefaultsCodePipelineRoleF466C0E3",
            "Arn",
          ],
        },
        "Stages": [
          {
            "Actions": [
              {
                "ActionTypeId": {
                  "Category": "Source",
                  "Owner": "AWS",
                  "Provider": "CodeCommit",
                  "Version": "1",
                },
                "Configuration": {
                  "BranchName": "mainline",
                  "PollForSourceChanges": false,
                  "RepositoryName": {
                    "Fn::GetAtt": [
                      "DefaultsCodeRepositoryBDE0B808",
                      "Name",
                    ],
                  },
                },
                "Name": {
                  "Fn::GetAtt": [
                    "DefaultsCodeRepositoryBDE0B808",
                    "Name",
                  ],
                },
                "OutputArtifacts": [
                  {
                    "Name": "c8be7966da6130450b89fe7dd9dced39142a8f041d_Source",
                  },
                ],
                "RoleArn": {
                  "Fn::GetAtt": [
                    "DefaultsCodePipelineSourceCodeCommitCodePipelineActionRole1F53CA96",
                    "Arn",
                  ],
                },
                "RunOrder": 1,
              },
            ],
            "Name": "Source",
          },
          {
            "Actions": [
              {
                "ActionTypeId": {
                  "Category": "Build",
                  "Owner": "AWS",
                  "Provider": "CodeBuild",
                  "Version": "1",
                },
                "Configuration": {
                  "EnvironmentVariables": "[{"name":"_PROJECT_CONFIG_HASH","type":"PLAINTEXT","value":"1743fe23e45e6f2b0fdc043d5f0f1105f88a2596949f76d42fb43084b867d9ae"}]",
                  "ProjectName": {
                    "Ref": "DefaultsCodePipelineBuildSynthCdkBuildProject81772484",
                  },
                },
                "InputArtifacts": [
                  {
                    "Name": "c8be7966da6130450b89fe7dd9dced39142a8f041d_Source",
                  },
                ],
                "Name": "Synth",
                "OutputArtifacts": [
                  {
                    "Name": "Synth_Output",
                  },
                  {
                    "Name": "Synth__",
                  },
                ],
                "RoleArn": {
                  "Fn::GetAtt": [
                    "DefaultsCodeBuildActionRole26049CBA",
                    "Arn",
                  ],
                },
                "RunOrder": 1,
              },
            ],
            "Name": "Build",
          },
          {
            "Actions": [
              {
                "ActionTypeId": {
                  "Category": "Build",
                  "Owner": "AWS",
                  "Provider": "CodeBuild",
                  "Version": "1",
                },
                "Configuration": {
                  "EnvironmentVariables": "[{"name":"_PROJECT_CONFIG_HASH","type":"PLAINTEXT","value":"f5c136b42f09ed582b9273672c6585264fb7142640d362897bd6649d732584c2"}]",
                  "ProjectName": {
                    "Ref": "DefaultsUpdatePipelineSelfMutationD1F1D812",
                  },
                },
                "InputArtifacts": [
                  {
                    "Name": "Synth_Output",
                  },
                ],
                "Name": "SelfMutate",
                "RoleArn": {
                  "Fn::GetAtt": [
                    "DefaultsCodeBuildActionRole26049CBA",
                    "Arn",
                  ],
                },
                "RunOrder": 1,
              },
            ],
            "Name": "UpdatePipeline",
          },
          {
            "Actions": [
              {
                "ActionTypeId": {
                  "Category": "Build",
                  "Owner": "AWS",
                  "Provider": "CodeBuild",
                  "Version": "1",
                },
                "Configuration": {
                  "ProjectName": {
                    "Ref": "DefaultsAssetsFileAsset1C016008C",
                  },
                },
                "InputArtifacts": [
                  {
                    "Name": "Synth_Output",
                  },
                ],
                "Name": "FileAsset1",
                "RoleArn": {
                  "Fn::GetAtt": [
                    "DefaultsCodeBuildActionRole26049CBA",
                    "Arn",
                  ],
                },
                "RunOrder": 1,
              },
            ],
            "Name": "Assets",
          },
          {
            "Actions": [
              {
                "ActionTypeId": {
                  "Category": "Deploy",
                  "Owner": "AWS",
                  "Provider": "CloudFormation",
                  "Version": "1",
                },
                "Configuration": {
                  "ActionMode": "CHANGE_SET_REPLACE",
                  "Capabilities": "CAPABILITY_NAMED_IAM,CAPABILITY_AUTO_EXPAND",
                  "ChangeSetName": "PipelineChange",
                  "RoleArn": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition",
                        },
                        ":iam::",
                        {
                          "Ref": "AWS::AccountId",
                        },
                        ":role/cdk-hnb659fds-cfn-exec-role-",
                        {
                          "Ref": "AWS::AccountId",
                        },
                        "-",
                        {
                          "Ref": "AWS::Region",
                        },
                      ],
                    ],
                  },
                  "StackName": "Stage-AppStack",
                  "TemplatePath": "Synth_Output::assembly-Stage/StageAppStack7618C9EF.template.json",
                },
                "InputArtifacts": [
                  {
                    "Name": "Synth_Output",
                  },
                ],
                "Name": "Prepare",
                "RoleArn": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":role/cdk-hnb659fds-deploy-role-",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      "-",
                      {
                        "Ref": "AWS::Region",
                      },
                    ],
                  ],
                },
                "RunOrder": 1,
              },
              {
                "ActionTypeId": {
                  "Category": "Deploy",
                  "Owner": "AWS",
                  "Provider": "CloudFormation",
                  "Version": "1",
                },
                "Configuration": {
                  "ActionMode": "CHANGE_SET_EXECUTE",
                  "ChangeSetName": "PipelineChange",
                  "StackName": "Stage-AppStack",
                },
                "Name": "Deploy",
                "RoleArn": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":role/cdk-hnb659fds-deploy-role-",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      "-",
                      {
                        "Ref": "AWS::Region",
                      },
                    ],
                  ],
                },
                "RunOrder": 2,
              },
            ],
            "Name": "Stage",
          },
        ],
      },
      "Type": "AWS::CodePipeline::Pipeline",
    },
    "DefaultsCodePipelineEventsRole44B0ACD2": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "events.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "DefaultsCodePipelineEventsRoleDefaultPolicyB0676072": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "codepipeline:StartPipelineExecution",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":codepipeline:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":",
                    {
                      "Ref": "DefaultsCodePipelineDAB2FB72",
                    },
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "DefaultsCodePipelineEventsRoleDefaultPolicyB0676072",
        "Roles": [
          {
            "Ref": "DefaultsCodePipelineEventsRole44B0ACD2",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "DefaultsCodePipelineRoleDefaultPolicyF4A44365": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
                "s3:PutObject",
                "s3:PutObjectLegalHold",
                "s3:PutObjectRetention",
                "s3:PutObjectTagging",
                "s3:PutObjectVersionTagging",
                "s3:Abort*",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "DefaultsArtifactsBucket267E29E1",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "DefaultsArtifactsBucket267E29E1",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "DefaultsCodePipelineSourceCodeCommitCodePipelineActionRole1F53CA96",
                  "Arn",
                ],
              },
            },
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "DefaultsCodeBuildActionRole26049CBA",
                  "Arn",
                ],
              },
            },
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":iam::",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":role/cdk-hnb659fds-deploy-role-",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    "-",
                    {
                      "Ref": "AWS::Region",
                    },
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "DefaultsCodePipelineRoleDefaultPolicyF4A44365",
        "Roles": [
          {
            "Ref": "DefaultsCodePipelineRoleF466C0E3",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "DefaultsCodePipelineRoleF466C0E3": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "codepipeline.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "DefaultsCodePipelineSourceCodeCommitCodePipelineActionRole1F53CA96": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":root",
                    ],
                  ],
                },
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "DefaultsCodePipelineSourceCodeCommitCodePipelineActionRoleDefaultPolicyF3026D6A": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
                "s3:PutObject",
                "s3:PutObjectLegalHold",
                "s3:PutObjectRetention",
                "s3:PutObjectTagging",
                "s3:PutObjectVersionTagging",
                "s3:Abort*",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "DefaultsArtifactsBucket267E29E1",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "DefaultsArtifactsBucket267E29E1",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": [
                "codecommit:GetBranch",
                "codecommit:GetCommit",
                "codecommit:UploadArchive",
                "codecommit:GetUploadArchiveStatus",
                "codecommit:CancelUploadArchive",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "DefaultsCodeRepositoryBDE0B808",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "DefaultsCodePipelineSourceCodeCommitCodePipelineActionRoleDefaultPolicyF3026D6A",
        "Roles": [
          {
            "Ref": "DefaultsCodePipelineSourceCodeCommitCodePipelineActionRole1F53CA96",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "DefaultsCodeRepositoryBDE0B808": {
      "DeletionPolicy": "Retain",
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": {
        "RepositoryName": "Defaults",
      },
      "Type": "AWS::CodeCommit::Repository",
      "UpdateReplacePolicy": "Retain",
    },
    "DefaultsCodeRepositoryDefaultsCodePipeline4E276C62mainlineEventRule67A64C52": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": {
        "EventPattern": {
          "detail": {
            "event": [
              "referenceCreated",
              "referenceUpdated",
            ],
            "referenceName": [
              "mainline",
            ],
          },
          "detail-type": [
            "CodeCommit Repository State Change",
          ],
          "resources": [
            {
              "Fn::GetAtt": [
                "DefaultsCodeRepositoryBDE0B808",
                "Arn",
              ],
            },
          ],
          "source": [
            "aws.codecommit",
          ],
        },
        "State": "ENABLED",
        "Targets": [
          {
            "Arn": {
              "Fn::Join": [
                "",
                [
                  "arn:",
                  {
                    "Ref": "AWS::Partition",
                  },
                  ":codepipeline:",
                  {
                    "Ref": "AWS::Region",
                  },
                  ":",
                  {
                    "Ref": "AWS::AccountId",
                  },
                  ":",
                  {
                    "Ref": "DefaultsCodePipelineDAB2FB72",
                  },
                ],
              ],
            },
            "Id": "Target0",
            "RoleArn": {
              "Fn::GetAtt": [
                "DefaultsCodePipelineEventsRole44B0ACD2",
                "Arn",
              ],
            },
          },
        ],
      },
      "Type": "AWS::Events::Rule",
    },
    "DefaultsSonarCodeScannerSonarQubeTokenD1898305": {
      "DeletionPolicy": "Delete",
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-SMG4",
              "reason": "Key rotation is not possible as a user token needs to be generated from Sonarqube",
            },
            {
              "id": "AwsPrototyping-SecretsManagerRotationEnabled",
              "reason": "Key rotation is not possible as a user token needs to be generated from Sonarqube",
            },
            {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": {
        "GenerateSecretString": {},
      },
      "Type": "AWS::SecretsManager::Secret",
      "UpdateReplacePolicy": "Delete",
    },
    "DefaultsSonarCodeScannerSynthBuildProjectOnSynthSuccessE7E65027": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": {
        "EventPattern": {
          "detail": {
            "build-status": [
              "SUCCEEDED",
            ],
            "project-name": [
              {
                "Fn::Select": [
                  1,
                  {
                    "Fn::Split": [
                      "/",
                      {
                        "Fn::Select": [
                          5,
                          {
                            "Fn::Split": [
                              ":",
                              {
                                "Fn::GetAtt": [
                                  "DefaultsCodePipelineBuildSynthCdkBuildProject81772484",
                                  "Arn",
                                ],
                              },
                            ],
                          },
                        ],
                      },
                    ],
                  },
                ],
              },
            ],
          },
          "detail-type": [
            "CodeBuild Build State Change",
          ],
          "source": [
            "aws.codebuild",
          ],
        },
        "State": "ENABLED",
        "Targets": [
          {
            "Arn": {
              "Fn::GetAtt": [
                "DefaultsSonarCodeScannerValidationProjectFAE7BAD0",
                "Arn",
              ],
            },
            "Id": "Target0",
            "InputTransformer": {
              "InputPathsMap": {
                "detail-build-id": "$.detail.build-id",
              },
              "InputTemplate": "{"environmentVariablesOverride":[{"name":"SYNTH_BUILD_ID","type":"PLAINTEXT","value":<detail-build-id>}]}",
            },
            "RoleArn": {
              "Fn::GetAtt": [
                "DefaultsSonarCodeScannerValidationProjectEventsRole18DD9D4A",
                "Arn",
              ],
            },
          },
        ],
      },
      "Type": "AWS::Events::Rule",
    },
    "DefaultsSonarCodeScannerValidationProjectEventsRole18DD9D4A": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "events.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "DefaultsSonarCodeScannerValidationProjectEventsRoleDefaultPolicy6C4FE447": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "codebuild:StartBuild",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "DefaultsSonarCodeScannerValidationProjectFAE7BAD0",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "DefaultsSonarCodeScannerValidationProjectEventsRoleDefaultPolicy6C4FE447",
        "Roles": [
          {
            "Ref": "DefaultsSonarCodeScannerValidationProjectEventsRole18DD9D4A",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "DefaultsSonarCodeScannerValidationProjectFAE7BAD0": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": {
        "Artifacts": {
          "Type": "NO_ARTIFACTS",
        },
        "Cache": {
          "Type": "NO_CACHE",
        },
        "EncryptionKey": "alias/aws/s3",
        "Environment": {
          "ComputeType": "BUILD_GENERAL1_SMALL",
          "EnvironmentVariables": [
            {
              "Name": "SONARQUBE_TOKEN",
              "Type": "SECRETS_MANAGER",
              "Value": {
                "Ref": "DefaultsSonarCodeScannerSonarQubeTokenD1898305",
              },
            },
            {
              "Name": "SONARQUBE_ENDPOINT",
              "Type": "PLAINTEXT",
              "Value": "https://sonar.dev",
            },
            {
              "Name": "PROJECT_NAME",
              "Type": "PLAINTEXT",
              "Value": "Default",
            },
          ],
          "Image": "aws/codebuild/standard:5.0",
          "ImagePullCredentialsType": "CODEBUILD",
          "PrivilegedMode": false,
          "Type": "LINUX_CONTAINER",
        },
        "ServiceRole": {
          "Fn::GetAtt": [
            "DefaultsSonarCodeScannerValidationProjectRole6AF1A9E5",
            "Arn",
          ],
        },
        "Source": {
          "BuildSpec": "{
  "version": "0.2",
  "env": {
    "shell": "bash"
  },
  "phases": {
    "install": {
      "commands": [
        "npm install -g aws-cdk",
        "gem install cfn-nag"
      ]
    },
    "build": {
      "commands": [
        "export RESOLVED_SOURCE_VERSION=\`aws codebuild batch-get-builds --ids $SYNTH_BUILD_ID | jq -r '.builds[0].resolvedSourceVersion'\`",
        "export BUILT_ARTIFACT_URI=\`aws codebuild batch-get-builds --ids $SYNTH_BUILD_ID | jq -r '.builds[0].secondaryArtifacts[] | select(.artifactIdentifier == \\"Synth__\\") | .location' | awk '{sub(\\"arn:aws:s3:::\\",\\"s3://\\")}1' $1\`",
        "export SYNTH_SOURCE_URI=\`aws codebuild batch-get-builds --ids $SYNTH_BUILD_ID | jq -r '.builds[0].sourceVersion' | awk '{sub(\\"arn:aws:s3:::\\",\\"s3://\\")}1' $1\`",
        "aws s3 cp $SYNTH_SOURCE_URI source.zip",
        "aws s3 cp $BUILT_ARTIFACT_URI built.zip",
        "unzip source.zip -d src",
        "unzip built.zip -d built",
        "rm source.zip built.zip",
        "rsync -a built/* src --include=\\"*/\\"  --include=\\"**/coverage/**\\" --include=\\"**/cdk.out/**\\" --exclude=\\"**/node_modules/**/*\\" --exclude=\\"**/.env/**\\" --exclude=\\"*\\" --prune-empty-dirs",
        "CREATE_PROJECT_OUTPUT=\`curl -X POST -u $SONARQUBE_TOKEN: \\"$SONARQUBE_ENDPOINT/api/projects/create?name=$PROJECT_NAME&project=$PROJECT_NAME&visibility=private\\" \`",
        "if [[ \\"$(echo $CREATE_PROJECT_OUTPUT | jq .errors)\\" == \\"null\\" ]]; then curl -X POST -u $SONARQUBE_TOKEN: \\"$SONARQUBE_ENDPOINT/api/permissions/add_group?projectKey=$PROJECT_NAME&groupName=dev&permission=admin\\" ;curl -X POST -u $SONARQUBE_TOKEN: \\"$SONARQUBE_ENDPOINT/api/permissions/add_group?projectKey=$PROJECT_NAME&groupName=dev&permission=codeviewer\\" ;curl -X POST -u $SONARQUBE_TOKEN: \\"$SONARQUBE_ENDPOINT/api/permissions/add_group?projectKey=$PROJECT_NAME&groupName=dev&permission=issueadmin\\" ;curl -X POST -u $SONARQUBE_TOKEN: \\"$SONARQUBE_ENDPOINT/api/permissions/add_group?projectKey=$PROJECT_NAME&groupName=dev&permission=securityhotspotadmin\\" ;curl -X POST -u $SONARQUBE_TOKEN: \\"$SONARQUBE_ENDPOINT/api/permissions/add_group?projectKey=$PROJECT_NAME&groupName=dev&permission=scan\\" ;curl -X POST -u $SONARQUBE_TOKEN: \\"$SONARQUBE_ENDPOINT/api/permissions/add_group?projectKey=$PROJECT_NAME&groupName=dev&permission=user\\" ;curl -X POST -u $SONARQUBE_TOKEN: \\"$SONARQUBE_ENDPOINT/api/project_branches/rename?project=$PROJECT_NAME&name=mainline\\" ;curl -X POST -u $SONARQUBE_TOKEN: \\"$SONARQUBE_ENDPOINT/api/project_tags/set?project=$PROJECT_NAME&tags=dev\\" ;export DEFAULT_PROFILE=\`curl -X GET -u $SONARQUBE_TOKEN: \\"$SONARQUBE_ENDPOINT/api/qualityprofiles/search?qualityProfile=dev\\"  | jq .profiles\`;export SPECIFIC_PROFILE=\`curl -X GET -u $SONARQUBE_TOKEN: \\"$SONARQUBE_ENDPOINT/api/qualityprofiles/search?qualityProfile=undefined\\"  | jq .profiles\`;export MERGED_PROFILES=\`jq --argjson arr1 \\"$DEFAULT_PROFILE\\" --argjson arr2 \\"$SPECIFIC_PROFILE\\" -n '$arr1 + $arr2 | group_by(.language) | map(.[-1])'\`;echo $MERGED_PROFILES | jq -c '.[]' | while read i; do curl -X POST -u $SONARQUBE_TOKEN: \\"$SONARQUBE_ENDPOINT/api/qualityprofiles/add_project?project=$PROJECT_NAME&language=\`echo $i | jq -r .language\`&qualityProfile=\`echo $i | jq -r .name\`\\" ; done;export DEFAULT_GATE=\`curl -X GET -u $SONARQUBE_TOKEN: \\"$SONARQUBE_ENDPOINT/api/qualitygates/search?gateName=dev\\" \`;export SPECIFIC_GATE=\`curl -X GET -u $SONARQUBE_TOKEN: \\"$SONARQUBE_ENDPOINT/api/qualitygates/search?gateName=undefined\\" \`;if [[ \\"$(echo $SPECIFIC_GATE | jq .errors)\\" == \\"null\\" && \\"$(echo $SPECIFIC_GATE | jq '.results | length')\\" -gt 0 ]]; then export GATE_NAME=undefined; else export GATE_NAME=dev; fi;curl -X POST -u $SONARQUBE_TOKEN: \\"$SONARQUBE_ENDPOINT/api/qualitygates/select?projectKey=$PROJECT_NAME&gateName=$GATE_NAME\\" ; fi;",
        "mkdir -p src/reports",
        "npx owasp-dependency-check --format HTML --out src/reports --exclude '**/.git/**/*' --scan src --enableExperimental --bin /tmp/dep-check --disableRetireJS",
        "cfn_nag  built/cdk.out/**/*.template.json --output-format=json > src/reports/cfn-nag-report.json",
        "cd src",
        "npx sonarqube-scanner -Dsonar.login=$SONARQUBE_TOKEN -Dsonar.projectKey=$PROJECT_NAME -Dsonar.projectName=$PROJECT_NAME -Dsonar.projectVersion=\`echo $RESOLVED_SOURCE_VERSION | cut -c1-7\` -Dsonar.branch.name=mainline -Dsonar.host.url=$SONARQUBE_ENDPOINT -Dsonar.cfn.nag.reportFiles=reports/cfn-nag-report.json -Dsonar.dependencyCheck.htmlReportPath=reports/dependency-check-report.html -Dsonar.javascript.lcov.reportPaths=**/coverage/lcov.info -Dsonar.clover.reportPath=**/coverage/clover.xml -Dsonar.exclusions=\\"**/reports/**,**/coverage/**\\" -Dsonar.sources=.",
        "curl -X GET -u $SONARQUBE_TOKEN: \\"$SONARQUBE_ENDPOINT/api/bitegarden/report/pdf_issues_breakdown?resource=$PROJECT_NAME&branch=mainline\\" --output reports/prototype-issues-report.pdf",
        "curl -X GET -u $SONARQUBE_TOKEN: \\"$SONARQUBE_ENDPOINT/api/bitegarden/report/pdf?resource=$PROJECT_NAME&branch=mainline\\" --output reports/prototype-executive-report.pdf",
        "curl -X GET -u $SONARQUBE_TOKEN: \\"$SONARQUBE_ENDPOINT/api/security_reports/download?project=$PROJECT_NAME\\" --output reports/prototype-security-report.pdf"
      ]
    }
  }
}",
          "Type": "NO_SOURCE",
        },
      },
      "Type": "AWS::CodeBuild::Project",
    },
    "DefaultsSonarCodeScannerValidationProjectRole6AF1A9E5": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "applies_to": [
                {
                  "regex": "/^Resource::arn:<AWS::Partition>:logs:<AWS::Region>:<AWS::AccountId>:log-group:/aws/codebuild/<.*SonarCodeScannerValidationProject.*>:\\*$/g",
                },
                {
                  "regex": "/^Resource::arn:<AWS::Partition>:codebuild:<AWS::Region>:<AWS::AccountId>:report-group/<.*SonarCodeScannerValidationProject.*>-\\*$/g",
                },
                {
                  "regex": "/^Action::s3:GetObject\\*$/g",
                },
                {
                  "regex": "/^Resource::<ArtifactsBucket.*.Arn>/\\*\\*$/g",
                },
              ],
              "id": "AwsSolutions-IAM5",
              "reason": "Validation CodeBuild project requires access to the ArtifactsBucket and ability to create logs.",
            },
            {
              "applies_to": [
                {
                  "regex": "/^Resource::arn:<AWS::Partition>:logs:<AWS::Region>:<AWS::AccountId>:log-group:/aws/codebuild/<.*SonarCodeScannerValidationProject.*>:\\*$/g",
                },
                {
                  "regex": "/^Resource::arn:<AWS::Partition>:codebuild:<AWS::Region>:<AWS::AccountId>:report-group/<.*SonarCodeScannerValidationProject.*>-\\*$/g",
                },
                {
                  "regex": "/^Action::s3:GetObject\\*$/g",
                },
                {
                  "regex": "/^Resource::<ArtifactsBucket.*.Arn>/\\*\\*$/g",
                },
              ],
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Validation CodeBuild project requires access to the ArtifactsBucket and ability to create logs.",
            },
            {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "codebuild.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "DefaultsSonarCodeScannerValidationProjectRoleDefaultPolicyF147A45E": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "applies_to": [
                {
                  "regex": "/^Resource::arn:<AWS::Partition>:logs:<AWS::Region>:<AWS::AccountId>:log-group:/aws/codebuild/<.*SonarCodeScannerValidationProject.*>:\\*$/g",
                },
                {
                  "regex": "/^Resource::arn:<AWS::Partition>:codebuild:<AWS::Region>:<AWS::AccountId>:report-group/<.*SonarCodeScannerValidationProject.*>-\\*$/g",
                },
                {
                  "regex": "/^Action::s3:GetObject\\*$/g",
                },
                {
                  "regex": "/^Resource::<ArtifactsBucket.*.Arn>/\\*\\*$/g",
                },
              ],
              "id": "AwsSolutions-IAM5",
              "reason": "Validation CodeBuild project requires access to the ArtifactsBucket and ability to create logs.",
            },
            {
              "applies_to": [
                {
                  "regex": "/^Resource::arn:<AWS::Partition>:logs:<AWS::Region>:<AWS::AccountId>:log-group:/aws/codebuild/<.*SonarCodeScannerValidationProject.*>:\\*$/g",
                },
                {
                  "regex": "/^Resource::arn:<AWS::Partition>:codebuild:<AWS::Region>:<AWS::AccountId>:report-group/<.*SonarCodeScannerValidationProject.*>-\\*$/g",
                },
                {
                  "regex": "/^Action::s3:GetObject\\*$/g",
                },
                {
                  "regex": "/^Resource::<ArtifactsBucket.*.Arn>/\\*\\*$/g",
                },
              ],
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Validation CodeBuild project requires access to the ArtifactsBucket and ability to create logs.",
            },
            {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "secretsmanager:GetSecretValue",
              "Effect": "Allow",
              "Resource": {
                "Ref": "DefaultsSonarCodeScannerSonarQubeTokenD1898305",
              },
            },
            {
              "Action": [
                "logs:CreateLogGroup",
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":logs:",
                      {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":log-group:/aws/codebuild/",
                      {
                        "Ref": "DefaultsSonarCodeScannerValidationProjectFAE7BAD0",
                      },
                    ],
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":logs:",
                      {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":log-group:/aws/codebuild/",
                      {
                        "Ref": "DefaultsSonarCodeScannerValidationProjectFAE7BAD0",
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": [
                "codebuild:CreateReportGroup",
                "codebuild:CreateReport",
                "codebuild:UpdateReport",
                "codebuild:BatchPutTestCases",
                "codebuild:BatchPutCodeCoverages",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":codebuild:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":report-group/",
                    {
                      "Ref": "DefaultsSonarCodeScannerValidationProjectFAE7BAD0",
                    },
                    "-*",
                  ],
                ],
              },
            },
            {
              "Action": "codebuild:BatchGetBuilds",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "DefaultsCodePipelineBuildSynthCdkBuildProject81772484",
                  "Arn",
                ],
              },
            },
            {
              "Action": "s3:GetObject*",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "DefaultsArtifactsBucket267E29E1",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "DefaultsArtifactsBucket267E29E1",
                          "Arn",
                        ],
                      },
                      "/**",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "DefaultsSonarCodeScannerValidationProjectRoleDefaultPolicyF147A45E",
        "Roles": [
          {
            "Ref": "DefaultsSonarCodeScannerValidationProjectRole6AF1A9E5",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "DefaultsUpdatePipelineSelfMutationD1F1D812": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": {
        "Artifacts": {
          "Type": "CODEPIPELINE",
        },
        "Cache": {
          "Type": "NO_CACHE",
        },
        "Description": "Pipeline step Default/CodePipeline/UpdatePipeline/SelfMutate",
        "EncryptionKey": "alias/aws/s3",
        "Environment": {
          "ComputeType": "BUILD_GENERAL1_SMALL",
          "Image": "aws/codebuild/standard:7.0",
          "ImagePullCredentialsType": "CODEBUILD",
          "PrivilegedMode": false,
          "Type": "LINUX_CONTAINER",
        },
        "ServiceRole": {
          "Fn::GetAtt": [
            "DefaultsUpdatePipelineSelfMutationRole0C19159A",
            "Arn",
          ],
        },
        "Source": {
          "BuildSpec": "{
  "version": "0.2",
  "phases": {
    "install": {
      "commands": [
        "npm install -g aws-cdk@2"
      ]
    },
    "build": {
      "commands": [
        "cdk -a . deploy Default --require-approval=never --verbose"
      ]
    }
  }
}",
          "Type": "CODEPIPELINE",
        },
      },
      "Type": "AWS::CodeBuild::Project",
    },
    "DefaultsUpdatePipelineSelfMutationRole0C19159A": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "codebuild.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "DefaultsUpdatePipelineSelfMutationRoleDefaultPolicyCE04D82F": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "logs:CreateLogGroup",
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":logs:",
                      {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":log-group:/aws/codebuild/",
                      {
                        "Ref": "DefaultsUpdatePipelineSelfMutationD1F1D812",
                      },
                    ],
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":logs:",
                      {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":log-group:/aws/codebuild/",
                      {
                        "Ref": "DefaultsUpdatePipelineSelfMutationD1F1D812",
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": [
                "codebuild:CreateReportGroup",
                "codebuild:CreateReport",
                "codebuild:UpdateReport",
                "codebuild:BatchPutTestCases",
                "codebuild:BatchPutCodeCoverages",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":codebuild:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":report-group/",
                    {
                      "Ref": "DefaultsUpdatePipelineSelfMutationD1F1D812",
                    },
                    "-*",
                  ],
                ],
              },
            },
            {
              "Action": "sts:AssumeRole",
              "Condition": {
                "ForAnyValue:StringEquals": {
                  "iam:ResourceTag/aws-cdk:bootstrap-role": [
                    "image-publishing",
                    "file-publishing",
                    "deploy",
                  ],
                },
              },
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:*:iam::",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":role/*",
                  ],
                ],
              },
            },
            {
              "Action": "cloudformation:DescribeStacks",
              "Effect": "Allow",
              "Resource": "*",
            },
            {
              "Action": "s3:ListBucket",
              "Effect": "Allow",
              "Resource": "*",
            },
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "DefaultsArtifactsBucket267E29E1",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "DefaultsArtifactsBucket267E29E1",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "DefaultsUpdatePipelineSelfMutationRoleDefaultPolicyCE04D82F",
        "Roles": [
          {
            "Ref": "DefaultsUpdatePipelineSelfMutationRole0C19159A",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
  },
  "Rules": {
    "CheckBootstrapVersion": {
      "Assertions": [
        {
          "Assert": {
            "Fn::Not": [
              {
                "Fn::Contains": [
                  [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;

exports[`PDK Pipeline Unit Tests Feature Branches - CodeCommit 1`] = `
{
  "Mappings": {
    "LatestNodeRuntimeMap": {
      "af-south-1": {
        "value": "nodejs20.x",
      },
      "ap-east-1": {
        "value": "nodejs20.x",
      },
      "ap-northeast-1": {
        "value": "nodejs20.x",
      },
      "ap-northeast-2": {
        "value": "nodejs20.x",
      },
      "ap-northeast-3": {
        "value": "nodejs20.x",
      },
      "ap-south-1": {
        "value": "nodejs20.x",
      },
      "ap-south-2": {
        "value": "nodejs20.x",
      },
      "ap-southeast-1": {
        "value": "nodejs20.x",
      },
      "ap-southeast-2": {
        "value": "nodejs20.x",
      },
      "ap-southeast-3": {
        "value": "nodejs20.x",
      },
      "ap-southeast-4": {
        "value": "nodejs20.x",
      },
      "ap-southeast-5": {
        "value": "nodejs20.x",
      },
      "ap-southeast-7": {
        "value": "nodejs20.x",
      },
      "ca-central-1": {
        "value": "nodejs20.x",
      },
      "ca-west-1": {
        "value": "nodejs20.x",
      },
      "cn-north-1": {
        "value": "nodejs18.x",
      },
      "cn-northwest-1": {
        "value": "nodejs18.x",
      },
      "eu-central-1": {
        "value": "nodejs20.x",
      },
      "eu-central-2": {
        "value": "nodejs20.x",
      },
      "eu-isoe-west-1": {
        "value": "nodejs18.x",
      },
      "eu-north-1": {
        "value": "nodejs20.x",
      },
      "eu-south-1": {
        "value": "nodejs20.x",
      },
      "eu-south-2": {
        "value": "nodejs20.x",
      },
      "eu-west-1": {
        "value": "nodejs20.x",
      },
      "eu-west-2": {
        "value": "nodejs20.x",
      },
      "eu-west-3": {
        "value": "nodejs20.x",
      },
      "il-central-1": {
        "value": "nodejs20.x",
      },
      "me-central-1": {
        "value": "nodejs20.x",
      },
      "me-south-1": {
        "value": "nodejs20.x",
      },
      "mx-central-1": {
        "value": "nodejs20.x",
      },
      "sa-east-1": {
        "value": "nodejs20.x",
      },
      "us-east-1": {
        "value": "nodejs20.x",
      },
      "us-east-2": {
        "value": "nodejs20.x",
      },
      "us-gov-east-1": {
        "value": "nodejs18.x",
      },
      "us-gov-west-1": {
        "value": "nodejs18.x",
      },
      "us-iso-east-1": {
        "value": "nodejs18.x",
      },
      "us-iso-west-1": {
        "value": "nodejs18.x",
      },
      "us-isob-east-1": {
        "value": "nodejs18.x",
      },
      "us-west-1": {
        "value": "nodejs20.x",
      },
      "us-west-2": {
        "value": "nodejs20.x",
      },
    },
  },
  "Outputs": {
    "FeatureBranchesCodeRepositoryGRCUrlA78583F8": {
      "Value": {
        "Fn::Join": [
          "",
          [
            "codecommit::",
            {
              "Ref": "AWS::Region",
            },
            "://",
            {
              "Fn::GetAtt": [
                "FeatureBranchesCodeRepositoryD5ABDB8F",
                "Name",
              ],
            },
          ],
        ],
      },
    },
  },
  "Parameters": {
    "BootstrapVersion": {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": {
    "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F": {
      "DependsOn": [
        "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "faa95a81ae7d7373f3e1f242268f904eb748d8d0fdd306e8a6fe515a1905a7d6.zip",
        },
        "Description": {
          "Fn::Join": [
            "",
            [
              "Lambda function for auto-deleting objects in ",
              {
                "Ref": "FeatureBranchesAccessLogsBucket26F49982",
              },
              " S3 bucket.",
            ],
          ],
        },
        "Handler": "index.handler",
        "MemorySize": 128,
        "Role": {
          "Fn::GetAtt": [
            "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
            "Arn",
          ],
        },
        "Runtime": {
          "Fn::FindInMap": [
            "LatestNodeRuntimeMap",
            {
              "Ref": "AWS::Region",
            },
            "value",
          ],
        },
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Sub": "arn:\${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "FeatureBranchesAccessLogsBucket26F49982": {
      "DeletionPolicy": "Delete",
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": {
        "BucketEncryption": {
          "ServerSideEncryptionConfiguration": [
            {
              "ServerSideEncryptionByDefault": {
                "SSEAlgorithm": "AES256",
              },
            },
          ],
        },
        "OwnershipControls": {
          "Rules": [
            {
              "ObjectOwnership": "ObjectWriter",
            },
          ],
        },
        "PublicAccessBlockConfiguration": {
          "BlockPublicAcls": true,
          "BlockPublicPolicy": true,
          "IgnorePublicAcls": true,
          "RestrictPublicBuckets": true,
        },
        "Tags": [
          {
            "Key": "aws-cdk:auto-delete-objects",
            "Value": "true",
          },
        ],
      },
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Delete",
    },
    "FeatureBranchesAccessLogsBucketAutoDeleteObjectsCustomResourceCE3362D5": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "FeatureBranchesAccessLogsBucketPolicy10128DEF",
      ],
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": {
        "BucketName": {
          "Ref": "FeatureBranchesAccessLogsBucket26F49982",
        },
        "ServiceToken": {
          "Fn::GetAtt": [
            "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F",
            "Arn",
          ],
        },
      },
      "Type": "Custom::S3AutoDeleteObjects",
      "UpdateReplacePolicy": "Delete",
    },
    "FeatureBranchesAccessLogsBucketPolicy10128DEF": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": {
        "Bucket": {
          "Ref": "FeatureBranchesAccessLogsBucket26F49982",
        },
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "s3:*",
              "Condition": {
                "Bool": {
                  "aws:SecureTransport": "false",
                },
              },
              "Effect": "Deny",
              "Principal": {
                "AWS": "*",
              },
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "FeatureBranchesAccessLogsBucket26F49982",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "FeatureBranchesAccessLogsBucket26F49982",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": [
                "s3:PutBucketPolicy",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
              ],
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::GetAtt": [
                    "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
                    "Arn",
                  ],
                },
              },
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "FeatureBranchesAccessLogsBucket26F49982",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "FeatureBranchesAccessLogsBucket26F49982",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": "s3:PutObject",
              "Condition": {
                "ArnLike": {
                  "aws:SourceArn": {
                    "Fn::GetAtt": [
                      "FeatureBranchesArtifactsBucketAE5F1C21",
                      "Arn",
                    ],
                  },
                },
                "StringEquals": {
                  "aws:SourceAccount": {
                    "Ref": "AWS::AccountId",
                  },
                },
              },
              "Effect": "Allow",
              "Principal": {
                "Service": "logging.s3.amazonaws.com",
              },
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    {
                      "Fn::GetAtt": [
                        "FeatureBranchesAccessLogsBucket26F49982",
                        "Arn",
                      ],
                    },
                    "/access-logs*",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::S3::BucketPolicy",
    },
    "FeatureBranchesArtifactsBucketAE5F1C21": {
      "DeletionPolicy": "Delete",
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": {
        "BucketEncryption": {
          "ServerSideEncryptionConfiguration": [
            {
              "ServerSideEncryptionByDefault": {
                "SSEAlgorithm": "AES256",
              },
            },
          ],
        },
        "LoggingConfiguration": {
          "DestinationBucketName": {
            "Ref": "FeatureBranchesAccessLogsBucket26F49982",
          },
          "LogFilePrefix": "access-logs",
        },
        "OwnershipControls": {
          "Rules": [
            {
              "ObjectOwnership": "BucketOwnerEnforced",
            },
          ],
        },
        "PublicAccessBlockConfiguration": {
          "BlockPublicAcls": true,
          "BlockPublicPolicy": true,
          "IgnorePublicAcls": true,
          "RestrictPublicBuckets": true,
        },
        "Tags": [
          {
            "Key": "aws-cdk:auto-delete-objects",
            "Value": "true",
          },
        ],
      },
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Delete",
    },
    "FeatureBranchesArtifactsBucketAutoDeleteObjectsCustomResource54C6B193": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "FeatureBranchesArtifactsBucketPolicyBF161175",
      ],
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": {
        "BucketName": {
          "Ref": "FeatureBranchesArtifactsBucketAE5F1C21",
        },
        "ServiceToken": {
          "Fn::GetAtt": [
            "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F",
            "Arn",
          ],
        },
      },
      "Type": "Custom::S3AutoDeleteObjects",
      "UpdateReplacePolicy": "Delete",
    },
    "FeatureBranchesArtifactsBucketPolicyBF161175": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": {
        "Bucket": {
          "Ref": "FeatureBranchesArtifactsBucketAE5F1C21",
        },
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "s3:*",
              "Condition": {
                "Bool": {
                  "aws:SecureTransport": "false",
                },
              },
              "Effect": "Deny",
              "Principal": {
                "AWS": "*",
              },
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "FeatureBranchesArtifactsBucketAE5F1C21",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "FeatureBranchesArtifactsBucketAE5F1C21",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": [
                "s3:PutBucketPolicy",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
              ],
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::GetAtt": [
                    "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
                    "Arn",
                  ],
                },
              },
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "FeatureBranchesArtifactsBucketAE5F1C21",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "FeatureBranchesArtifactsBucketAE5F1C21",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
              ],
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":role/cdk-hnb659fds-deploy-role-",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      "-",
                      {
                        "Ref": "AWS::Region",
                      },
                    ],
                  ],
                },
              },
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "FeatureBranchesArtifactsBucketAE5F1C21",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "FeatureBranchesArtifactsBucketAE5F1C21",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::S3::BucketPolicy",
    },
    "FeatureBranchesAssetsFileAsset1F7F9D557": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": {
        "Artifacts": {
          "Type": "CODEPIPELINE",
        },
        "Cache": {
          "Type": "NO_CACHE",
        },
        "Description": "Pipeline step Default/CodePipeline/Assets/FileAsset1",
        "EncryptionKey": "alias/aws/s3",
        "Environment": {
          "ComputeType": "BUILD_GENERAL1_SMALL",
          "Image": "aws/codebuild/standard:7.0",
          "ImagePullCredentialsType": "CODEBUILD",
          "PrivilegedMode": false,
          "Type": "LINUX_CONTAINER",
        },
        "ServiceRole": {
          "Fn::GetAtt": [
            "FeatureBranchesAssetsFileRoleCD61D8A8",
            "Arn",
          ],
        },
        "Source": {
          "BuildSpec": "{
  "version": "0.2",
  "phases": {
    "install": {
      "commands": [
        "npm install -g cdk-assets@latest"
      ]
    },
    "build": {
      "commands": [
        "cdk-assets --path \\"assembly-Stage/StageAppStack7618C9EF.assets.json\\" --verbose publish \\"14dd2d75ed909331e6d3efb3db54ed40dc6bd19804f86e266387ad8934897c85:current_account-current_region\\""
      ]
    }
  }
}",
          "Type": "CODEPIPELINE",
        },
      },
      "Type": "AWS::CodeBuild::Project",
    },
    "FeatureBranchesAssetsFileRoleCD61D8A8": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "codebuild.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "FeatureBranchesAssetsFileRoleDefaultPolicy3527F238": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "logs:CreateLogGroup",
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":logs:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":log-group:/aws/codebuild/*",
                  ],
                ],
              },
            },
            {
              "Action": [
                "codebuild:CreateReportGroup",
                "codebuild:CreateReport",
                "codebuild:UpdateReport",
                "codebuild:BatchPutTestCases",
                "codebuild:BatchPutCodeCoverages",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":codebuild:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":report-group/*",
                  ],
                ],
              },
            },
            {
              "Action": [
                "codebuild:BatchGetBuilds",
                "codebuild:StartBuild",
                "codebuild:StopBuild",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Resource": {
                "Fn::Sub": "arn:\${AWS::Partition}:iam::\${AWS::AccountId}:role/cdk-hnb659fds-file-publishing-role-\${AWS::AccountId}-\${AWS::Region}",
              },
            },
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "FeatureBranchesArtifactsBucketAE5F1C21",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "FeatureBranchesArtifactsBucketAE5F1C21",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "FeatureBranchesAssetsFileRoleDefaultPolicy3527F238",
        "Roles": [
          {
            "Ref": "FeatureBranchesAssetsFileRoleCD61D8A8",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "FeatureBranchesCodeBuildActionRole5632928F": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::GetAtt": [
                    "FeatureBranchesCodePipelineRole25A9A50B",
                    "Arn",
                  ],
                },
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "FeatureBranchesCodeBuildActionRoleDefaultPolicy6F2B9AF0": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "codebuild:BatchGetBuilds",
                "codebuild:StartBuild",
                "codebuild:StopBuild",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "FeatureBranchesCodePipelineBuildSynthCdkBuildProject09632D29",
                  "Arn",
                ],
              },
            },
            {
              "Action": [
                "codebuild:BatchGetBuilds",
                "codebuild:StartBuild",
                "codebuild:StopBuild",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "FeatureBranchesUpdatePipelineSelfMutation0C4FE793",
                  "Arn",
                ],
              },
            },
            {
              "Action": [
                "codebuild:BatchGetBuilds",
                "codebuild:StartBuild",
                "codebuild:StopBuild",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "FeatureBranchesAssetsFileAsset1F7F9D557",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "FeatureBranchesCodeBuildActionRoleDefaultPolicy6F2B9AF0",
        "Roles": [
          {
            "Ref": "FeatureBranchesCodeBuildActionRole5632928F",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "FeatureBranchesCodePipelineBuildSynthCdkBuildProject09632D29": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": {
        "Artifacts": {
          "Type": "CODEPIPELINE",
        },
        "Cache": {
          "Type": "NO_CACHE",
        },
        "Description": "Pipeline step Default/CodePipeline/Build/Synth",
        "EncryptionKey": "alias/aws/s3",
        "Environment": {
          "ComputeType": "BUILD_GENERAL1_SMALL",
          "EnvironmentVariables": [
            {
              "Name": "BRANCH",
              "Type": "PLAINTEXT",
              "Value": "mainline",
            },
          ],
          "Image": "aws/codebuild/standard:7.0",
          "ImagePullCredentialsType": "CODEBUILD",
          "PrivilegedMode": false,
          "Type": "LINUX_CONTAINER",
        },
        "ServiceRole": {
          "Fn::GetAtt": [
            "FeatureBranchesCodePipelineBuildSynthCdkBuildProjectRole63DBFA18",
            "Arn",
          ],
        },
        "Source": {
          "BuildSpec": "{
  "version": "0.2",
  "phases": {
    "install": {
      "commands": [
        "npm install -g aws-cdk pnpm",
        "npx projen install"
      ]
    },
    "build": {
      "commands": [
        "npx projen build"
      ]
    }
  },
  "artifacts": {
    "secondary-artifacts": {
      "Synth_Output": {
        "base-directory": "cdk.out",
        "files": "**/*"
      },
      "Synth__": {
        "base-directory": ".",
        "files": "**/*"
      }
    }
  }
}",
          "Type": "CODEPIPELINE",
        },
      },
      "Type": "AWS::CodeBuild::Project",
    },
    "FeatureBranchesCodePipelineBuildSynthCdkBuildProjectRole63DBFA18": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "codebuild.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "FeatureBranchesCodePipelineBuildSynthCdkBuildProjectRoleDefaultPolicy2A0E55F5": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "logs:CreateLogGroup",
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":logs:",
                      {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":log-group:/aws/codebuild/",
                      {
                        "Ref": "FeatureBranchesCodePipelineBuildSynthCdkBuildProject09632D29",
                      },
                    ],
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":logs:",
                      {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":log-group:/aws/codebuild/",
                      {
                        "Ref": "FeatureBranchesCodePipelineBuildSynthCdkBuildProject09632D29",
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": [
                "codebuild:CreateReportGroup",
                "codebuild:CreateReport",
                "codebuild:UpdateReport",
                "codebuild:BatchPutTestCases",
                "codebuild:BatchPutCodeCoverages",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":codebuild:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":report-group/",
                    {
                      "Ref": "FeatureBranchesCodePipelineBuildSynthCdkBuildProject09632D29",
                    },
                    "-*",
                  ],
                ],
              },
            },
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
                "s3:PutObject",
                "s3:PutObjectLegalHold",
                "s3:PutObjectRetention",
                "s3:PutObjectTagging",
                "s3:PutObjectVersionTagging",
                "s3:Abort*",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "FeatureBranchesArtifactsBucketAE5F1C21",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "FeatureBranchesArtifactsBucketAE5F1C21",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "FeatureBranchesCodePipelineBuildSynthCdkBuildProjectRoleDefaultPolicy2A0E55F5",
        "Roles": [
          {
            "Ref": "FeatureBranchesCodePipelineBuildSynthCdkBuildProjectRole63DBFA18",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "FeatureBranchesCodePipelineEC802A1B": {
      "DependsOn": [
        "FeatureBranchesCodePipelineRoleDefaultPolicy02B3A9F7",
        "FeatureBranchesCodePipelineRole25A9A50B",
      ],
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": {
        "ArtifactStore": {
          "Location": {
            "Ref": "FeatureBranchesArtifactsBucketAE5F1C21",
          },
          "Type": "S3",
        },
        "PipelineType": "V1",
        "RestartExecutionOnUpdate": true,
        "RoleArn": {
          "Fn::GetAtt": [
            "FeatureBranchesCodePipelineRole25A9A50B",
            "Arn",
          ],
        },
        "Stages": [
          {
            "Actions": [
              {
                "ActionTypeId": {
                  "Category": "Source",
                  "Owner": "AWS",
                  "Provider": "CodeCommit",
                  "Version": "1",
                },
                "Configuration": {
                  "BranchName": "mainline",
                  "PollForSourceChanges": false,
                  "RepositoryName": {
                    "Fn::GetAtt": [
                      "FeatureBranchesCodeRepositoryD5ABDB8F",
                      "Name",
                    ],
                  },
                },
                "Name": {
                  "Fn::GetAtt": [
                    "FeatureBranchesCodeRepositoryD5ABDB8F",
                    "Name",
                  ],
                },
                "OutputArtifacts": [
                  {
                    "Name": "c8c8089eecde98d03bd22313f7aea14e30445074f9_Source",
                  },
                ],
                "RoleArn": {
                  "Fn::GetAtt": [
                    "FeatureBranchesCodePipelineSourceCodeCommitCodePipelineActionRoleE3F1E37D",
                    "Arn",
                  ],
                },
                "RunOrder": 1,
              },
            ],
            "Name": "Source",
          },
          {
            "Actions": [
              {
                "ActionTypeId": {
                  "Category": "Build",
                  "Owner": "AWS",
                  "Provider": "CodeBuild",
                  "Version": "1",
                },
                "Configuration": {
                  "EnvironmentVariables": "[{"name":"_PROJECT_CONFIG_HASH","type":"PLAINTEXT","value":"134ecd927cb9331d34b9be2ddc861adce7834b79d0b5a94ba11f6fee3dd6036d"}]",
                  "ProjectName": {
                    "Ref": "FeatureBranchesCodePipelineBuildSynthCdkBuildProject09632D29",
                  },
                },
                "InputArtifacts": [
                  {
                    "Name": "c8c8089eecde98d03bd22313f7aea14e30445074f9_Source",
                  },
                ],
                "Name": "Synth",
                "OutputArtifacts": [
                  {
                    "Name": "Synth_Output",
                  },
                  {
                    "Name": "Synth__",
                  },
                ],
                "RoleArn": {
                  "Fn::GetAtt": [
                    "FeatureBranchesCodeBuildActionRole5632928F",
                    "Arn",
                  ],
                },
                "RunOrder": 1,
              },
            ],
            "Name": "Build",
          },
          {
            "Actions": [
              {
                "ActionTypeId": {
                  "Category": "Build",
                  "Owner": "AWS",
                  "Provider": "CodeBuild",
                  "Version": "1",
                },
                "Configuration": {
                  "EnvironmentVariables": "[{"name":"_PROJECT_CONFIG_HASH","type":"PLAINTEXT","value":"f5c136b42f09ed582b9273672c6585264fb7142640d362897bd6649d732584c2"}]",
                  "ProjectName": {
                    "Ref": "FeatureBranchesUpdatePipelineSelfMutation0C4FE793",
                  },
                },
                "InputArtifacts": [
                  {
                    "Name": "Synth_Output",
                  },
                ],
                "Name": "SelfMutate",
                "RoleArn": {
                  "Fn::GetAtt": [
                    "FeatureBranchesCodeBuildActionRole5632928F",
                    "Arn",
                  ],
                },
                "RunOrder": 1,
              },
            ],
            "Name": "UpdatePipeline",
          },
          {
            "Actions": [
              {
                "ActionTypeId": {
                  "Category": "Build",
                  "Owner": "AWS",
                  "Provider": "CodeBuild",
                  "Version": "1",
                },
                "Configuration": {
                  "ProjectName": {
                    "Ref": "FeatureBranchesAssetsFileAsset1F7F9D557",
                  },
                },
                "InputArtifacts": [
                  {
                    "Name": "Synth_Output",
                  },
                ],
                "Name": "FileAsset1",
                "RoleArn": {
                  "Fn::GetAtt": [
                    "FeatureBranchesCodeBuildActionRole5632928F",
                    "Arn",
                  ],
                },
                "RunOrder": 1,
              },
            ],
            "Name": "Assets",
          },
          {
            "Actions": [
              {
                "ActionTypeId": {
                  "Category": "Deploy",
                  "Owner": "AWS",
                  "Provider": "CloudFormation",
                  "Version": "1",
                },
                "Configuration": {
                  "ActionMode": "CHANGE_SET_REPLACE",
                  "Capabilities": "CAPABILITY_NAMED_IAM,CAPABILITY_AUTO_EXPAND",
                  "ChangeSetName": "PipelineChange",
                  "RoleArn": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition",
                        },
                        ":iam::",
                        {
                          "Ref": "AWS::AccountId",
                        },
                        ":role/cdk-hnb659fds-cfn-exec-role-",
                        {
                          "Ref": "AWS::AccountId",
                        },
                        "-",
                        {
                          "Ref": "AWS::Region",
                        },
                      ],
                    ],
                  },
                  "StackName": "Stage-AppStack",
                  "TemplatePath": "Synth_Output::assembly-Stage/StageAppStack7618C9EF.template.json",
                },
                "InputArtifacts": [
                  {
                    "Name": "Synth_Output",
                  },
                ],
                "Name": "Prepare",
                "RoleArn": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":role/cdk-hnb659fds-deploy-role-",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      "-",
                      {
                        "Ref": "AWS::Region",
                      },
                    ],
                  ],
                },
                "RunOrder": 1,
              },
              {
                "ActionTypeId": {
                  "Category": "Deploy",
                  "Owner": "AWS",
                  "Provider": "CloudFormation",
                  "Version": "1",
                },
                "Configuration": {
                  "ActionMode": "CHANGE_SET_EXECUTE",
                  "ChangeSetName": "PipelineChange",
                  "StackName": "Stage-AppStack",
                },
                "Name": "Deploy",
                "RoleArn": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":role/cdk-hnb659fds-deploy-role-",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      "-",
                      {
                        "Ref": "AWS::Region",
                      },
                    ],
                  ],
                },
                "RunOrder": 2,
              },
            ],
            "Name": "Stage",
          },
        ],
      },
      "Type": "AWS::CodePipeline::Pipeline",
    },
    "FeatureBranchesCodePipelineEventsRole25B14D6E": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "events.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "FeatureBranchesCodePipelineEventsRoleDefaultPolicy120BFB25": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "codepipeline:StartPipelineExecution",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":codepipeline:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":",
                    {
                      "Ref": "FeatureBranchesCodePipelineEC802A1B",
                    },
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "FeatureBranchesCodePipelineEventsRoleDefaultPolicy120BFB25",
        "Roles": [
          {
            "Ref": "FeatureBranchesCodePipelineEventsRole25B14D6E",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "FeatureBranchesCodePipelineRole25A9A50B": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "codepipeline.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "FeatureBranchesCodePipelineRoleDefaultPolicy02B3A9F7": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
                "s3:PutObject",
                "s3:PutObjectLegalHold",
                "s3:PutObjectRetention",
                "s3:PutObjectTagging",
                "s3:PutObjectVersionTagging",
                "s3:Abort*",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "FeatureBranchesArtifactsBucketAE5F1C21",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "FeatureBranchesArtifactsBucketAE5F1C21",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "FeatureBranchesCodePipelineSourceCodeCommitCodePipelineActionRoleE3F1E37D",
                  "Arn",
                ],
              },
            },
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "FeatureBranchesCodeBuildActionRole5632928F",
                  "Arn",
                ],
              },
            },
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":iam::",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":role/cdk-hnb659fds-deploy-role-",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    "-",
                    {
                      "Ref": "AWS::Region",
                    },
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "FeatureBranchesCodePipelineRoleDefaultPolicy02B3A9F7",
        "Roles": [
          {
            "Ref": "FeatureBranchesCodePipelineRole25A9A50B",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "FeatureBranchesCodePipelineSourceCodeCommitCodePipelineActionRoleDefaultPolicyBD26FC43": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
                "s3:PutObject",
                "s3:PutObjectLegalHold",
                "s3:PutObjectRetention",
                "s3:PutObjectTagging",
                "s3:PutObjectVersionTagging",
                "s3:Abort*",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "FeatureBranchesArtifactsBucketAE5F1C21",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "FeatureBranchesArtifactsBucketAE5F1C21",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": [
                "codecommit:GetBranch",
                "codecommit:GetCommit",
                "codecommit:UploadArchive",
                "codecommit:GetUploadArchiveStatus",
                "codecommit:CancelUploadArchive",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "FeatureBranchesCodeRepositoryD5ABDB8F",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "FeatureBranchesCodePipelineSourceCodeCommitCodePipelineActionRoleDefaultPolicyBD26FC43",
        "Roles": [
          {
            "Ref": "FeatureBranchesCodePipelineSourceCodeCommitCodePipelineActionRoleE3F1E37D",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "FeatureBranchesCodePipelineSourceCodeCommitCodePipelineActionRoleE3F1E37D": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":root",
                    ],
                  ],
                },
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "FeatureBranchesCodeRepositoryD5ABDB8F": {
      "DeletionPolicy": "Retain",
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": {
        "RepositoryName": "FeatureBranches",
      },
      "Type": "AWS::CodeCommit::Repository",
      "UpdateReplacePolicy": "Retain",
    },
    "FeatureBranchesCodeRepositoryFeatureBranchesCodePipelineE4C72340mainlineEventRule3D893216": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": {
        "EventPattern": {
          "detail": {
            "event": [
              "referenceCreated",
              "referenceUpdated",
            ],
            "referenceName": [
              "mainline",
            ],
          },
          "detail-type": [
            "CodeCommit Repository State Change",
          ],
          "resources": [
            {
              "Fn::GetAtt": [
                "FeatureBranchesCodeRepositoryD5ABDB8F",
                "Arn",
              ],
            },
          ],
          "source": [
            "aws.codecommit",
          ],
        },
        "State": "ENABLED",
        "Targets": [
          {
            "Arn": {
              "Fn::Join": [
                "",
                [
                  "arn:",
                  {
                    "Ref": "AWS::Partition",
                  },
                  ":codepipeline:",
                  {
                    "Ref": "AWS::Region",
                  },
                  ":",
                  {
                    "Ref": "AWS::AccountId",
                  },
                  ":",
                  {
                    "Ref": "FeatureBranchesCodePipelineEC802A1B",
                  },
                ],
              ],
            },
            "Id": "Target0",
            "RoleArn": {
              "Fn::GetAtt": [
                "FeatureBranchesCodePipelineEventsRole25B14D6E",
                "Arn",
              ],
            },
          },
        ],
      },
      "Type": "AWS::Events::Rule",
    },
    "FeatureBranchesFeatureBranchPipelinesFeaturePipeline83F62AB3": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": {
        "Artifacts": {
          "Type": "NO_ARTIFACTS",
        },
        "Cache": {
          "Type": "NO_CACHE",
        },
        "EncryptionKey": "alias/aws/s3",
        "Environment": {
          "ComputeType": "BUILD_GENERAL1_SMALL",
          "Image": "aws/codebuild/standard:7.0",
          "ImagePullCredentialsType": "CODEBUILD",
          "PrivilegedMode": false,
          "Type": "LINUX_CONTAINER",
        },
        "ServiceRole": {
          "Fn::GetAtt": [
            "FeatureBranchesFeatureBranchPipelinesFeaturePipelineRole5230C65F",
            "Arn",
          ],
        },
        "Source": {
          "BuildSpec": "{
  "version": "0.2",
  "phases": {
    "install": {
      "commands": [
        "npm install -g aws-cdk pnpm",
        "npx projen install"
      ]
    },
    "build": {
      "commands": [
        "git branch -a",
        "export BRANCH=\\"$(git rev-parse --abbrev-ref HEAD)\\"",
        "npx projen deploy"
      ]
    }
  }
}",
          "Type": "NO_SOURCE",
        },
      },
      "Type": "AWS::CodeBuild::Project",
    },
    "FeatureBranchesFeatureBranchPipelinesFeaturePipelineRole5230C65F": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "codebuild.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "FeatureBranchesFeatureBranchPipelinesFeaturePipelineRoleDefaultPolicyD64EA4EA": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "logs:CreateLogGroup",
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":logs:",
                      {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":log-group:/aws/codebuild/",
                      {
                        "Ref": "FeatureBranchesFeatureBranchPipelinesFeaturePipeline83F62AB3",
                      },
                    ],
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":logs:",
                      {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":log-group:/aws/codebuild/",
                      {
                        "Ref": "FeatureBranchesFeatureBranchPipelinesFeaturePipeline83F62AB3",
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": [
                "codebuild:CreateReportGroup",
                "codebuild:CreateReport",
                "codebuild:UpdateReport",
                "codebuild:BatchPutTestCases",
                "codebuild:BatchPutCodeCoverages",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":codebuild:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":report-group/",
                    {
                      "Ref": "FeatureBranchesFeatureBranchPipelinesFeaturePipeline83F62AB3",
                    },
                    "-*",
                  ],
                ],
              },
            },
            {
              "Action": [
                "sts:AssumeRole",
                "cloudformation:*",
                "iam:*",
                "s3:*",
                "ecr:*",
                "ec2:*",
                "ssm:*",
                "codebuild:*",
                "codecommit:*",
                "codestar-connections:*",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "FeatureBranchesFeatureBranchPipelinesFeaturePipelineRoleDefaultPolicyD64EA4EA",
        "Roles": [
          {
            "Ref": "FeatureBranchesFeatureBranchPipelinesFeaturePipelineRole5230C65F",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "FeatureBranchesUpdatePipelineSelfMutation0C4FE793": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": {
        "Artifacts": {
          "Type": "CODEPIPELINE",
        },
        "Cache": {
          "Type": "NO_CACHE",
        },
        "Description": "Pipeline step Default/CodePipeline/UpdatePipeline/SelfMutate",
        "EncryptionKey": "alias/aws/s3",
        "Environment": {
          "ComputeType": "BUILD_GENERAL1_SMALL",
          "Image": "aws/codebuild/standard:7.0",
          "ImagePullCredentialsType": "CODEBUILD",
          "PrivilegedMode": false,
          "Type": "LINUX_CONTAINER",
        },
        "ServiceRole": {
          "Fn::GetAtt": [
            "FeatureBranchesUpdatePipelineSelfMutationRole9669379F",
            "Arn",
          ],
        },
        "Source": {
          "BuildSpec": "{
  "version": "0.2",
  "phases": {
    "install": {
      "commands": [
        "npm install -g aws-cdk@2"
      ]
    },
    "build": {
      "commands": [
        "cdk -a . deploy Default --require-approval=never --verbose"
      ]
    }
  }
}",
          "Type": "CODEPIPELINE",
        },
      },
      "Type": "AWS::CodeBuild::Project",
    },
    "FeatureBranchesUpdatePipelineSelfMutationRole9669379F": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "codebuild.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "FeatureBranchesUpdatePipelineSelfMutationRoleDefaultPolicy2C1692D4": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "logs:CreateLogGroup",
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":logs:",
                      {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":log-group:/aws/codebuild/",
                      {
                        "Ref": "FeatureBranchesUpdatePipelineSelfMutation0C4FE793",
                      },
                    ],
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":logs:",
                      {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":log-group:/aws/codebuild/",
                      {
                        "Ref": "FeatureBranchesUpdatePipelineSelfMutation0C4FE793",
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": [
                "codebuild:CreateReportGroup",
                "codebuild:CreateReport",
                "codebuild:UpdateReport",
                "codebuild:BatchPutTestCases",
                "codebuild:BatchPutCodeCoverages",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":codebuild:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":report-group/",
                    {
                      "Ref": "FeatureBranchesUpdatePipelineSelfMutation0C4FE793",
                    },
                    "-*",
                  ],
                ],
              },
            },
            {
              "Action": "sts:AssumeRole",
              "Condition": {
                "ForAnyValue:StringEquals": {
                  "iam:ResourceTag/aws-cdk:bootstrap-role": [
                    "image-publishing",
                    "file-publishing",
                    "deploy",
                  ],
                },
              },
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:*:iam::",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":role/*",
                  ],
                ],
              },
            },
            {
              "Action": "cloudformation:DescribeStacks",
              "Effect": "Allow",
              "Resource": "*",
            },
            {
              "Action": "s3:ListBucket",
              "Effect": "Allow",
              "Resource": "*",
            },
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "FeatureBranchesArtifactsBucketAE5F1C21",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "FeatureBranchesArtifactsBucketAE5F1C21",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "FeatureBranchesUpdatePipelineSelfMutationRoleDefaultPolicy2C1692D4",
        "Roles": [
          {
            "Ref": "FeatureBranchesUpdatePipelineSelfMutationRole9669379F",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
  },
  "Rules": {
    "CheckBootstrapVersion": {
      "Assertions": [
        {
          "Assert": {
            "Fn::Not": [
              {
                "Fn::Contains": [
                  [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;

exports[`PDK Pipeline Unit Tests Feature Branches - CodeStar Connection 1`] = `
{
  "Mappings": {
    "LatestNodeRuntimeMap": {
      "af-south-1": {
        "value": "nodejs20.x",
      },
      "ap-east-1": {
        "value": "nodejs20.x",
      },
      "ap-northeast-1": {
        "value": "nodejs20.x",
      },
      "ap-northeast-2": {
        "value": "nodejs20.x",
      },
      "ap-northeast-3": {
        "value": "nodejs20.x",
      },
      "ap-south-1": {
        "value": "nodejs20.x",
      },
      "ap-south-2": {
        "value": "nodejs20.x",
      },
      "ap-southeast-1": {
        "value": "nodejs20.x",
      },
      "ap-southeast-2": {
        "value": "nodejs20.x",
      },
      "ap-southeast-3": {
        "value": "nodejs20.x",
      },
      "ap-southeast-4": {
        "value": "nodejs20.x",
      },
      "ap-southeast-5": {
        "value": "nodejs20.x",
      },
      "ap-southeast-7": {
        "value": "nodejs20.x",
      },
      "ca-central-1": {
        "value": "nodejs20.x",
      },
      "ca-west-1": {
        "value": "nodejs20.x",
      },
      "cn-north-1": {
        "value": "nodejs18.x",
      },
      "cn-northwest-1": {
        "value": "nodejs18.x",
      },
      "eu-central-1": {
        "value": "nodejs20.x",
      },
      "eu-central-2": {
        "value": "nodejs20.x",
      },
      "eu-isoe-west-1": {
        "value": "nodejs18.x",
      },
      "eu-north-1": {
        "value": "nodejs20.x",
      },
      "eu-south-1": {
        "value": "nodejs20.x",
      },
      "eu-south-2": {
        "value": "nodejs20.x",
      },
      "eu-west-1": {
        "value": "nodejs20.x",
      },
      "eu-west-2": {
        "value": "nodejs20.x",
      },
      "eu-west-3": {
        "value": "nodejs20.x",
      },
      "il-central-1": {
        "value": "nodejs20.x",
      },
      "me-central-1": {
        "value": "nodejs20.x",
      },
      "me-south-1": {
        "value": "nodejs20.x",
      },
      "mx-central-1": {
        "value": "nodejs20.x",
      },
      "sa-east-1": {
        "value": "nodejs20.x",
      },
      "us-east-1": {
        "value": "nodejs20.x",
      },
      "us-east-2": {
        "value": "nodejs20.x",
      },
      "us-gov-east-1": {
        "value": "nodejs18.x",
      },
      "us-gov-west-1": {
        "value": "nodejs18.x",
      },
      "us-iso-east-1": {
        "value": "nodejs18.x",
      },
      "us-iso-west-1": {
        "value": "nodejs18.x",
      },
      "us-isob-east-1": {
        "value": "nodejs18.x",
      },
      "us-west-1": {
        "value": "nodejs20.x",
      },
      "us-west-2": {
        "value": "nodejs20.x",
      },
    },
  },
  "Parameters": {
    "BootstrapVersion": {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": {
    "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F": {
      "DependsOn": [
        "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "faa95a81ae7d7373f3e1f242268f904eb748d8d0fdd306e8a6fe515a1905a7d6.zip",
        },
        "Description": {
          "Fn::Join": [
            "",
            [
              "Lambda function for auto-deleting objects in ",
              {
                "Ref": "FeatureBranchesCodeStarAccessLogsBucket41C7FEC1",
              },
              " S3 bucket.",
            ],
          ],
        },
        "Handler": "index.handler",
        "MemorySize": 128,
        "Role": {
          "Fn::GetAtt": [
            "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
            "Arn",
          ],
        },
        "Runtime": {
          "Fn::FindInMap": [
            "LatestNodeRuntimeMap",
            {
              "Ref": "AWS::Region",
            },
            "value",
          ],
        },
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Sub": "arn:\${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "FeatureBranchesCodeStarAccessLogsBucket41C7FEC1": {
      "DeletionPolicy": "Delete",
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": {
        "BucketEncryption": {
          "ServerSideEncryptionConfiguration": [
            {
              "ServerSideEncryptionByDefault": {
                "SSEAlgorithm": "AES256",
              },
            },
          ],
        },
        "OwnershipControls": {
          "Rules": [
            {
              "ObjectOwnership": "ObjectWriter",
            },
          ],
        },
        "PublicAccessBlockConfiguration": {
          "BlockPublicAcls": true,
          "BlockPublicPolicy": true,
          "IgnorePublicAcls": true,
          "RestrictPublicBuckets": true,
        },
        "Tags": [
          {
            "Key": "aws-cdk:auto-delete-objects",
            "Value": "true",
          },
        ],
      },
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Delete",
    },
    "FeatureBranchesCodeStarAccessLogsBucketAutoDeleteObjectsCustomResource93DCCAC7": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "FeatureBranchesCodeStarAccessLogsBucketPolicyF7B95D88",
      ],
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": {
        "BucketName": {
          "Ref": "FeatureBranchesCodeStarAccessLogsBucket41C7FEC1",
        },
        "ServiceToken": {
          "Fn::GetAtt": [
            "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F",
            "Arn",
          ],
        },
      },
      "Type": "Custom::S3AutoDeleteObjects",
      "UpdateReplacePolicy": "Delete",
    },
    "FeatureBranchesCodeStarAccessLogsBucketPolicyF7B95D88": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": {
        "Bucket": {
          "Ref": "FeatureBranchesCodeStarAccessLogsBucket41C7FEC1",
        },
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "s3:*",
              "Condition": {
                "Bool": {
                  "aws:SecureTransport": "false",
                },
              },
              "Effect": "Deny",
              "Principal": {
                "AWS": "*",
              },
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "FeatureBranchesCodeStarAccessLogsBucket41C7FEC1",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "FeatureBranchesCodeStarAccessLogsBucket41C7FEC1",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": [
                "s3:PutBucketPolicy",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
              ],
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::GetAtt": [
                    "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
                    "Arn",
                  ],
                },
              },
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "FeatureBranchesCodeStarAccessLogsBucket41C7FEC1",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "FeatureBranchesCodeStarAccessLogsBucket41C7FEC1",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": "s3:PutObject",
              "Condition": {
                "ArnLike": {
                  "aws:SourceArn": {
                    "Fn::GetAtt": [
                      "FeatureBranchesCodeStarArtifactsBucket6B260CE8",
                      "Arn",
                    ],
                  },
                },
                "StringEquals": {
                  "aws:SourceAccount": {
                    "Ref": "AWS::AccountId",
                  },
                },
              },
              "Effect": "Allow",
              "Principal": {
                "Service": "logging.s3.amazonaws.com",
              },
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    {
                      "Fn::GetAtt": [
                        "FeatureBranchesCodeStarAccessLogsBucket41C7FEC1",
                        "Arn",
                      ],
                    },
                    "/access-logs*",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::S3::BucketPolicy",
    },
    "FeatureBranchesCodeStarArtifactsBucket6B260CE8": {
      "DeletionPolicy": "Delete",
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": {
        "BucketEncryption": {
          "ServerSideEncryptionConfiguration": [
            {
              "ServerSideEncryptionByDefault": {
                "SSEAlgorithm": "AES256",
              },
            },
          ],
        },
        "LoggingConfiguration": {
          "DestinationBucketName": {
            "Ref": "FeatureBranchesCodeStarAccessLogsBucket41C7FEC1",
          },
          "LogFilePrefix": "access-logs",
        },
        "OwnershipControls": {
          "Rules": [
            {
              "ObjectOwnership": "BucketOwnerEnforced",
            },
          ],
        },
        "PublicAccessBlockConfiguration": {
          "BlockPublicAcls": true,
          "BlockPublicPolicy": true,
          "IgnorePublicAcls": true,
          "RestrictPublicBuckets": true,
        },
        "Tags": [
          {
            "Key": "aws-cdk:auto-delete-objects",
            "Value": "true",
          },
        ],
      },
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Delete",
    },
    "FeatureBranchesCodeStarArtifactsBucketAutoDeleteObjectsCustomResource1EE9B3A4": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "FeatureBranchesCodeStarArtifactsBucketPolicy1291FACE",
      ],
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": {
        "BucketName": {
          "Ref": "FeatureBranchesCodeStarArtifactsBucket6B260CE8",
        },
        "ServiceToken": {
          "Fn::GetAtt": [
            "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F",
            "Arn",
          ],
        },
      },
      "Type": "Custom::S3AutoDeleteObjects",
      "UpdateReplacePolicy": "Delete",
    },
    "FeatureBranchesCodeStarArtifactsBucketPolicy1291FACE": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": {
        "Bucket": {
          "Ref": "FeatureBranchesCodeStarArtifactsBucket6B260CE8",
        },
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "s3:*",
              "Condition": {
                "Bool": {
                  "aws:SecureTransport": "false",
                },
              },
              "Effect": "Deny",
              "Principal": {
                "AWS": "*",
              },
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "FeatureBranchesCodeStarArtifactsBucket6B260CE8",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "FeatureBranchesCodeStarArtifactsBucket6B260CE8",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": [
                "s3:PutBucketPolicy",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
              ],
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::GetAtt": [
                    "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
                    "Arn",
                  ],
                },
              },
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "FeatureBranchesCodeStarArtifactsBucket6B260CE8",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "FeatureBranchesCodeStarArtifactsBucket6B260CE8",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
              ],
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":role/cdk-hnb659fds-deploy-role-",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      "-",
                      {
                        "Ref": "AWS::Region",
                      },
                    ],
                  ],
                },
              },
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "FeatureBranchesCodeStarArtifactsBucket6B260CE8",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "FeatureBranchesCodeStarArtifactsBucket6B260CE8",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::S3::BucketPolicy",
    },
    "FeatureBranchesCodeStarAssetsFileAsset13A4CC0BC": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": {
        "Artifacts": {
          "Type": "CODEPIPELINE",
        },
        "Cache": {
          "Type": "NO_CACHE",
        },
        "Description": "Pipeline step Default/CodePipeline/Assets/FileAsset1",
        "EncryptionKey": "alias/aws/s3",
        "Environment": {
          "ComputeType": "BUILD_GENERAL1_SMALL",
          "Image": "aws/codebuild/standard:7.0",
          "ImagePullCredentialsType": "CODEBUILD",
          "PrivilegedMode": false,
          "Type": "LINUX_CONTAINER",
        },
        "ServiceRole": {
          "Fn::GetAtt": [
            "FeatureBranchesCodeStarAssetsFileRole11BDF1C6",
            "Arn",
          ],
        },
        "Source": {
          "BuildSpec": "{
  "version": "0.2",
  "phases": {
    "install": {
      "commands": [
        "npm install -g cdk-assets@latest"
      ]
    },
    "build": {
      "commands": [
        "cdk-assets --path \\"assembly-Stage/StageAppStack7618C9EF.assets.json\\" --verbose publish \\"14dd2d75ed909331e6d3efb3db54ed40dc6bd19804f86e266387ad8934897c85:current_account-current_region\\""
      ]
    }
  }
}",
          "Type": "CODEPIPELINE",
        },
      },
      "Type": "AWS::CodeBuild::Project",
    },
    "FeatureBranchesCodeStarAssetsFileRole11BDF1C6": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "codebuild.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "FeatureBranchesCodeStarAssetsFileRoleDefaultPolicyEB19F1AD": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "logs:CreateLogGroup",
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":logs:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":log-group:/aws/codebuild/*",
                  ],
                ],
              },
            },
            {
              "Action": [
                "codebuild:CreateReportGroup",
                "codebuild:CreateReport",
                "codebuild:UpdateReport",
                "codebuild:BatchPutTestCases",
                "codebuild:BatchPutCodeCoverages",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":codebuild:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":report-group/*",
                  ],
                ],
              },
            },
            {
              "Action": [
                "codebuild:BatchGetBuilds",
                "codebuild:StartBuild",
                "codebuild:StopBuild",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Resource": {
                "Fn::Sub": "arn:\${AWS::Partition}:iam::\${AWS::AccountId}:role/cdk-hnb659fds-file-publishing-role-\${AWS::AccountId}-\${AWS::Region}",
              },
            },
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "FeatureBranchesCodeStarArtifactsBucket6B260CE8",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "FeatureBranchesCodeStarArtifactsBucket6B260CE8",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "FeatureBranchesCodeStarAssetsFileRoleDefaultPolicyEB19F1AD",
        "Roles": [
          {
            "Ref": "FeatureBranchesCodeStarAssetsFileRole11BDF1C6",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "FeatureBranchesCodeStarCodeBuildActionRole86BF08E2": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::GetAtt": [
                    "FeatureBranchesCodeStarCodePipelineRole77490095",
                    "Arn",
                  ],
                },
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "FeatureBranchesCodeStarCodeBuildActionRoleDefaultPolicyB557280F": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "codebuild:BatchGetBuilds",
                "codebuild:StartBuild",
                "codebuild:StopBuild",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "FeatureBranchesCodeStarCodePipelineBuildSynthCdkBuildProject16E0506E",
                  "Arn",
                ],
              },
            },
            {
              "Action": [
                "codebuild:BatchGetBuilds",
                "codebuild:StartBuild",
                "codebuild:StopBuild",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "FeatureBranchesCodeStarUpdatePipelineSelfMutationD4CB1AF1",
                  "Arn",
                ],
              },
            },
            {
              "Action": [
                "codebuild:BatchGetBuilds",
                "codebuild:StartBuild",
                "codebuild:StopBuild",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "FeatureBranchesCodeStarAssetsFileAsset13A4CC0BC",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "FeatureBranchesCodeStarCodeBuildActionRoleDefaultPolicyB557280F",
        "Roles": [
          {
            "Ref": "FeatureBranchesCodeStarCodeBuildActionRole86BF08E2",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "FeatureBranchesCodeStarCodePipeline0D80A3B3": {
      "DependsOn": [
        "FeatureBranchesCodeStarCodePipelineRoleDefaultPolicy772BBFFE",
        "FeatureBranchesCodeStarCodePipelineRole77490095",
      ],
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": {
        "ArtifactStore": {
          "Location": {
            "Ref": "FeatureBranchesCodeStarArtifactsBucket6B260CE8",
          },
          "Type": "S3",
        },
        "PipelineType": "V1",
        "RestartExecutionOnUpdate": true,
        "RoleArn": {
          "Fn::GetAtt": [
            "FeatureBranchesCodeStarCodePipelineRole77490095",
            "Arn",
          ],
        },
        "Stages": [
          {
            "Actions": [
              {
                "ActionTypeId": {
                  "Category": "Source",
                  "Owner": "AWS",
                  "Provider": "CodeStarSourceConnection",
                  "Version": "1",
                },
                "Configuration": {
                  "BranchName": "main",
                  "ConnectionArn": "arn:aws:codestar-connections:region:account:connection/uuid",
                  "FullRepositoryId": "owner/repo",
                },
                "Name": "owner_repo",
                "OutputArtifacts": [
                  {
                    "Name": "owner_repo_Source",
                  },
                ],
                "RoleArn": {
                  "Fn::GetAtt": [
                    "FeatureBranchesCodeStarCodePipelineSourceownerrepoCodePipelineActionRole09CF4D73",
                    "Arn",
                  ],
                },
                "RunOrder": 1,
              },
            ],
            "Name": "Source",
          },
          {
            "Actions": [
              {
                "ActionTypeId": {
                  "Category": "Build",
                  "Owner": "AWS",
                  "Provider": "CodeBuild",
                  "Version": "1",
                },
                "Configuration": {
                  "EnvironmentVariables": "[{"name":"_PROJECT_CONFIG_HASH","type":"PLAINTEXT","value":"44519d3909d3572683057c4c9edfec9ea1d3f08bd67f354b7797b0bdbb15ff37"}]",
                  "ProjectName": {
                    "Ref": "FeatureBranchesCodeStarCodePipelineBuildSynthCdkBuildProject16E0506E",
                  },
                },
                "InputArtifacts": [
                  {
                    "Name": "owner_repo_Source",
                  },
                ],
                "Name": "Synth",
                "OutputArtifacts": [
                  {
                    "Name": "Synth_Output",
                  },
                  {
                    "Name": "Synth__",
                  },
                ],
                "RoleArn": {
                  "Fn::GetAtt": [
                    "FeatureBranchesCodeStarCodeBuildActionRole86BF08E2",
                    "Arn",
                  ],
                },
                "RunOrder": 1,
              },
            ],
            "Name": "Build",
          },
          {
            "Actions": [
              {
                "ActionTypeId": {
                  "Category": "Build",
                  "Owner": "AWS",
                  "Provider": "CodeBuild",
                  "Version": "1",
                },
                "Configuration": {
                  "EnvironmentVariables": "[{"name":"_PROJECT_CONFIG_HASH","type":"PLAINTEXT","value":"f5c136b42f09ed582b9273672c6585264fb7142640d362897bd6649d732584c2"}]",
                  "ProjectName": {
                    "Ref": "FeatureBranchesCodeStarUpdatePipelineSelfMutationD4CB1AF1",
                  },
                },
                "InputArtifacts": [
                  {
                    "Name": "Synth_Output",
                  },
                ],
                "Name": "SelfMutate",
                "RoleArn": {
                  "Fn::GetAtt": [
                    "FeatureBranchesCodeStarCodeBuildActionRole86BF08E2",
                    "Arn",
                  ],
                },
                "RunOrder": 1,
              },
            ],
            "Name": "UpdatePipeline",
          },
          {
            "Actions": [
              {
                "ActionTypeId": {
                  "Category": "Build",
                  "Owner": "AWS",
                  "Provider": "CodeBuild",
                  "Version": "1",
                },
                "Configuration": {
                  "ProjectName": {
                    "Ref": "FeatureBranchesCodeStarAssetsFileAsset13A4CC0BC",
                  },
                },
                "InputArtifacts": [
                  {
                    "Name": "Synth_Output",
                  },
                ],
                "Name": "FileAsset1",
                "RoleArn": {
                  "Fn::GetAtt": [
                    "FeatureBranchesCodeStarCodeBuildActionRole86BF08E2",
                    "Arn",
                  ],
                },
                "RunOrder": 1,
              },
            ],
            "Name": "Assets",
          },
          {
            "Actions": [
              {
                "ActionTypeId": {
                  "Category": "Deploy",
                  "Owner": "AWS",
                  "Provider": "CloudFormation",
                  "Version": "1",
                },
                "Configuration": {
                  "ActionMode": "CHANGE_SET_REPLACE",
                  "Capabilities": "CAPABILITY_NAMED_IAM,CAPABILITY_AUTO_EXPAND",
                  "ChangeSetName": "PipelineChange",
                  "RoleArn": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition",
                        },
                        ":iam::",
                        {
                          "Ref": "AWS::AccountId",
                        },
                        ":role/cdk-hnb659fds-cfn-exec-role-",
                        {
                          "Ref": "AWS::AccountId",
                        },
                        "-",
                        {
                          "Ref": "AWS::Region",
                        },
                      ],
                    ],
                  },
                  "StackName": "Stage-AppStack",
                  "TemplatePath": "Synth_Output::assembly-Stage/StageAppStack7618C9EF.template.json",
                },
                "InputArtifacts": [
                  {
                    "Name": "Synth_Output",
                  },
                ],
                "Name": "Prepare",
                "RoleArn": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":role/cdk-hnb659fds-deploy-role-",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      "-",
                      {
                        "Ref": "AWS::Region",
                      },
                    ],
                  ],
                },
                "RunOrder": 1,
              },
              {
                "ActionTypeId": {
                  "Category": "Deploy",
                  "Owner": "AWS",
                  "Provider": "CloudFormation",
                  "Version": "1",
                },
                "Configuration": {
                  "ActionMode": "CHANGE_SET_EXECUTE",
                  "ChangeSetName": "PipelineChange",
                  "StackName": "Stage-AppStack",
                },
                "Name": "Deploy",
                "RoleArn": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":role/cdk-hnb659fds-deploy-role-",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      "-",
                      {
                        "Ref": "AWS::Region",
                      },
                    ],
                  ],
                },
                "RunOrder": 2,
              },
            ],
            "Name": "Stage",
          },
        ],
      },
      "Type": "AWS::CodePipeline::Pipeline",
    },
    "FeatureBranchesCodeStarCodePipelineBuildSynthCdkBuildProject16E0506E": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": {
        "Artifacts": {
          "Type": "CODEPIPELINE",
        },
        "Cache": {
          "Type": "NO_CACHE",
        },
        "Description": "Pipeline step Default/CodePipeline/Build/Synth",
        "EncryptionKey": "alias/aws/s3",
        "Environment": {
          "ComputeType": "BUILD_GENERAL1_SMALL",
          "EnvironmentVariables": [
            {
              "Name": "BRANCH",
              "Type": "PLAINTEXT",
              "Value": "main",
            },
          ],
          "Image": "aws/codebuild/standard:7.0",
          "ImagePullCredentialsType": "CODEBUILD",
          "PrivilegedMode": false,
          "Type": "LINUX_CONTAINER",
        },
        "ServiceRole": {
          "Fn::GetAtt": [
            "FeatureBranchesCodeStarCodePipelineBuildSynthCdkBuildProjectRole9B140B9E",
            "Arn",
          ],
        },
        "Source": {
          "BuildSpec": "{
  "version": "0.2",
  "phases": {
    "install": {
      "commands": [
        "npm install -g aws-cdk pnpm",
        "npx projen install"
      ]
    },
    "build": {
      "commands": [
        "npx projen build"
      ]
    }
  },
  "artifacts": {
    "secondary-artifacts": {
      "Synth_Output": {
        "base-directory": "cdk.out",
        "files": "**/*"
      },
      "Synth__": {
        "base-directory": ".",
        "files": "**/*"
      }
    }
  }
}",
          "Type": "CODEPIPELINE",
        },
      },
      "Type": "AWS::CodeBuild::Project",
    },
    "FeatureBranchesCodeStarCodePipelineBuildSynthCdkBuildProjectRole9B140B9E": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "codebuild.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "FeatureBranchesCodeStarCodePipelineBuildSynthCdkBuildProjectRoleDefaultPolicyC1C109F8": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "logs:CreateLogGroup",
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":logs:",
                      {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":log-group:/aws/codebuild/",
                      {
                        "Ref": "FeatureBranchesCodeStarCodePipelineBuildSynthCdkBuildProject16E0506E",
                      },
                    ],
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":logs:",
                      {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":log-group:/aws/codebuild/",
                      {
                        "Ref": "FeatureBranchesCodeStarCodePipelineBuildSynthCdkBuildProject16E0506E",
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": [
                "codebuild:CreateReportGroup",
                "codebuild:CreateReport",
                "codebuild:UpdateReport",
                "codebuild:BatchPutTestCases",
                "codebuild:BatchPutCodeCoverages",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":codebuild:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":report-group/",
                    {
                      "Ref": "FeatureBranchesCodeStarCodePipelineBuildSynthCdkBuildProject16E0506E",
                    },
                    "-*",
                  ],
                ],
              },
            },
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
                "s3:PutObject",
                "s3:PutObjectLegalHold",
                "s3:PutObjectRetention",
                "s3:PutObjectTagging",
                "s3:PutObjectVersionTagging",
                "s3:Abort*",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "FeatureBranchesCodeStarArtifactsBucket6B260CE8",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "FeatureBranchesCodeStarArtifactsBucket6B260CE8",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "FeatureBranchesCodeStarCodePipelineBuildSynthCdkBuildProjectRoleDefaultPolicyC1C109F8",
        "Roles": [
          {
            "Ref": "FeatureBranchesCodeStarCodePipelineBuildSynthCdkBuildProjectRole9B140B9E",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "FeatureBranchesCodeStarCodePipelineRole77490095": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "codepipeline.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "FeatureBranchesCodeStarCodePipelineRoleDefaultPolicy772BBFFE": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
                "s3:PutObject",
                "s3:PutObjectLegalHold",
                "s3:PutObjectRetention",
                "s3:PutObjectTagging",
                "s3:PutObjectVersionTagging",
                "s3:Abort*",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "FeatureBranchesCodeStarArtifactsBucket6B260CE8",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "FeatureBranchesCodeStarArtifactsBucket6B260CE8",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "FeatureBranchesCodeStarCodePipelineSourceownerrepoCodePipelineActionRole09CF4D73",
                  "Arn",
                ],
              },
            },
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "FeatureBranchesCodeStarCodeBuildActionRole86BF08E2",
                  "Arn",
                ],
              },
            },
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":iam::",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":role/cdk-hnb659fds-deploy-role-",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    "-",
                    {
                      "Ref": "AWS::Region",
                    },
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "FeatureBranchesCodeStarCodePipelineRoleDefaultPolicy772BBFFE",
        "Roles": [
          {
            "Ref": "FeatureBranchesCodeStarCodePipelineRole77490095",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "FeatureBranchesCodeStarCodePipelineSourceownerrepoCodePipelineActionRole09CF4D73": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":root",
                    ],
                  ],
                },
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "FeatureBranchesCodeStarCodePipelineSourceownerrepoCodePipelineActionRoleDefaultPolicyE86247D7": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "codestar-connections:UseConnection",
              "Effect": "Allow",
              "Resource": "arn:aws:codestar-connections:region:account:connection/uuid",
            },
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
                "s3:PutObject",
                "s3:PutObjectLegalHold",
                "s3:PutObjectRetention",
                "s3:PutObjectTagging",
                "s3:PutObjectVersionTagging",
                "s3:Abort*",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "FeatureBranchesCodeStarArtifactsBucket6B260CE8",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "FeatureBranchesCodeStarArtifactsBucket6B260CE8",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": [
                "s3:PutObjectAcl",
                "s3:PutObjectVersionAcl",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    {
                      "Fn::GetAtt": [
                        "FeatureBranchesCodeStarArtifactsBucket6B260CE8",
                        "Arn",
                      ],
                    },
                    "/*",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "FeatureBranchesCodeStarCodePipelineSourceownerrepoCodePipelineActionRoleDefaultPolicyE86247D7",
        "Roles": [
          {
            "Ref": "FeatureBranchesCodeStarCodePipelineSourceownerrepoCodePipelineActionRole09CF4D73",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "FeatureBranchesCodeStarFeatureBranchPipelinesFeaturePipeline4E12EE8B": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": {
        "Artifacts": {
          "Type": "NO_ARTIFACTS",
        },
        "Cache": {
          "Type": "NO_CACHE",
        },
        "EncryptionKey": "alias/aws/s3",
        "Environment": {
          "ComputeType": "BUILD_GENERAL1_SMALL",
          "Image": "aws/codebuild/standard:7.0",
          "ImagePullCredentialsType": "CODEBUILD",
          "PrivilegedMode": false,
          "Type": "LINUX_CONTAINER",
        },
        "ServiceRole": {
          "Fn::GetAtt": [
            "FeatureBranchesCodeStarFeatureBranchPipelinesFeaturePipelineRoleBA28BF96",
            "Arn",
          ],
        },
        "Source": {
          "BuildSpec": "{
  "version": "0.2",
  "phases": {
    "install": {
      "commands": [
        "npm install -g aws-cdk pnpm",
        "npx projen install"
      ]
    },
    "build": {
      "commands": [
        "git branch -a",
        "export BRANCH=\\"$(git rev-parse --abbrev-ref HEAD)\\"",
        "npx projen deploy"
      ]
    }
  }
}",
          "Type": "NO_SOURCE",
        },
      },
      "Type": "AWS::CodeBuild::Project",
    },
    "FeatureBranchesCodeStarFeatureBranchPipelinesFeaturePipelineRoleBA28BF96": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "codebuild.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "FeatureBranchesCodeStarFeatureBranchPipelinesFeaturePipelineRoleDefaultPolicyEE655021": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "logs:CreateLogGroup",
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":logs:",
                      {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":log-group:/aws/codebuild/",
                      {
                        "Ref": "FeatureBranchesCodeStarFeatureBranchPipelinesFeaturePipeline4E12EE8B",
                      },
                    ],
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":logs:",
                      {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":log-group:/aws/codebuild/",
                      {
                        "Ref": "FeatureBranchesCodeStarFeatureBranchPipelinesFeaturePipeline4E12EE8B",
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": [
                "codebuild:CreateReportGroup",
                "codebuild:CreateReport",
                "codebuild:UpdateReport",
                "codebuild:BatchPutTestCases",
                "codebuild:BatchPutCodeCoverages",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":codebuild:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":report-group/",
                    {
                      "Ref": "FeatureBranchesCodeStarFeatureBranchPipelinesFeaturePipeline4E12EE8B",
                    },
                    "-*",
                  ],
                ],
              },
            },
            {
              "Action": [
                "sts:AssumeRole",
                "cloudformation:*",
                "iam:*",
                "s3:*",
                "ecr:*",
                "ec2:*",
                "ssm:*",
                "codebuild:*",
                "codecommit:*",
                "codestar-connections:*",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "FeatureBranchesCodeStarFeatureBranchPipelinesFeaturePipelineRoleDefaultPolicyEE655021",
        "Roles": [
          {
            "Ref": "FeatureBranchesCodeStarFeatureBranchPipelinesFeaturePipelineRoleBA28BF96",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "FeatureBranchesCodeStarUpdatePipelineSelfMutationD4CB1AF1": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": {
        "Artifacts": {
          "Type": "CODEPIPELINE",
        },
        "Cache": {
          "Type": "NO_CACHE",
        },
        "Description": "Pipeline step Default/CodePipeline/UpdatePipeline/SelfMutate",
        "EncryptionKey": "alias/aws/s3",
        "Environment": {
          "ComputeType": "BUILD_GENERAL1_SMALL",
          "Image": "aws/codebuild/standard:7.0",
          "ImagePullCredentialsType": "CODEBUILD",
          "PrivilegedMode": false,
          "Type": "LINUX_CONTAINER",
        },
        "ServiceRole": {
          "Fn::GetAtt": [
            "FeatureBranchesCodeStarUpdatePipelineSelfMutationRole382B00A5",
            "Arn",
          ],
        },
        "Source": {
          "BuildSpec": "{
  "version": "0.2",
  "phases": {
    "install": {
      "commands": [
        "npm install -g aws-cdk@2"
      ]
    },
    "build": {
      "commands": [
        "cdk -a . deploy Default --require-approval=never --verbose"
      ]
    }
  }
}",
          "Type": "CODEPIPELINE",
        },
      },
      "Type": "AWS::CodeBuild::Project",
    },
    "FeatureBranchesCodeStarUpdatePipelineSelfMutationRole382B00A5": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "codebuild.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "FeatureBranchesCodeStarUpdatePipelineSelfMutationRoleDefaultPolicyCC1C0FC1": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "logs:CreateLogGroup",
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":logs:",
                      {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":log-group:/aws/codebuild/",
                      {
                        "Ref": "FeatureBranchesCodeStarUpdatePipelineSelfMutationD4CB1AF1",
                      },
                    ],
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":logs:",
                      {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":log-group:/aws/codebuild/",
                      {
                        "Ref": "FeatureBranchesCodeStarUpdatePipelineSelfMutationD4CB1AF1",
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": [
                "codebuild:CreateReportGroup",
                "codebuild:CreateReport",
                "codebuild:UpdateReport",
                "codebuild:BatchPutTestCases",
                "codebuild:BatchPutCodeCoverages",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":codebuild:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":report-group/",
                    {
                      "Ref": "FeatureBranchesCodeStarUpdatePipelineSelfMutationD4CB1AF1",
                    },
                    "-*",
                  ],
                ],
              },
            },
            {
              "Action": "sts:AssumeRole",
              "Condition": {
                "ForAnyValue:StringEquals": {
                  "iam:ResourceTag/aws-cdk:bootstrap-role": [
                    "image-publishing",
                    "file-publishing",
                    "deploy",
                  ],
                },
              },
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:*:iam::",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":role/*",
                  ],
                ],
              },
            },
            {
              "Action": "cloudformation:DescribeStacks",
              "Effect": "Allow",
              "Resource": "*",
            },
            {
              "Action": "s3:ListBucket",
              "Effect": "Allow",
              "Resource": "*",
            },
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "FeatureBranchesCodeStarArtifactsBucket6B260CE8",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "FeatureBranchesCodeStarArtifactsBucket6B260CE8",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "FeatureBranchesCodeStarUpdatePipelineSelfMutationRoleDefaultPolicyCC1C0FC1",
        "Roles": [
          {
            "Ref": "FeatureBranchesCodeStarUpdatePipelineSelfMutationRole382B00A5",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
  },
  "Rules": {
    "CheckBootstrapVersion": {
      "Assertions": [
        {
          "Assert": {
            "Fn::Not": [
              {
                "Fn::Contains": [
                  [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;
